{"https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:CqsiOOvXZmUC": {"external_link": "https://arxiv.org/abs/1707.05005", "authors": ["Annamalai Narayanan", "Mahinthan Chandramohan", "Rajasekar Venkatesan", "Lihui Chen", "Yang Liu", "Shantanu Jaiswal"], "publication_date": "2017/7/17", "journal": "arXiv preprint arXiv:1707.05005", "description": "Recent works on representation learning for graph structured data predominantly focus on learning distributed representations of graph substructures such as nodes and subgraphs. However, many graph analytics tasks such as graph classification and clustering require representing entire graphs as fixed length feature vectors. While the aforementioned approaches are naturally unequipped to learn such representations, graph kernels remain as the most effective way of obtaining them. However, these graph kernels use handcrafted features (e.g., shortest paths, graphlets, etc.) and hence are hampered by problems such as poor generalization. To address this limitation, in this work, we propose a neural embedding framework named graph2vec to learn data-driven distributed representations of arbitrary sized graphs. graph2vec's embeddings are learnt in an unsupervised manner and are task agnostic. Hence, they could be used for any downstream task such as graph classification, clustering and even seeding supervised representation learning approaches. Our experiments on several benchmark and large real-world datasets show that graph2vec achieves significant improvements in classification and clustering accuracies over substructure representation learning approaches and are competitive with state-of-the-art graph kernels.", "total_citations": {"2017": 2, "2018": 21, "2019": 70, "2020": 98, "2021": 153, "2022": 198, "2023": 157}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:rywEMSoAiS0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9000651/", "authors": ["Jie M Zhang", "Mark Harman", "Lei Ma", "Yang Liu"], "publication_date": "2020/2/17", "journal": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "description": "This paper provides a comprehensive survey of techniques for testing machine learning systems; Machine Learning Testing (ML testing) research. It covers 144 papers on testing properties (e.g., correctness, robustness, and fairness), testing components (e.g., the data, learning program, and framework), testing workflow (e.g., test generation and test evaluation), and application scenarios (e.g., autonomous driving, machine translation). The paper also analyses trends concerning datasets, research trends, and research focus, concluding with research challenges and promising research directions in ML testing.", "total_citations": {"2019": 16, "2020": 116, "2021": 171, "2022": 218, "2023": 178}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:bJZ_LSxkz4EC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3238147.3238202", "authors": ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "publication_date": "2018/9/3", "conference": "Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering", "pages": "120-131", "publisher": "ACM", "description": "Deep learning (DL) defines a new data-driven programming paradigm that constructs the internal system logic of a crafted neuron network through a set of training data. We have seen wide adoption of DL in many safety-critical scenarios. However, a plethora of studies have shown that the state-of-the-art DL systems suffer from various vulnerabilities which can lead to severe consequences when applied to real-world applications. Currently, the testing adequacy of a DL system is usually measured by the accuracy of test data. Considering the limitation of accessible high quality test data, good accuracy performance on test data can hardly provide confidence to the testing adequacy and generality of DL systems. Unlike traditional software systems that have clear and controllable logic and functionality, the lack of interpretability in a DL system makes system analysis and defect detection difficult, which could\u00a0\u2026", "total_citations": {"2018": 21, "2019": 84, "2020": 120, "2021": 116, "2022": 128, "2023": 126}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:qaiyjGHpP8sC": {"external_link": "https://proceedings.neurips.cc/paper_files/paper/2019/hash/49265d2447bc3bbfe9e76306ce40a31f-Abstract.html", "authors": ["Yaqin Zhou", "Shangqing Liu", "Jingkai Siow", "Xiaoning Du", "Yang Liu"], "publication_date": "2019", "conference": "Advances in Neural Information Processing Systems", "pages": "10197-10207", "description": "Vulnerability identification is crucial to protect the software systems from attacks for cyber security. It is especially important to localize the vulnerable functions among the source code to facilitate the fix. However, it is a challenging and tedious process, and also requires specialized security expertise. Inspired by the work on manually-defined patterns of vulnerabilities from various code representation graphs and the recent advance on graph neural networks, we propose Devign, a general graph neural network based model for graph-level classification through learning on a rich set of code semantic representations. It includes a novel Conv module to efficiently extract useful features in the learned rich node representations for graph-level classification. The model is trained over manually labeled datasets built on 4 diversified large-scale open-source C projects that incorporate high complexity and variety of real source code instead of synthesis code used in previous works. The results of the extensive evaluation on the datasets demonstrate that Devign outperforms the state of the arts significantly with an average of 10.51% higher accuracy and 8.68% F1 score, increases averagely 4.66% accuracy and 6.37% F1 by the Conv module.", "total_citations": {"2019": 2, "2020": 27, "2021": 82, "2022": 166, "2023": 227}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:hcF2OqvMasEC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-02658-4_59", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Jun Pang"], "publication_date": "2009", "conference": "Computer Aided Verification: 21st International Conference, CAV 2009, Grenoble, France, June 26-July 2, 2009. Proceedings 21", "pages": "709-714", "publisher": "Springer Berlin Heidelberg", "description": "Recent development on distributed systems has shown that a variety of fairness constraints (some of which are only recently defined) play vital roles in designing self-stabilizing population protocols. Current practice of system analysis is, however, deficient under fairness. In this work, we present PAT, a toolkit for flexible and efficient system analysis under fairness. A unified algorithm is proposed to model check systems with a variety of fairness effectively in two different settings. Empirical evaluation shows that PAT complements existing model checkers in terms of fairness. We report that previously unknown bugs have been revealed using PAT against systems functioning under strong global fairness.", "total_citations": {"2008": 2, "2009": 14, "2010": 29, "2011": 32, "2012": 42, "2013": 48, "2014": 40, "2015": 45, "2016": 34, "2017": 33, "2018": 36, "2019": 19, "2020": 31, "2021": 24, "2022": 31, "2023": 21}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:X5QHDg3V9EEC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3293882.3330579", "authors": ["Xiaofei Xie", "Lei Ma", "Felix Juefei-Xu", "Minhui Xue", "Hongxu Chen", "Yang Liu", "Jianjun Zhao", "Bo Li", "Jianxiong Yin", "Simon See"], "publication_date": "2019/7/10", "conference": "Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "146-157", "publisher": "ACM", "description": "The past decade has seen the great potential of applying deep neural network (DNN) based software to safety-critical scenarios, such as autonomous driving. Similar to traditional software, DNNs could exhibit incorrect behaviors, caused by hidden defects, leading to severe accidents and losses. In this paper, we propose DeepHunter, a coverage-guided fuzz testing framework for detecting potential defects of general-purpose DNNs. To this end, we first propose a metamorphic mutation strategy to generate new semantically preserved tests, and leverage multiple extensible coverage criteria as feedback to guide the test generation. We further propose a seed selection strategy that combines both diversity-based and recency-based seed selection. We implement and incorporate 5 existing testing criteria and 4 seed selection strategies in DeepHunter. Large-scale experiments demonstrate that (1) our metamorphic\u00a0\u2026", "total_citations": {"2018": 1, "2019": 23, "2020": 60, "2021": 85, "2022": 97, "2023": 93}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:GL0K47J-u9kC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8539073/", "authors": ["Lei Ma", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Felix Juefei-Xu", "Chao Xie", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "publication_date": "2018/10", "conference": "The 29th IEEE International Symposium on Software Reliability Engineering (ISSRE 2018)", "pages": "100-111", "description": "Deep learning (DL) defines a new data-driven programming paradigm where the internal system logic is largely shaped by the training data. The standard way of evaluating DL models is to examine their performance on a test dataset. The quality of the test dataset is of great importance to gain confidence of the trained models. Using an inadequate test dataset, DL models that have achieved high test accuracy may still lack generality and robustness. In traditional software testing, mutation testing is a well-established technique for quality evaluation of test suites, which analyzes to what extent a test suite detects the injected faults. However, due to the fundamental difference between traditional software and deep learning-based software, traditional mutation testing techniques cannot be directly applied to DL systems. In this paper, we propose a mutation testing framework specialized for DL systems to measure the\u00a0\u2026", "total_citations": {"2018": 13, "2019": 48, "2020": 67, "2021": 76, "2022": 80, "2023": 53}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:7Pm5v_kJJ6IC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7958599/", "authors": ["Junjie Wang", "Bihuan Chen", "Lei Wei", "Yang Liu"], "publication_date": "2017/5/22", "conference": "2017 IEEE Symposium on Security and Privacy (SP)", "pages": "579-594", "publisher": "IEEE", "description": "Programs that take highly-structured files as inputs normally process inputs in stages: syntax parsing, semantic checking, and application execution. Deep bugs are often hidden in the application execution stage, and it is non-trivial to automatically generate test inputs to trigger them. Mutation-based fuzzing generates test inputs by modifying well-formed seed inputs randomly or heuristically. Most inputs are rejected at the early syntax parsing stage. Differently, generation-based fuzzing generates inputs from a specification (e.g., grammar). They can quickly carry the fuzzing beyond the syntax parsing stage. However, most inputs fail to pass the semantic checking (e.g., violating semantic rules), which restricts their capability of discovering deep bugs. In this paper, we propose a novel data-driven seed generation approach, named Skyfire, which leverages the knowledge in the vast amount of existing samples to\u00a0\u2026", "total_citations": {"2017": 5, "2018": 34, "2019": 60, "2020": 51, "2021": 56, "2022": 62, "2023": 58}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:afceBpUbn5YC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3106237.3106295", "authors": ["Yuekang Li", "Bihuan Chen", "Mahinthan Chandramohan", "Shang-Wei Lin", "Yang Liu", "Alwen Tiu"], "publication_date": "2017/8/21", "conference": "Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering", "pages": "627-637", "publisher": "ACM", "description": "Coverage-based fuzzing is one of the most effective techniques to find vulnerabilities, bugs or crashes. However, existing techniques suffer from the difficulty in exercising the paths that are protected by magic bytes comparisons (e.g., string equality comparisons). Several approaches have been proposed to use heavy-weight program analysis to break through magic bytes comparisons, and hence are less scalable. In this paper, we propose a program-state based binary fuzzing approach, named Steelix, which improves the penetration power of a fuzzer at the cost of an acceptable slow down of the execution speed. In particular, we use light-weight static analysis and binary instrumentation to provide not only coverage information but also comparison progress information to a fuzzer. Such program state information informs a fuzzer about where the magic bytes are located in the test input and how to perform\u00a0\u2026", "total_citations": {"2016": 1, "2017": 2, "2018": 36, "2019": 52, "2020": 64, "2021": 57, "2022": 58, "2023": 45}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:3yMDF_cvnR8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3106237.3106298", "authors": ["Ting Su", "Guozhu Meng", "Yuting Chen", "Ke Wu", "Weiming Yang", "Yao Yao", "Geguang Pu", "Yang Liu", "Zhendong Su"], "publication_date": "2017/8/21", "conference": "Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering", "pages": "245-256", "publisher": "ACM", "description": "Mobile apps are ubiquitous, operate in complex environments and are developed under the time-to-market pressure. Ensuring their correctness and reliability thus becomes an important challenge. This paper introduces Stoat, a novel guided approach to perform stochastic model-based testing on Android apps. Stoat operates in two phases: (1) Given an app as input, it uses dynamic analysis enhanced by a weighted UI exploration strategy and static analysis to reverse engineer a stochastic model of the app's GUI interactions; and (2) it adapts Gibbs sampling to iteratively mutate/refine the stochastic model and guides test generation from the mutated models toward achieving high code and model coverage and exhibiting diverse sequences. During testing, system-level events are randomly injected to further enhance the testing effectiveness.   Stoat was evaluated on 93 open-source apps. The results show (1) the\u00a0\u2026", "total_citations": {"2017": 3, "2018": 24, "2019": 59, "2020": 49, "2021": 50, "2022": 60, "2023": 56}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:6DS7WFnF4J4C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3243734.3243849", "authors": ["Hongxu Chen", "Yinxing Xue", "Yuekang Li", "Bihuan Chen", "Xiaofei Xie", "Xiuheng Wu", "Yang Liu"], "publication_date": "2018/10/15", "conference": "Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security", "pages": "2095-2108", "publisher": "ACM", "description": "Grey-box fuzzing is a practically effective approach to test real-world programs. However, most existing grey-box fuzzers lack directedness, i.e. the capability of executing towards user-specified target sites in the program. To emphasize existing challenges in directed fuzzing, we propose Hawkeye to feature four desired properties of directed grey-box fuzzers. Owing to a novel static analysis on the program under test and the target sites, Hawkeye precisely collects the information such as the call graph, function and basic block level distances to the targets. During fuzzing, Hawkeye evaluates exercised seeds based on both static information and the execution traces to generate the dynamic metrics, which are then used for seed prioritization, power scheduling and adaptive mutating. These strategies help Hawkeye to achieve better directedness and gravitate towards the target sites. We implemented Hawkeye as a\u00a0\u2026", "total_citations": {"2018": 5, "2019": 28, "2020": 42, "2021": 39, "2022": 55, "2023": 59}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:u-x6o8ySG0sC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-540-88479-8_22", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2009", "journal": "Leveraging Applications of Formal Methods, Verification and Validation", "pages": "307-322", "publisher": "Springer Berlin Heidelberg", "description": "FDR, initially introduced decades ago, is the de facto analyzer for Communicating Sequential Processes (CSP). Model checking techniques have been evolved rapidly since then. This paper describes Pat, i.e., a process analysis toolkit which complements FDR in several aspects. Pat is designed to analyze event-based compositional system models specified using CSP as well as shared variables and asynchronous message passing. It supports automated refinement checking, model checking of LTL extended with events, etc. In this paper, we highlight how partial order reduction is applied to improve refinement checking in Pat. Experiment results show that Pat outperforms FDR in some cases.", "total_citations": {"2007": 1, "2008": 1, "2009": 12, "2010": 19, "2011": 16, "2012": 22, "2013": 16, "2014": 19, "2015": 23, "2016": 21, "2017": 7, "2018": 15, "2019": 7, "2020": 18, "2021": 8, "2022": 6, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:lX_RDcPAamoC": {"external_link": "https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/liu", "authors": ["Yang Liu", "Armin Sarabi", "Jing Zhang", "Parinaz Naghizadeh", "Manish Karir", "Michael Bailey", "Mingyan Liu"], "publication_date": "2015", "conference": "24th {USENIX} Security Symposium ({USENIX} Security 15)", "pages": "1009-1024", "description": "In this study we characterize the extent to which cyber security incidents, such as those referenced by Verizon in its annual Data Breach Investigations Reports (DBIR), can be predicted based on externally observable properties of an organization\u2019s network. We seek to proactively forecast an organization\u2019s breaches and to do so without cooperation of the organization itself. To accomplish this goal, we collect 258 externally measurable features about an organization\u2019s network from two main categories: mismanagement symptoms, such as misconfigured DNS or BGP within a network, and malicious activity time series, which include spam, phishing, and scanning activity sourced from these organizations. Using these features we train and test a Random Forest (RF) classifier against more than 1,000 incident reports taken from the VERIS community database, Hackmageddon, and theWeb Hacking Incidents Database that cover events from mid-2013 to the end of 2014. The resulting classifier is able to achieve a 90% True Positive (TP) rate, a 10% False Positive (FP) rate, and an overall 90% accuracy.", "total_citations": {"2015": 5, "2016": 13, "2017": 19, "2018": 33, "2019": 41, "2020": 28, "2021": 39, "2022": 24, "2023": 21}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:Cew3JUE5alsC": {"external_link": "https://arxiv.org/abs/1909.06122", "authors": ["Run Wang", "Felix Juefei-Xu", "Lei Ma", "Xiaofei Xie", "Yihao Huang", "Jian Wang", "Yang Liu"], "publication_date": "2019/9/13", "journal": "arXiv preprint arXiv:1909.06122", "description": "In recent years, generative adversarial networks (GANs) and its variants have achieved unprecedented success in image synthesis. They are widely adopted in synthesizing facial images which brings potential security concerns to humans as the fakes spread and fuel the misinformation. However, robust detectors of these AI-synthesized fake faces are still in their infancy and are not ready to fully tackle this emerging challenge. In this work, we propose a novel approach, named FakeSpotter, based on monitoring neuron behaviors to spot AI-synthesized fake faces. The studies on neuron coverage and interactions have successfully shown that they can be served as testing criteria for deep learning systems, especially under the settings of being exposed to adversarial attacks. Here, we conjecture that monitoring neuron behavior can also serve as an asset in detecting fake faces since layer-by-layer neuron activation patterns may capture more subtle features that are important for the fake detector. Experimental results on detecting four types of fake faces synthesized with the state-of-the-art GANs and evading four perturbation attacks show the effectiveness and robustness of our approach.", "total_citations": {"2019": 3, "2020": 36, "2021": 57, "2022": 65, "2023": 53}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:MwdXMY9cq6YC": {"external_link": "https://arxiv.org/abs/1606.08928", "authors": ["Annamalai Narayanan", "Mahinthan Chandramohan", "Lihui Chen", "Yang Liu", "Santhoshkumar Saminathan"], "publication_date": "2016/6/29", "journal": "arXiv preprint arXiv:1606.08928", "description": "In this paper, we present subgraph2vec, a novel approach for learning latent representations of rooted subgraphs from large graphs inspired by recent advancements in Deep Learning and Graph Kernels. These latent representations encode semantic substructure dependencies in a continuous vector space, which is easily exploited by statistical models for tasks such as graph classification, clustering, link prediction and community detection. subgraph2vec leverages on local information obtained from neighbourhoods of nodes to learn their latent representations in an unsupervised fashion. We demonstrate that subgraph vectors learnt by our approach could be used in conjunction with classifiers such as CNNs, SVMs and relational data clustering algorithms to achieve significantly superior accuracies. Also, we show that the subgraph vectors could be used for building a deep learning variant of Weisfeiler-Lehman graph kernel. Our experiments on several benchmark and large-scale real-world datasets reveal that subgraph2vec achieves significant improvements in accuracies over existing graph kernels on both supervised and unsupervised learning tasks. Specifically, on two realworld program analysis tasks, namely, code clone and malware detection, subgraph2vec outperforms state-of-the-art kernels by more than 17% and 4%, respectively.", "total_citations": {"2016": 2, "2017": 25, "2018": 29, "2019": 40, "2020": 41, "2021": 29, "2022": 21, "2023": 15}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:7ioeYXKzaWoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7299317/", "authors": ["Sanjeev Das", "Yang Liu", "Wei Zhang", "Mahintham Chandramohan"], "publication_date": "2015/10/15", "journal": "IEEE transactions on information forensics and security", "volume": "11", "issue": "2", "pages": "289-302", "publisher": "IEEE", "description": "Recently, malware has increasingly become a critical threat to embedded systems, while the conventional software solutions, such as antivirus and patches, have not been so successful in defending the ever-evolving and advanced malicious programs. In this paper, we propose a hardware-enhanced architecture, GuardOL, to perform online malware detection. GuardOL is a combined approach using processor and field-programmable gate array (FPGA). Our approach aims to capture the malicious behavior (i.e., high-level semantics) of malware. To this end, we first propose the frequency-centric model for feature construction using system call patterns of known malware and benign samples. We then develop a machine learning approach (using multilayer perceptron) in FPGA to train classifier using these features. At runtime, the trained classifier is used to classify the unknown samples as malware or benign, with\u00a0\u2026", "total_citations": {"2016": 9, "2017": 18, "2018": 31, "2019": 34, "2020": 32, "2021": 34, "2022": 31, "2023": 16}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:zMY8q35v6VMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8811923/", "authors": ["Junjie Wang", "Bihuan Chen", "Lei Wei", "Yang Liu"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)", "pages": "724-735", "publisher": "IEEE", "description": "In recent years, coverage-based greybox fuzzing has proven itself to be one of the most effective techniques for finding security bugs in practice. Particularly, American Fuzzy Lop (AFL for short) is deemed to be a great success in fuzzing relatively simple test inputs. Unfortunately, when it meets structured test inputs such as XML and JavaScript, those grammar-blind trimming and mutation strategies in AFL hinder the effectiveness and efficiency. To this end, we propose a grammar-aware coverage-based greybox fuzzing approach to fuzz programs that process structured inputs. Given the grammar (which is often publicly available) of test inputs, we introduce a grammar-aware trimming strategy to trim test inputs at the tree level using the abstract syntax trees (ASTs) of parsed test inputs. Further, we introduce two grammar-aware mutation strategies (i.e., enhanced dictionary-based mutation and tree-based mutation\u00a0\u2026", "total_citations": {"2018": 1, "2019": 15, "2020": 33, "2021": 52, "2022": 40, "2023": 53}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:DXM8KF1schAC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2950290.2950350", "authors": ["Mahinthan Chandramohan", "Yinxing Xue", "Zhengzi Xu", "Yang Liu", "Chia Yuan Cho", "Hee Beng Kuan Tan"], "publication_date": "2016", "conference": "Proceedings of the 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering", "pages": "678-689", "publisher": "ACM", "description": "Binary code search has received much attention recently due to its impactful applications, e.g., plagiarism detection, malware detection and software vulnerability auditing. However, developing an effective binary code search tool is challenging due to the gigantic syntax and structural differences in binaries resulted from different compilers, architectures and OSs. In this paper, we propose BINGO \u2014 a scalable and robust binary search engine supporting various architectures and OSs. The key contribution is a selective inlining technique to capture the complete function semantics by inlining relevant library and user-defined functions. In addition, architecture and OS neutral function filtering is proposed to dramatically reduce the irrelevant target functions. Besides, we introduce length variant partial traces to model binary functions in a program structure agnostic fashion. The experimental results show that BINGO can\u00a0\u2026", "total_citations": {"2017": 10, "2018": 17, "2019": 21, "2020": 18, "2021": 30, "2022": 51, "2023": 35}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:Pptk7XUfJl0C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3180155.3180240", "authors": ["Chunyang Chen", "Ting Su", "Guozhu Meng", "Zhenchang Xing", "Yang Liu"], "publication_date": "2018/5/27", "conference": "Proceedings of the 40th International Conference on Software Engineering", "pages": "665-676", "publisher": "ACM", "description": "A GUI skeleton is the starting point for implementing a UI design image. To obtain a GUI skeleton from a UI design image, developers have to visually understand UI elements and their spatial layout in the image, and then translate this understanding into proper GUI components and their compositions. Automating this visual understanding and translation would be beneficial for bootstraping mobile GUI implementation, but it is a challenging task due to the diversity of UI designs and the complexity of GUI skeletons to generate. Existing tools are rigid as they depend on heuristically-designed visual understanding and GUI generation rules. In this paper, we present a neural machine translator that combines recent advances in computer vision and machine translation for translating a UI design image into a GUI skeleton. Our translator learns to extract visual features in UI images, encode these features' spatial layouts\u00a0\u2026", "total_citations": {"2018": 4, "2019": 21, "2020": 37, "2021": 38, "2022": 51, "2023": 26}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&citation_for_view=_Pvgwd0AAAAJ:abCsMXLaarkC": {"external_link": "https://arxiv.org/abs/1805.06130", "authors": ["Yong Cheng", "Zhaopeng Tu", "Fandong Meng", "Junjie Zhai", "Yang Liu"], "publication_date": "2018/5/16", "journal": "arXiv preprint arXiv:1805.06130", "description": "Small perturbations in the input can severely distort intermediate representations and thus impact translation quality of neural machine translation (NMT) models. In this paper, we propose to improve the robustness of NMT models with adversarial stability training. The basic idea is to make both the encoder and decoder in NMT models robust against input perturbations by enabling them to behave similarly for the original input and its perturbed counterpart. Experimental results on Chinese-English, English-German and English-French translation tasks show that our approaches can not only achieve significant improvements over strong NMT systems but also improve the robustness of NMT models.", "total_citations": {"2018": 5, "2019": 37, "2020": 37, "2021": 39, "2022": 21, "2023": 21}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:FVakaZBJmp0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9519486/", "authors": ["Guangke Chen", "Sen Chenb", "Lingling Fan", "Xiaoning Du", "Zhe Zhao", "Fu Song", "Yang Liu"], "publication_date": "2021/5/24", "conference": "2021 IEEE Symposium on Security and Privacy (SP)", "pages": "694-711", "publisher": "IEEE", "description": "Speaker recognition (SR) is widely used in our daily life as a biometric authentication or identification mechanism. The popularity of SR brings in serious security concerns, as demonstrated by recent adversarial attacks. However, the impacts of such threats in the practical black-box setting are still open, since current attacks consider the white-box setting only.In this paper, we conduct the first comprehensive and systematic study of the adversarial attacks on SR systems (SRSs) to understand their security weakness in the practical black-box setting. For this purpose, we propose an adversarial attack, named FAKEBOB, to craft adversarial samples. Specifically, we formulate the adversarial sample generation as an optimization problem, incorporated with the confidence of adversarial samples and maximal distortion to balance between the strength and imperceptibility of adversarial voices. One key contribution is to\u00a0\u2026", "total_citations": {"2020": 11, "2021": 37, "2022": 56, "2023": 53}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:zDAX0LUT-dsC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3394171.3413707", "authors": ["Hua Qi", "Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Lei Ma", "Wei Feng", "Yang Liu", "Jianjun Zhao"], "publication_date": "2020/10/12", "book": "Proceedings of the 28th ACM International Conference on Multimedia", "pages": "4318-4327", "description": "As the GAN-based face image and video generation techniques, widely known as DeepFakes, have become more and more matured and realistic, there comes a pressing and urgent demand for effective DeepFakes detectors. Motivated by the fact that remote visual photoplethysmography (PPG) is made possible by monitoring the minuscule periodic changes of skin color due to blood pumping through the face, we conjecture that normal heartbeat rhythms found in the real face videos will be disrupted or even entirely broken in a DeepFake video, making it a potentially powerful indicator for DeepFake detection. In this work, we propose DeepRhythm, a DeepFake detection technique that exposes DeepFakes by monitoring the heartbeat rhythms. DeepRhythm utilizes dual-spatial-temporal attention to adapt to dynamically changing face and fake types. Extensive experiments on FaceForensics++ and DFDC-preview\u00a0\u2026", "total_citations": {"2020": 15, "2021": 30, "2022": 55, "2023": 52}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:Id9pRtCSqO0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8668044/", "authors": ["Lei Ma", "Felix Juefei-Xu", "Minhui Xue", "Bo Li", "Li Li", "Yang Liu", "Jianjun Zhao"], "publication_date": "2019/2/24", "conference": "2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)", "pages": "614-618", "publisher": "IEEE", "description": "Deep learning (DL) has achieved remarkable progress over the past decade and has been widely applied to many industry domains. However, the robustness of DL systems recently becomes great concerns, where minor perturbation on the input might cause the DL malfunction. These robustness issues could potentially result in severe consequences when a DL system is deployed to safety-critical applications and hinder the real-world deployment of DL systems. Testing techniques enable the robustness evaluation and vulnerable issue detection of a DL system at an early stage. The main challenge of testing a DL system attributes to the high dimensionality of its inputs and large internal latent feature space, which makes testing each state almost impossible. For traditional software, combinatorial testing (CT) is an effective testing technique to balance the testing exploration effort and defect detection capabilities\u00a0\u2026", "total_citations": {"2018": 2, "2019": 15, "2020": 27, "2021": 40, "2022": 31, "2023": 36}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:ZzlSgRqYykMC": {"external_link": "https://ink.library.smu.edu.sg/sis_research/5008/", "authors": ["Guangdong Bai", "Jike Lei", "Guozhu Meng", "Sai Sathyanarayan Venkatraman", "Prateek Saxena", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2013/2", "journal": "Proceedings of the 20th Annual Network and Distributed System Security Symposium (NDSS\u201913), San Diego, CA, USA", "volume": "7", "description": "Ideally, security protocol implementations should be formally verified before they are deployed. However, this is not true in practice. Numerous high-profile vulnerabilities have been found in web authentication protocol implementations, especially in single-sign on (SSO) protocols implementations recently. Much of the prior work on authentication protocol verification has focused on theoretical foundations and building scalable verification tools for checking manually-crafted specifications [17, 18, 44]. In this paper, we address a complementary problem of automatically extracting specifications from implementations. We propose AUTHSCAN, an end-to-end platform to automatically recover authentication protocol specifications from their implementations. AUTHSCAN finds a total of 7 security vulnerabilities using off-the-shelf verification tools in specifications it recovers, which include SSO protocol implementations and custom web authentication logic of web sites with millions of users.", "total_citations": {"2012": 2, "2013": 9, "2014": 24, "2015": 24, "2016": 14, "2017": 15, "2018": 18, "2019": 7, "2020": 7, "2021": 10, "2022": 13, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:MLfJN-KU85MC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5198495/", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Chunqing Chen"], "publication_date": "2009/7/29", "conference": "Theoretical Aspects of Software Engineering, 2009. TASE 2009. Third IEEE International Symposium on", "pages": "127-135", "publisher": "IEEE", "description": "High level specification languages like CSP use mathematical objects as abstractions to represent systems and processes. System behaviors are described as process expressions combined with compositional operators, which are associated with elegant algebraic laws for system analysis. Nonetheless, modeling systems with non-trivial data and functional aspects using CSP remains difficult. In this work, we propose a modeling language named CSP# (short for communicating sequential programs) which integrates high-level modeling operators with low-level procedural codes, for the purpose of efficient mechanical system verification. We demonstrate that data operations can be modeled as terminating sequential programs, which can be composed using high-level compositional operators. CSP# is supported by the PAT model checker and has been applied to a number of systems.", "total_citations": {"2008": 2, "2009": 6, "2010": 14, "2011": 9, "2012": 18, "2013": 18, "2014": 14, "2015": 7, "2016": 5, "2017": 2, "2018": 10, "2019": 3, "2020": 6, "2021": 6, "2022": 9, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:nYc7v9NCwtsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7985685/", "authors": ["Zhengzi Xu", "Bihuan Chen", "Mahinthan Chandramohan", "Yang Liu", "Fu Song"], "publication_date": "2017/5/20", "conference": "2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE)", "pages": "462-472", "publisher": "IEEE", "description": "Software vulnerability is one of the major threats to software security. Once discovered, vulnerabilities are often fixed by applying security patches. In that sense, security patches carry valuable information about vulnerabilities, which could be used to discover, understand and fix (similar) vulnerabilities. However, most existing patch analysis approaches work at the source code level, while binary-level patch analysis often heavily relies on a lot of human efforts and expertise. Even worse, some vulnerabilities may be secretly patched without applying CVE numbers, or only the patched binary programs are available while the patches are not publicly released. These practices greatly hinder patch analysis and vulnerability analysis. In this paper, we propose a scalable binary-level patch analysis framework, named SPAIN, which can automatically identify security patches and summarize patch patterns and their\u00a0\u2026", "total_citations": {"2017": 1, "2018": 5, "2019": 16, "2020": 19, "2021": 30, "2022": 37, "2023": 31}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:wNvz2w4be3AC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3338906.3338954", "authors": ["Xiaoning Du", "Xiaofei Xie", "Yi Li", "Lei Ma", "Yang Liu", "Jianjun Zhao"], "publication_date": "2019/8/12", "book": "Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "pages": "477-487", "description": "Deep Learning (DL) has achieved tremendous success in many cutting-edge applications. However, the state-of-the-art DL systems still suffer from quality issues. While some recent progress has been made on the analysis of feed-forward DL systems, little study has been done on the Recurrent Neural Network (RNN)-based stateful DL systems, which are widely used in audio, natural languages and video processing, etc. In this paper, we initiate the very first step towards the quantitative analysis of RNN-based DL systems. We model RNN as an abstract state transition system to characterize its internal behaviors. Based on the abstract model, we design two trace similarity metrics and five coverage criteria which enable the quantitative analysis of RNNs. We further propose two algorithms powered by the quantitative measures for adversarial sample detection and coverage-guided test generation. We evaluate\u00a0\u2026", "total_citations": {"2019": 17, "2020": 35, "2021": 31, "2022": 30, "2023": 24}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:5nxA0vEk-isC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6132967/", "authors": ["Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2011", "journal": "The 22nd annual International Symposium on Software Reliability Engineering (ISSRE 2011)", "description": "Model checking is emerging as an effective software verification method. Although it is desirable to have a dedicated model checker for each application domain, implementing one is rather challenging. In this work, we develop an extensible and integrated architecture in PAT3 (PAT version 3.*) to support the development of model checkers for wide range application domains. PAT3 adopts a layered design with an intermediate representation layer (IRL), which separates modeling languages from model checking algorithms so that the algorithms can be shared by different languages. IRL contains several common semantic models to support wide application domains, and builds both explicit model checking and symbolic model checking under one roof. PAT3 architecture provides extensibility in many possible aspects: modeling languages, model checking algorithms, reduction techniques and even IRLs. Various\u00a0\u2026", "total_citations": {"2008": 1, "2009": 0, "2010": 2, "2011": 5, "2012": 16, "2013": 21, "2014": 13, "2015": 9, "2016": 9, "2017": 8, "2018": 6, "2019": 7, "2020": 4, "2021": 13, "2022": 12, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:fiDIZbHD5NAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8952543/", "authors": ["Yan Zheng", "Xiaofei Xie", "Ting Su", "Lei Ma", "Jianye Hao", "Zhaopeng Meng", "Yang Liu", "Ruimin Shen", "Yingfeng Chen", "Changjie Fan"], "publication_date": "2019/11/11", "conference": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "772-784", "publisher": "IEEE", "description": "Game testing has been long recognized as a notoriously challenging task, which mainly relies on manual playing and scripting based testing in game industry. Even until recently, automated game testing still remains to be largely untouched niche. A key challenge is that game testing often requires to play the game as a sequential decision process. A bug may only be triggered until completing certain difficult intermediate tasks, which requires a certain level of intelligence. The recent success of deep reinforcement learning (DRL) sheds light on advancing automated game testing, without human competitive intelligent support. However, the existing DRLs mostly focus on winning the game rather than game testing. To bridge the gap, in this paper, we first perform an in-depth analysis of 1349 real bugs from four real-world commercial game products. Based on this, we propose four oracles to support automated game\u00a0\u2026", "total_citations": {"2019": 1, "2020": 16, "2021": 30, "2022": 47, "2023": 31}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:bgW0xdllhO4C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3464421", "authors": ["Palina Tolmach", "Yi Li", "Shang-Wei Lin", "Yang Liu", "Zengxiang Li"], "publication_date": "2021/7/18", "journal": "ACM Computing Surveys (CSUR)", "volume": "54", "issue": "7", "pages": "1-38", "publisher": "ACM", "description": "A smart contract is a computer program that allows users to automate their actions on the blockchain platform. Given the significance of smart contracts in supporting important activities across industry sectors including supply chain, finance, legal, and medical services, there is a strong demand for verification and validation techniques. Yet, the vast majority of smart contracts lack any kind of formal specification, which is essential for establishing their correctness. In this survey, we investigate formal models and specifications of smart contracts presented in the literature and present a systematic overview to understand the common trends. We also discuss the current approaches used in verifying such property specifications and identify gaps with the hope to recognize promising directions for future work.", "total_citations": {"2020": 2, "2021": 15, "2022": 51, "2023": 44}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:dDz6LBb16w8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3238147.3240480", "authors": ["Jian Gao", "Xin Yang", "Ying Fu", "Yu Jiang", "Jiaguang Sun"], "publication_date": "2018/9/3", "book": "Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering", "pages": "896-899", "description": "Code reuse improves software development efficiency, however, vulnerabilities can be introduced inadvertently. Many existing works compute the code similarity based on CFGs to determine whether a binary function contains a known vulnerability. Unfortunately, their performance in cross-platform binary search is challenged.   This paper presents VulSeeker, a semantic learning based vulnerability seeker for cross-platform binary. Given a target function and a vulnerable function, VulSeeker first constructs the labeled semantic flow graphs and extracts basic block features as numerical vectors for both of them. Then the embedding vector of the whole binary function is generated by feeding the numerical vectors of basic blocks to the customized semantics aware DNN model. Finally, the similarity of the two binary functions is measured based on the Cosine distance. The experimental results show that VulSeeker\u00a0\u2026", "total_citations": {"2018": 4, "2019": 8, "2020": 8, "2021": 21, "2022": 40, "2023": 31}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:iomT83CKXisC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8952401/", "authors": ["Qianyu Guo", "Sen Chen", "Xiaofei Xie", "Lei Ma", "Qiang Hu", "Hongtao Liu", "Yang Liu", "Jianjun Zhao", "Xiaohong Li"], "publication_date": "2019/11/11", "conference": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "810-822", "publisher": "IEEE", "description": "Deep Learning (DL) has recently achieved tremendous success. A variety of DL frameworks and platforms play a key role to catalyze such progress. However, the differences in architecture designs and implementations of existing frameworks and platforms bring new challenges for DL software development and deployment. Till now, there is no study on how various mainstream frameworks and platforms influence both DL software development and deployment in practice. To fill this gap, we take the first step towards understanding how the most widely-used DL frameworks and platforms support the DL software development and deployment. We conduct a systematic study on these frameworks and platforms by using two types of DNN architectures and three popular datasets. (1) For development process, we investigate the prediction accuracy under the same runtime training configuration or same model weights\u00a0\u2026", "total_citations": {"2019": 6, "2020": 17, "2021": 31, "2022": 32, "2023": 25}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:r5Jnz2hFFzMC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3243734.3278519", "authors": ["Jakub Breier", "Xiaolu Hou", "Dirmanto Jap", "Lei Ma", "Shivam Bhasin", "Yang Liu"], "publication_date": "2018/10/15", "journal": "Conference on Computer and Communications Security (CCS\u201918)", "description": "As deep learning systems are widely adopted in safety- and security-critical applications, such as autonomous vehicles, banking systems, etc., malicious faults and attacks become a tremendous concern, which potentially could lead to catastrophic consequences. In this paper, we initiate the first study of leveraging physical fault injection attacks on Deep Neural Networks (DNNs), by using laser injection technique on embedded systems. In particular, our exploratory study targets four widely used activation functions in DNNs development, that are the general main building block of DNNs that creates non-linear behaviors -- ReLu, softmax, sigmoid, and tanh. Our results show that by targeting these functions, it is possible to achieve a misclassification by injecting faults into the hidden layer of the network. Such result can have practical implications for real-world applications, where faults can be introduced by simpler\u00a0\u2026", "total_citations": {"2018": 3, "2019": 8, "2020": 18, "2021": 27, "2022": 32, "2023": 23}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:rbm3iO8VlycC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6363443/", "authors": ["Yang Liu", "Wei Chen", "Yanhong A Liu", "Jun Sun", "Shao Jie Zhang", "Jin Song Dong"], "publication_date": "2013/7", "journal": "IEEE Transactions on Software Engineering", "volume": "39", "issue": "7", "pages": "1018-1039", "publisher": "IEEE", "description": "Linearizability is an important correctness criterion for implementations of concurrent objects. Automatic checking of linearizability is challenging because it requires checking that: (1) All executions of concurrent operations are serializable, and (2) the serialized executions are correct with respect to the sequential semantics. In this work, we describe a method to automatically check linearizability based on refinement relations from abstract specifications to concrete implementations. The method does not require that linearization points in the implementations be given, which is often difficult or impossible. However, the method takes advantage of linearization points if they are given. The method is based on refinement checking of finite-state systems specified as concurrent processes with shared variables. To tackle state space explosion, we develop and apply symmetry reduction, dynamic partial order reduction, and\u00a0\u2026", "total_citations": {"2009": 3, "2010": 9, "2011": 11, "2012": 3, "2013": 13, "2014": 6, "2015": 12, "2016": 8, "2017": 10, "2018": 8, "2019": 2, "2020": 1, "2021": 8, "2022": 3, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:3A6oGT7R4jcC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3180155.3180222", "authors": ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu", "Zhendong Su"], "publication_date": "2018/5", "conference": "The 40th International Conference on Software Engineering (ICSE 2018)", "pages": "408-419", "description": "Mobile apps have become ubiquitous. For app developers, it is a key priority to ensure their apps' correctness and reliability. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to guide developers, or help improve testing and analysis tools. However, such studies do not exist --- this paper fills this gap. Over a four-month long effort, we have collected 16,245 unique exception traces from 2,486 open-source Android apps, and observed that framework-specific exceptions account for the majority of these crashes. We then extensively investigated the 8,243 framework-specific exceptions (which took six person-months): (1) identifying their characteristics (e.g., manifestation locations, common fault categories), (2) evaluating their manifestation via state-of-the-art bug\u00a0\u2026", "total_citations": {"2018": 9, "2019": 23, "2020": 17, "2021": 22, "2022": 10, "2023": 20}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:f8T_-ThkUo0C": {"external_link": "https://arxiv.org/abs/2006.05405", "authors": ["Shangqing Liu", "Yu Chen", "Xiaofei Xie", "Jingkai Siow", "Yang Liu"], "publication_date": "2021", "journal": "International Conference on Learning Representations", "description": "Source code summarization aims to generate natural language summaries from structured code snippets for better understanding code functionalities. However, automatic code summarization is challenging due to the complexity of the source code and the language gap between the source code and natural language summaries. Most previous approaches either rely on retrieval-based (which can take advantage of similar examples seen from the retrieval database, but have low generalization performance) or generation-based methods (which have better generalization performance, but cannot take advantage of similar examples). This paper proposes a novel retrieval-augmented mechanism to combine the benefits of both worlds. Furthermore, to mitigate the limitation of Graph Neural Networks (GNNs) on capturing global graph structure information of source code, we propose a novel attention-based dynamic graph to complement the static graph representation of the source code, and design a hybrid message passing GNN for capturing both the local and global structural information. To evaluate the proposed approach, we release a new challenging benchmark, crawled from diversified large-scale open-source C projects (total 95k+ unique functions in the dataset). Our method achieves the state-of-the-art performance, improving existing methods by 1.42, 2.44 and 1.29 in terms of BLEU-4, ROUGE-L and METEOR.", "total_citations": {"2021": 11, "2022": 38, "2023": 48}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:tgXRM5oPLYQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7470512/", "authors": ["Jacob Wurm", "Yier Jin", "Yang Liu", "Shiyan Hu", "Kenneth Heffner", "Fahim Rahman", "Mark Tehranipoor"], "publication_date": "2016/5/17", "journal": "IEEE Transactions on Multi-Scale Computing Systems", "volume": "3", "issue": "3", "pages": "215-227", "publisher": "IEEE", "description": "Cyber-physical systems (CPS) comprise the backbone of national critical infrastructures such as power grids, transportation systems, home automation systems, etc. Because cyber-physical systems are widely used in these applications, the security considerations of these systems should be of very high importance. Compromise of these systems in critical infrastructure will cause catastrophic consequences. In this paper, we will investigate the security vulnerabilities of currently deployed/implemented cyber-physical systems. Our analysis will be from a cross-layer perspective, ranging from full cyber-physical systems to the underlying hardware platforms. In addition, security solutions are introduced to aid the implementation of security countermeasures into cyber-physical systems by manufacturers. Through these solutions, we hope to alter the mindset of considering security as an afterthought in CPS development\u00a0\u2026", "total_citations": {"2017": 7, "2018": 8, "2019": 17, "2020": 11, "2021": 19, "2022": 21, "2023": 14}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:QUKcMBy53xEC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3377811.3380386", "authors": ["Haijun Wang", "Xiaofei Xie", "Yi Li", "Cheng Wen", "Y Liu", "S Qin", "H Chen", "Y Sui"], "publication_date": "2020", "journal": "Proceedings of the 42nd International Conference on Software Engineering", "description": "Existing coverage-based fuzzers usually use the individual control flow graph (CFG) edge coverage to guide the fuzzing process, which has shown great potential in finding vulnerabilities. However, CFG edge coverage is not effective in discovering vulnerabilities such as use-after-free (UaF). This is because, to trigger UaF vulnerabilities, one needs not only to cover individual edges, but also to traverse some (long) sequence of edges in a particular order, which is challenging for existing fuzzers. To this end, we propose to model UaF vulnerabilities as typestate properties, and develop a typestate-guided fuzzer, named UAFL, for discovering vulnerabilities violating typestate properties. Given a typestate property, we first perform a static typestate analysis to find operation sequences potentially violating the property. Our fuzzing process is then guided by the operation sequences in order to progressively generate test\u00a0\u2026", "total_citations": {"2019": 1, "2020": 14, "2021": 22, "2022": 30, "2023": 28}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:Zph67rFs4hoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2430536.2430537", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Yan Liu", "Ling Shi", "\u00c9tienne Andr\u00e9"], "publication_date": "2013/3/4", "journal": "ACM Transactions on Software Engineering and Methodology (TOSEM)", "volume": "22", "issue": "1", "pages": "1-29", "publisher": "ACM", "description": "Modeling and verifying complex real-time systems are challenging research problems. The de facto approach is based on Timed Automata, which are finite state automata equipped with clock variables. Timed Automata are deficient in modeling hierarchical complex systems. In this work, we propose a language called Stateful Timed CSP and an automated approach for verifying Stateful Timed CSP models. Stateful Timed CSP is based on Timed CSP and is capable of specifying hierarchical real-time systems. Through dynamic zone abstraction, finite-state zone graphs can be generated automatically from Stateful Timed CSP models, which are subject to model checking. Like Timed Automata, Stateful Timed CSP models suffer from Zeno runs, that is, system runs that take infinitely many steps within finite time. Unlike Timed Automata, model checking with non-Zenoness in Stateful Timed CSP can be achieved\u00a0\u2026", "total_citations": {"2012": 6, "2013": 14, "2014": 13, "2015": 8, "2016": 8, "2017": 5, "2018": 10, "2019": 9, "2020": 7, "2021": 3, "2022": 2, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:dX-nQPao9noC": {"external_link": "http://openaccess.thecvf.com/content/CVPR2021/html/Fu_Auto-Exposure_Fusion_for_Single-Image_Shadow_Removal_CVPR_2021_paper.html", "authors": ["Lan Fu", "Changqing Zhou", "Qing Guo", "Felix Juefei-Xu", "Hongkai Yu", "Wei Feng", "Yang Liu", "Song Wang"], "publication_date": "2021", "conference": "Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition", "pages": "10571-10580", "description": "Shadow removal is still a challenging task due to its inherent background-dependent and spatial-variant properties, leading to unknown and diverse shadow patterns. Even powerful deep neural networks could hardly recover traceless shadow-removed background. This paper proposes a new solution for this task by formulating it as an exposure fusion problem to address the challenges. Intuitively, we first estimate multiple over-exposure images wrt the input image to let the shadow regions in these images have the same color with shadow-free areas in the input image. Then, we fuse the original input with the over-exposure images to generate the final shadow-free counterpart. Nevertheless, the spatial-variant property of the shadow requires the fusion to be sufficientlysmart', that is, it should automatically select proper over-exposure pixels from different images to make the final output natural. To address this challenge, we propose the shadow-aware FusionNet that takes the shadow image as input to generate fusion weight maps across all the over-exposure images. Moreover, we propose the boundary-aware RefineNet to eliminate the remaining shadow trace further. We conduct extensive experiments on the ISTD, ISTD+, and SRD datasets to validate our method's effectiveness and show better performance in shadow regions and comparable performance in non-shadow regions over the state-of-the-art methods. We release the code in https://github. com/tsingqguo/exposure-fusion-shadow-removal.", "total_citations": {"2021": 8, "2022": 37, "2023": 47}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:iqOphse3MeQC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3377811.3380396", "authors": ["Cheng Wen", "Haijun Wang", "Yuekang Li", "Shengchao Qin", "Yang Liu", "Zhiwu Xu", "Hongxu Chen", "Xiaofei Xie", "Geguang Pu", "Ting Liu"], "publication_date": "2020/6/27", "book": "Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering", "pages": "765-777", "description": "Uncontrolled memory consumption is a kind of critical software security weaknesses. It can also become a security-critical vulnerability when attackers can take control of the input to consume a large amount of memory and launch a Denial-of-Service attack. However, detecting such vulnerability is challenging, as the state-of-the-art fuzzing techniques focus on the code coverage but not memory consumption. To this end, we propose a memory usage guided fuzzing technique, named MemLock, to generate the excessive memory consumption inputs and trigger uncontrolled memory consumption bugs. The fuzzing process is guided with memory consumption information so that our approach is general and does not require any domain knowledge. We perform a thorough evaluation for MemLock on 14 widely-used real-world programs. Our experiment results show that MemLock substantially outperforms the state-of\u00a0\u2026", "total_citations": {"2019": 1, "2020": 11, "2021": 23, "2022": 40, "2023": 17}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:S_0nULq340kC": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/6047", "authors": ["Jianwen Sun", "Tianwei Zhang", "Xiaofei Xie", "Lei Ma", "Yan Zheng", "Kangjie Chen", "Yang Liu"], "publication_date": "2020", "journal": "Proceedings of the AAAI Conference on Artificial Intelligence", "description": "Adversarial attacks against conventional Deep Learning (DL) systems and algorithms have been widely studied, and various defenses were proposed. However, the possibility and feasibility of such attacks against Deep Reinforcement Learning (DRL) are less explored. As DRL has achieved great success in various complex tasks, designing effective adversarial attacks is an indispensable prerequisite towards building robust DRL algorithms. In this paper, we introduce two novel adversarial attack techniques to stealthily and efficiently attack the DRL agents. These two techniques enable an adversary to inject adversarial samples in a minimal set of critical moments while causing the most severe damage to the agent. The first technique is the critical point attack: the adversary builds a model to predict the future environmental states and agent's actions, assesses the damage of each possible attack strategy, and selects the optimal one. The second technique is the antagonist attack: the adversary automatically learns a domain-agnostic model to discover the critical moments of attacking the agent in an episode. Experimental results demonstrate the effectiveness of our techniques. Specifically, to successfully attack the DRL agent, our critical point technique only requires 1 (TORCS) or 2 (Atari Pong and Breakout) steps, and the antagonist technique needs fewer than 5 steps (4 Mujoco tasks), which are significant improvements over state-of-the-art methods.", "total_citations": {"2020": 12, "2021": 22, "2022": 31, "2023": 25}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:qmyJBmpVKbYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2785733", "authors": ["Guozhu Meng", "Yang Liu", "Jie Zhang", "Alexander Pokluda", "Raouf Boutaba"], "publication_date": "2015/7/22", "journal": "ACM Computing Surveys (CSUR)", "volume": "48", "issue": "1", "pages": "1-42", "publisher": "ACM", "description": "Security is oftentimes centrally managed. An alternative trend of using collaboration in order to improve security has gained momentum over the past few years. Collaborative security is an abstract concept that applies to a wide variety of systems and has been used to solve security issues inherent in distributed environments. Thus far, collaboration has been used in many domains such as intrusion detection, spam filtering, botnet resistance, and vulnerability detection. In this survey, we focus on different mechanisms of collaboration and defense in collaborative security. We systematically investigate numerous use cases of collaborative security by covering six types of security systems. Aspects of these systems are thoroughly studied, including their technologies, standards, frameworks, strengths and weaknesses. We then present a comprehensive study with respect to their analysis target, timeliness of analysis\u00a0\u2026", "total_citations": {"2015": 1, "2016": 8, "2017": 16, "2018": 8, "2019": 21, "2020": 10, "2021": 12, "2022": 12, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:_E0j-SBEHDwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8812043/", "authors": ["Sen Chen", "Lingling Fan", "Chunyang Chen", "Ting Su", "Wenhe Li", "Yang Liu", "Lihua Xu"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)", "pages": "596-607", "publisher": "IEEE", "description": "Mobile apps are now ubiquitous. Before developing a new app, the development team usually endeavors painstaking efforts to review many existing apps with similar purposes. The review process is crucial in the sense that it reduces market risks and provides inspiration for app development. However, manual exploration of hundreds of existing apps by different roles (e.g., product manager, UI/UX designer, developer) in a development team can be ineffective. For example, it is difficult to completely explore all the functionalities of the app in a short period of time. Inspired by the conception of storyboard in movie production, we propose a system, StoryDroid, to automatically generate the storyboard for Android apps, and assist different roles to review apps efficiently. Specifically, StoryDroid extracts the activity transition graph and leverages static analysis techniques to render UI pages to visualize the storyboard\u00a0\u2026", "total_citations": {"2019": 6, "2020": 15, "2021": 15, "2022": 29, "2023": 23}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:d1gkVwhDpl0C": {"external_link": "https://link.springer.com/chapter/10.1007/11901433_13", "authors": ["Jin Dong", "Yang Liu", "Jun Sun", "Xian Zhang"], "publication_date": "2006", "journal": "Formal Methods and Software Engineering", "pages": "226-245", "publisher": "Springer Berlin/Heidelberg", "description": "Recently, a promising programming model called Orc has been proposed to support a structured way of orchestrating distributed web services. Orc is intuitive because it offers concise constructors to manage concurrent communication, time-outs, priorities, failure of sites or communication and so forth. The semantics of Orc is also precisely defined. However, there is no verification tool available to verify critical properties against Orc models. Instead of building one from scratch, we believe the existing mature model-checkers can be reused. In this work, we first define a Timed Automata semantics for the Orc language, which we prove is semantically equivalent to the original operational semantics of Orc. Consequently, Timed Automata models are systematically constructed from Orc models. The practical implication of the construction is that tool supports for Timed Automata, e.g., Uppaal, can be used to\u00a0\u2026", "total_citations": {"2006": 1, "2007": 8, "2008": 11, "2009": 7, "2010": 4, "2011": 8, "2012": 9, "2013": 14, "2014": 8, "2015": 9, "2016": 2, "2017": 1, "2018": 1, "2019": 1, "2020": 2, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:K9zgXSuleLYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8952248/", "authors": ["Qiang Hu", "Lei Ma", "Xiaofei Xie", "Bing Yu", "Yang Liu", "Jianjun Zhao"], "publication_date": "2019/11/11", "conference": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1158-1161", "publisher": "IEEE", "description": "Deep neural networks (DNNs) are increasingly expanding their real-world applications across domains, e.g., image processing, speech recognition and natural language processing. However, there is still limited tool support for DNN testing in terms of test data quality and model robustness. In this paper, we introduce a mutation testing-based tool for DNNs, DeepMutation++, which facilitates the DNN quality evaluation, supporting both feed-forward neural networks (FNNs) and stateful recurrent neural networks (RNNs). It not only enables to statically analyze the robustness of a DNN model against the input as a whole, but also allows to identify the vulnerable segments of a sequential input (e.g. audio input) by runtime analysis. It is worth noting that DeepMutation++ specially features the support of RNNs mutation testing. The tool demo video can be found on the project website https://sites.google.com/view\u00a0\u2026", "total_citations": {"2020": 9, "2021": 18, "2022": 30, "2023": 30}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:goOyc-W9OFwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7837653/", "authors": ["Yinxing Xue", "Guozhu Meng", "Yang Liu", "Tian Huat Tan", "Hongxu Chen", "Jun Sun", "Jie Zhang"], "publication_date": "2017/7/1", "journal": "IEEE Trans. Information Forensics and Security", "volume": "12", "issue": "7", "pages": "1529-1544", "description": "Although a previous paper shows that existing anti-malware tools (AMTs) may have high detection rate, the report is based on existing malware and thus it does not imply that AMTs can effectively deal with future malware. It is desirable to have an alternative way of auditing AMTs. In our previous paper, we use malware samples from android malware collection Genome to summarize a malware meta-model for modularizing the common attack behaviors and evasion techniques in reusable features. We then combine different features with an evolutionary algorithm, in which way we evolve malware for variants. Previous results have shown that the existing AMTs only exhibit detection rate of 20%-30% for 10 000 evolved malware variants. In this paper, based on the modularized attack features, we apply the dynamic code generation and loading techniques to produce malware, so that we can audit the AMTs at\u00a0\u2026", "total_citations": {"2016": 1, "2017": 4, "2018": 10, "2019": 12, "2020": 14, "2021": 18, "2022": 21, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:ToZsFq5dof0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8812029/", "authors": ["Xiaoning Du", "Bihuan Chen", "Yuekang Li", "Jianmin Guo", "Yaqin Zhou", "Yang Liu", "Yu Jiang"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)", "pages": "60-71", "publisher": "IEEE", "description": "Identifying potentially vulnerable locations in a code base is critical as a pre-step for effective vulnerability assessment; i.e., it can greatly help security experts put their time and effort to where it is needed most. Metric-based and pattern-based methods have been presented for identifying vulnerable code. The former relies on machine learning and cannot work well due to the severe imbalance between non-vulnerable and vulnerable code or lack of features to characterize vulnerabilities. The latter needs the prior knowledge of known vulnerabilities and can only identify similar but not new types of vulnerabilities. In this paper, we propose and implement a generic, lightweight and extensible framework, LEOPARD, to identify potentially vulnerable functions through program metrics. LEOPARD requires no prior knowledge about known vulnerabilities. It has two steps by combining two sets of systematically derived\u00a0\u2026", "total_citations": {"2019": 5, "2020": 16, "2021": 20, "2022": 21, "2023": 17}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:eb1hsBXB1ukC": {"external_link": "https://link.springer.com/article/10.1007/s10664-017-9539-8", "authors": ["Annamalai Narayanan", "Mahinthan Chandramohan", "Lihui Chen", "Yang Liu"], "publication_date": "2018/6", "journal": "Empirical Software Engineering", "volume": "23", "pages": "1222-1274", "publisher": "Springer US", "description": "Many existing Machine Learning (ML) based Android malware detection approaches use a variety of features such as security-sensitive APIs, system calls, control-flow structures and information flows in conjunction with ML classifiers to achieve accurate detection. Each of these feature sets provides a unique semantic perspective (or view) of apps\u2019 behaviors with inherent strengths and limitations. Meaning, some views are more amenable to detect certain attacks but may not be suitable to characterize several other attacks. Most of the existing malware detection approaches use only one (or a selected few) of the aforementioned feature sets which prevents them from detecting a vast majority of attacks. Addressing this limitation, we propose MKLDroid, a unified framework that systematically integrates multiple views of apps for performing comprehensive malware detection and malicious code localization\u00a0\u2026", "total_citations": {"2017": 1, "2018": 10, "2019": 9, "2020": 16, "2021": 22, "2022": 11, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:D2lc7i8A8ooC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7935482/", "authors": ["Annamalai Narayanan", "Mahinthan Chandramohan", "Lihui Chen", "Yang Liu"], "publication_date": "2017/6", "journal": "IEEE Transactions on Emerging Topics in Computational Intelligence", "volume": "1", "issue": "3", "pages": "157-175", "publisher": "IEEE", "description": "It is well known that Android malware constantly evolves so as to evade detection. This causes the entire malware population to be nonstationary. Contrary to this fact, most of the prior works on machine learning based android malware detection have assumed that the distribution of the observed malware characteristics (i.e., features) does not change over time. In this paper, we address the problem of malware population drift and propose a novel online learning based framework to detect malware, named CASANDRA (Context-aware, Adaptive and Scalable ANDRoid mAlware detector). In order to perform accurate detection, a novel graph kernel that facilitates capturing apps security-sensitive behaviors along with their context information from dependence graphs is proposed. Besides being accurate and scalable, CASANDRA has specific advantages: first, being adaptive to the evolution in malware features over\u00a0\u2026", "total_citations": {"2017": 1, "2018": 6, "2019": 8, "2020": 10, "2021": 18, "2022": 20, "2023": 16}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:FIkAGs9z2eEC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2897845.2897856", "authors": ["Guozhu Meng", "Yinxing Xue", "Chandramohan Mahinthan", "Annamalai Narayanan", "Yang Liu", "Jie Zhang", "Tieming Chen"], "publication_date": "2016/5/30", "conference": "Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security", "pages": "365-376", "publisher": "ACM", "description": "In the arms race of attackers and defenders, the defense is usually more challenging than the attack due to the unpredicted vulnerabilities and newly emerging attacks every day. Currently, most of existing malware detection solutions are individually proposed to address certain types of attacks or certain evasion techniques. Thus, it is desired to conduct a systematic investigation and evaluation of anti-malware solutions and tools based on different attacks and evasion techniques. In this paper, we first propose a meta model for Android malware to capture the common attack features and evasion features in the malware. Based on this model, we develop a framework, MYSTIQUE, to automatically generate malware covering four attack features and two evasion features, by adopting the software product line engineering approach. With the help of MYSTIQUE, we conduct experiments to 1) understand Android malware\u00a0\u2026", "total_citations": {"2016": 3, "2017": 6, "2018": 12, "2019": 11, "2020": 15, "2021": 8, "2022": 18, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:SzsLJvG5eXAC": {"external_link": "https://arxiv.org/abs/1806.07723", "authors": ["Lei Ma", "Fuyuan Zhang", "Minhui Xue", "Bo Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "publication_date": "2018/6/20", "journal": "arXiv preprint arXiv:1806.07723", "description": "Deep learning (DL) has achieved remarkable progress over the past decade and been widely applied to many safety-critical applications. However, the robustness of DL systems recently receives great concerns, such as adversarial examples against computer vision systems, which could potentially result in severe consequences. Adopting testing techniques could help to evaluate the robustness of a DL system and therefore detect vulnerabilities at an early stage. The main challenge of testing such systems is that its runtime state space is too large: if we view each neuron as a runtime state for DL, then a DL system often contains massive states, rendering testing each state almost impossible. For traditional software, combinatorial testing (CT) is an effective testing technique to reduce the testing space while obtaining relatively high defect detection abilities. In this paper, we perform an exploratory study of CT on DL systems. We adapt the concept in CT and propose a set of coverage criteria for DL systems, as well as a CT coverage guided test generation technique. Our evaluation demonstrates that CT provides a promising avenue for testing DL systems. We further pose several open questions and interesting directions for combinatorial testing of DL systems.", "total_citations": {"2018": 10, "2019": 20, "2020": 19, "2021": 9, "2022": 13, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:_q7R20eJROoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7727508/", "authors": ["Annamalai Narayanan", "Liu Yang", "Lihui Chen", "Liu Jinliang"], "publication_date": "2016/7/24", "conference": "2016 International Joint Conference on Neural Networks (IJCNN)", "pages": "2484-2491", "publisher": "IEEE", "description": "It is well-known that malware constantly evolves so as to evade detection and this causes the entire malware population to be non-stationary. Contrary to this fact, prior works on machine learning based Android malware detection have assumed that the distribution of the observed malware characteristics (i.e., features) do not change over time. In this work, we address the problem of malware population drift and propose a novel online machine learning based framework, named DroidOL to handle it and effectively detect malware. In order to perform accurate detection, security-sensitive behavior are captured from apps in form of inter-procedural control-flow sub-graph features using a state-of-the-art graph kernel. In order to perform scalable detection and to adapt to the drift and evolution in malware population, an online passive-aggressive classifier is used. In a large-scale comparative analysis with more than 87\u00a0\u2026", "total_citations": {"2016": 3, "2017": 6, "2018": 13, "2019": 13, "2020": 9, "2021": 13, "2022": 17, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:mNm_27jwclsC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2931037.2931043", "authors": ["Guozhu Meng", "Yinxing Xue", "Zhengzi Xu", "Yang Liu", "Jie Zhang", "Annamalai Narayanan"], "publication_date": "2016/7/18", "conference": "Proceedings of the 25th International Symposium on Software Testing and Analysis", "pages": "306-317", "publisher": "ACM", "description": "Malware has posed a major threat to the Android ecosystem. Existing malware detection tools mainly rely on signature- or feature- based approaches, failing to provide detailed information beyond the mere detection. In this work, we propose a precise semantic model of Android malware based on Deterministic Symbolic Automaton (DSA) for the purpose of malware comprehension, detection and classification. It shows that DSA can capture the common malicious behaviors of a malware family, as well as the malware variants. Based on DSA, we develop an automatic analysis framework, named SMART, which learns DSA by detecting and summarizing semantic clones from malware families, and then extracts semantic features from the learned DSA to classify malware according to the attack patterns. We conduct the experiments in both malware benchmark and 223,170 real-world apps. The results show that\u00a0\u2026", "total_citations": {"2016": 2, "2017": 12, "2018": 10, "2019": 15, "2020": 11, "2021": 9, "2022": 10, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:Z4TH09HQ3SoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9204665/", "authors": ["Ruitao Feng", "Sen Chen", "Xiaofei Xie", "Guozhu Meng", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2020/9/23", "journal": "IEEE Transactions on Information Forensics and Security", "volume": "16", "pages": "1563-1578", "publisher": "IEEE", "description": "Currently, Android malware detection is mostly performed on server side against the increasing number of malware. Powerful computing resource provides more exhaustive protection for app markets than maintaining detection by a single user. However, apart from the applications (apps) provided by the official market (i.e., Google Play Store), apps from unofficial markets and third-party resources are always causing serious security threats to end-users. Meanwhile, it is a time-consuming task if the app is downloaded first and then uploaded to the server side for detection, because the network transmission has a lot of overhead. In addition, the uploading process also suffers from the security threats of attackers. Consequently, a last line of defense on mobile devices is necessary and much-needed. In this paper, we propose an effective Android malware detection system, MobiTive, leveraging customized deep\u00a0\u2026", "total_citations": {"2020": 2, "2021": 17, "2022": 31, "2023": 25}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:R3JqVFXIqpYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7875176/", "authors": ["Yuan Zhou", "Hesuan Hu", "Yang Liu", "Zuohua Ding"], "publication_date": "2017/7", "journal": "IEEE Transactions on Systems, Man, and Cybernetics: Systems", "volume": "47", "issue": "7", "pages": "1712-1726", "publisher": "IEEE", "description": "Collision avoidance is a critical problem in motion planning and control of multirobot systems. Moreover, it may induce deadlocks during the procedure to avoid collisions. In this paper, we study the motion control of multirobot systems where each robot has its own predetermined and closed path to execute persistent motion. We propose a real-time and distributed algorithm for both collision and deadlock avoidance by repeatedly stopping and resuming robots. The motion of each robot is first modeled as a labeled transition system, and then controlled by a distributed algorithm to avoid collisions and deadlocks. Each robot can execute the algorithm autonomously and real-timely by checking whether its succeeding state is occupied and whether the one-step move can cause deadlocks. Performance analysis of the proposed algorithm is also conducted. The conclusion is that the algorithm is not only practically\u00a0\u2026", "total_citations": {"2017": 6, "2018": 11, "2019": 10, "2020": 15, "2021": 11, "2022": 12, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:L_at8tGC9oEC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3377811.3380368", "authors": ["X Zhang", "X Xie", "L Ma", "X Du", "Q Hu", "Y Liu", "J Zhao", "M Sun"], "publication_date": "2020", "journal": "The 42nd International Conference on Software Engineering (ICSE 2020)", "description": "Over the past decade, deep learning (DL) has been successfully applied to many industrial domain-specific tasks. However, the current state-of-the-art DL software still suffers from quality issues, which raises great concern especially in the context of safety- and security-critical scenarios. Adversarial examples (AEs) represent a typical and important type of defects needed to be urgently addressed, on which a DL software makes incorrect decisions. Such defects occur through either intentional attack or physical-world noise perceived by input sensors, potentially hindering further industry deployment. The intrinsic uncertainty nature of deep learning decisions can be a fundamental reason for its incorrect behavior. Although some testing, adversarial attack and defense techniques have been recently proposed, it still lacks a systematic study to uncover the relationship between AEs and DL uncertainty. In this paper, we\u00a0\u2026", "total_citations": {"2019": 1, "2020": 13, "2021": 20, "2022": 20, "2023": 18}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:GmgqlyE4arsC": {"external_link": "https://ink.library.smu.edu.sg/sis_research/7105/", "authors": ["Xiaofei Xie", "Lei Ma", "Haijun Wang", "Yuekang Li", "Yang Liu", "Xiaohong Li"], "publication_date": "2019/8/10", "journal": "Proceedings of the 28th International Joint Conference on Artificial Intelligence", "pages": "5772-5778", "publisher": "AAAI Press", "description": "The platform migration and customization have become an indispensable process of deep neural network (DNN) development lifecycle. A highprecision but complex DNN trained in the cloud on massive data and powerful GPUs often goes through an optimization phase (eg, quantization, compression) before deployment to a target device (eg, mobile device). A test set that effectively uncovers the disagreements of a DNN and its optimized variant provides certain feedback to debug and further enhance the optimization procedure. However, the minor inconsistency between a DNN and its optimized version is often hard to detect and easily bypasses the original test set. This paper proposes DiffChaser, an automated black-box testing framework to detect untargeted/targeted disagreements between version variants of a DNN. We demonstrate 1) its effectiveness by comparing with the state-of-the-art techniques, and 2) its usefulness in real-world DNN product deployment involved with quantization and optimization.", "total_citations": {"2019": 12, "2020": 19, "2021": 12, "2022": 13, "2023": 16}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:HiznBx5RP3QC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7011289/", "authors": ["Dongxia Wang", "Tim Muller", "Yang Liu", "Jie Zhang"], "publication_date": "2014/9/24", "conference": "2014 IEEE 13th International Conference on Trust, Security and Privacy in Computing and Communications", "pages": "511-518", "publisher": "IEEE", "description": "There is a need for robust and effective trust management. Different security problems result in different requirements to the design of trust management, and the existing attacks in trust management for security are yet to be solved. In this paper, we first propose a framework to classify desired properties of trust management for each type of security problems. We then investigate typical representative attacks and existing solutions in trust management for security. By considering both these security properties and attacks on trust management systems, our work serves to propel the design of more effective and robust trust management systems for security.", "total_citations": {"2013": 1, "2014": 0, "2015": 7, "2016": 9, "2017": 8, "2018": 7, "2019": 11, "2020": 7, "2021": 8, "2022": 5, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:bf7w-NijnqMC": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/5469", "authors": ["Huangzhao Zhang", "Zhuo Li", "Ge Li", "Lei Ma", "Yang Liu", "Zhi Jin"], "publication_date": "2020/4/3", "journal": "Proceedings of the AAAI Conference on Artificial Intelligence", "volume": "34", "issue": "01", "pages": "1169-1176", "description": "Automated processing, analysis, and generation of source code are among the key activities in software and system lifecycle. To this end, while deep learning (DL) exhibits a certain level of capability in handling these tasks, the current state-of-the-art DL models still suffer from non-robust issues and can be easily fooled by adversarial attacks.", "total_citations": {"2020": 6, "2021": 13, "2022": 23, "2023": 29}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:KUgzLixe4cAC": {"external_link": "https://www.usenix.org/conference/usenixsecurity20/presentation/chen-hongxu", "authors": ["Hongxu Chen", "Shengjian Guo", "Yinxing Xue", "Yulei Sui", "Cen Zhang", "Yuekang Li", "Haijun Wang", "Yang Liu"], "publication_date": "2020", "conference": "29th {USENIX} Security Symposium ({USENIX} Security 20)", "pages": "2325-2342", "description": "Grey-box fuzz testing has revealed thousands of vulnerabilities in real-world software owing to its lightweight instrumentation, fast coverage feedback, and dynamic adjusting strategies. However, directly applying grey-box fuzzing to input-dependent multithreaded programs can be extremely inefficient. In practice, multithreading-relevant bugs are usually buried in the sophisticated program flows. Meanwhile, existing grey-box fuzzing techniques do not stress thread-interleavings that affect execution states in multithreaded programs. Therefore, mainstream grey-box fuzzers cannot adequately test problematic segments in multithreaded software, although they might obtain high code coverage statistics.", "total_citations": {"2020": 5, "2021": 22, "2022": 22, "2023": 22}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:_Ycx_gLZKoMC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-030-58595-2_13", "authors": ["Qing Guo", "Xiaofei Xie", "Felix Juefei-Xu", "Lei Ma", "Zhongguo Li", "Wanli Xue", "Wei Feng", "Yang Liu"], "publication_date": "2020", "journal": "Proceedings of the European Conference on Computer Vision (ECCV)", "description": "Adversarial attacks of deep neural networks have been intensively studied on image, audio, and natural language classification tasks. Nevertheless, as a typical while important real-world application, the adversarial attacks of online video tracking that traces an object\u2019s moving trajectory instead of its category are rarely explored. In this paper, we identify a new task for the adversarial attack to visual tracking: online generating imperceptible perturbations that mislead trackers along with an incorrect (Untargeted Attack, UA) or specified trajectory (Targeted Attack, TA). To this end, we first propose a spatial-aware basic attack by adapting existing attack methods, i.e., FGSM, BIM, and C&W, and comprehensively analyze the attacking performance. We identify that online object tracking poses two new challenges: 1) it is difficult to generate imperceptible perturbations that can transfer across frames, and 2) real-time\u00a0\u2026", "total_citations": {"2018": 1, "2019": 0, "2020": 13, "2021": 24, "2022": 17, "2023": 16}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:h-U6AArFrx8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3338906.3338975", "authors": ["Yuekang Li", "Yinxing Xue", "Hongxu Chen", "Xiuheng Wu", "Cen Zhang", "Xiaofei Xie", "Haijun Wang", "Yang Liu"], "publication_date": "2019/8/12", "conference": "Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "pages": "533-544", "publisher": "ACM", "description": "Existing greybox fuzzers mainly utilize program coverage as the goal to guide the fuzzing process. To maximize their outputs, coverage-based greybox fuzzers need to evaluate the quality of seeds properly, which involves making two decisions: 1) which is the most promising seed to fuzz next (seed prioritization), and 2) how many efforts should be made to the current seed (power scheduling). In this paper, we present our fuzzer, Cerebro, to address the above challenges. For the seed prioritization problem, we propose an online multi-objective based algorithm to balance various metrics such as code complexity, coverage, execution time, etc. To address the power scheduling problem, we introduce the concept of input potential to measure the complexity of uncovered code and propose a cost-effective algorithm to update it dynamically. Unlike previous approaches where the fuzzer evaluates an input solely based\u00a0\u2026", "total_citations": {"2019": 5, "2020": 8, "2021": 20, "2022": 18, "2023": 20}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:g57m_4BFVZsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8811942/", "authors": ["Yu Zhao", "Tingting Yu", "Ting Su", "Yang Liu", "Wei Zheng", "Jingzhi Zhang", "William GJ Halfond"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)", "pages": "128-139", "publisher": "IEEE", "description": "The large demand of mobile devices creates significant concerns about the quality of mobile applications (apps). Developers heavily rely on bug reports in issue tracking systems to reproduce failures (e.g., crashes). However, the process of crash reproduction is often manually done by developers, making the resolution of bugs inefficient, especially that bug reports are often written in natural language. To improve the productivity of developers in resolving bug reports, in this paper, we introduce a novel approach, called ReCDroid, that can automatically reproduce crashes from bug reports for Android apps. ReCDroid uses a combination of natural language processing (NLP) and dynamic GUI exploration to synthesize event sequences with the goal of reproducing the reported crash. We have evaluated ReCDroid on 51 original bug reports from 33 Android apps. The results show that ReCDroid successfully\u00a0\u2026", "total_citations": {"2019": 6, "2020": 16, "2021": 15, "2022": 17, "2023": 17}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:vxVQT5kDUaMC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2884781.2884794", "authors": ["Bihuan Chen", "Yang Liu", "Wei Le"], "publication_date": "2016/5/14", "conference": "Proceedings of the 38th International Conference on Software Engineering", "pages": "49-60", "publisher": "ACM", "description": "Analyzing performance and understanding the potential best-case, worst-case and distribution of program execution times are very important software engineering tasks. There have been model-based and program analysis-based approaches for performance analysis. Model-based approaches rely on analytical or design models derived from mathematical theories or software architecture abstraction, which are typically coarse-grained and could be imprecise. Program analysis-based approaches collect program profiles to identify performance bottlenecks, which often fail to capture the overall program performance. In this paper, we propose a performance analysis framework PerfPlotter. It takes the program source code and usage profile as inputs and generates a performance distribution that captures the input probability distribution over execution times for the program. It heuristically explores high-probability\u00a0\u2026", "total_citations": {"2016": 3, "2017": 7, "2018": 11, "2019": 7, "2020": 14, "2021": 11, "2022": 11, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:tzPJaSocouwC": {"external_link": "https://link.springer.com/article/10.1007/s11263-022-01606-8", "authors": ["Felix Juefei-Xu", "Run Wang", "Yihao Huang", "Qing Guo", "Lei Ma", "Yang Liu"], "publication_date": "2022/5/4", "journal": "International Journal of Computer Vision", "pages": "1-57", "publisher": "Springer US", "description": "The creation or manipulation of facial appearance through deep generative approaches, known as DeepFake, have achieved significant progress and promoted a wide range of benign and malicious applications, e.g., visual effect assistance in movie and misinformation generation by faking famous persons. The evil side of this new technique poses another popular study, i.e., DeepFake detection aiming to identify the fake faces from the real ones. With the rapid development of the DeepFake-related studies in the community, both sides (i.e., DeepFake generation and detection) have formed the relationship of battleground, pushing the improvements of each other and inspiring new directions, e.g., the evasion of DeepFake detection. Nevertheless, the overview of such battleground and the new direction is unclear and neglected by recent surveys due to the rapid increase of related publications, limiting the in-depth\u00a0\u2026", "total_citations": {"2021": 10, "2022": 19, "2023": 39}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:pOP5Rf-i_loC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9261989/", "authors": ["Shangqing Liu", "Cuiyun Gao", "Sen Chen", "Nie Lun Yiu", "Yang Liu"], "publication_date": "2020/11/17", "journal": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "description": "Commit messages record code changes (e.g., feature modifications and bug repairs) in natural language, and are useful for program comprehension. Due to the frequent updates of software and time cost, developers are generally unmotivated to write commit messages for code changes. Therefore, automating the message writing process is necessitated. Previous studies on commit message generation have been benefited from generation models or retrieval models, but the code structure of changed code, i.e., AST, which can be important for capturing code semantics, has not been explicitly involved. Moreover, although generation models have the advantages of synthesizing commit messages for new code changes, they are not easy to bridge the semantic gap between code and natural languages which could be mitigated by retrieval models. In this paper, we propose a novel commit message generation\u00a0\u2026", "total_citations": {"2020": 6, "2021": 12, "2022": 25, "2023": 26}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:mSu_8wZzne8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3394171.3413716", "authors": ["Run Wang", "Felix Juefei-Xu", "Yihao Huang", "Qing Guo", "Xiaofei Xie", "Lei Ma", "Yang Liu"], "publication_date": "2020/10/12", "book": "Proceedings of the 28th ACM International Conference on Multimedia", "pages": "1207-1216", "description": "With the recent advances in voice synthesis, AI-synthesized fake voices are indistinguishable to human ears and widely are applied to produce realistic and natural DeepFakes, exhibiting real threats to our society. However, effective and robust detectors for synthesized fake voices are still in their infancy and are not ready to fully tackle this emerging threat. In this paper, we devise a novel approach, named DeepSonar, based on monitoring neuron behaviors of speaker recognition (SR) system, i.e., a deep neural network (DNN), to discern AI-synthesized fake voices. Layer-wise neuron behaviors provide an important insight to meticulously catch the differences among inputs, which are widely employed for building safety, robust, and interpretable DNNs. In this work, we leverage the power of layer-wise neuron activation patterns with a conjecture that they can capture the subtle differences between real and AI\u00a0\u2026", "total_citations": {"2020": 9, "2021": 12, "2022": 27, "2023": 21}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:SQZOXlr1FBsC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2568225.2568298", "authors": ["Yun Lin", "Zhenchang Xing", "Yinxing Xue", "Yang Liu", "Xin Peng", "Jun Sun", "Wenyun Zhao"], "publication_date": "2014/5/31", "conference": "Proceedings of the 36th International Conference on Software Engineering", "pages": "164-174", "publisher": "ACM", "description": "Clone detectors find similar code fragments (i.e., instances of code clones) and report large numbers of them for industrial systems. To maintain or manage code clones, developers often have to investigate differences of multiple cloned code fragments. However,existing program differencing techniques compare only two code fragments at a time. Developers then have to manually combine several pairwise differencing results. In this paper, we present an approach to automatically detecting differences across multiple clone instances. We have implemented our approach as an Eclipse plugin and evaluated its accuracy with three Java software systems. Our evaluation shows that our algorithm has precision over 97.66% and recall over 95.63% in three open source Java projects. We also conducted a user study of 18 developers to evaluate the usefulness of our approach for eight clone-related refactoring tasks. Our\u00a0\u2026", "total_citations": {"2014": 3, "2015": 9, "2016": 5, "2017": 11, "2018": 8, "2019": 10, "2020": 6, "2021": 7, "2022": 3, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:roLk4NBRz8UC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5521548/", "authors": ["Shao Jie Zhang", "Yang Liu"], "publication_date": "2010/6/9", "conference": "Secure Software Integration and Reliability Improvement Companion (SSIRI-C), 2010 Fourth International Conference on", "pages": "1-6", "publisher": "IEEE", "description": "UML has become the dominant modeling language in software engineering arena. In order to reduce cost induced by design issues, it is crucial to detect model-level errors in the initial phase of software development. In this paper, we focus on the formal verification of dynamic behavior of UML diagrams. We present an approach to automatically verifying models composed of UML state machines. Our approach is to translate UML models to the input language of our home grown model checker PAT in such a way as to be transparent for users. Compared to previous efforts, our approach supports a more complete subset of state machine including fork, join, history and submachine features. It alleviates the state explosion problem by limiting the use of auxiliary variables. Additionally, this approach allows to check safety/liveness properties (with various fairness assumptions), trace refinement relationships and so on\u00a0\u2026", "total_citations": {"2011": 2, "2012": 9, "2013": 11, "2014": 7, "2015": 6, "2016": 5, "2017": 5, "2018": 4, "2019": 5, "2020": 4, "2021": 1, "2022": 4, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:r-XlWH_wwbwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9240619/", "authors": ["Ying Wang", "Bihuan Chen", "Kaifeng Huang", "Bowen Shi", "Congying Xu", "Xin Peng", "Yijian Wu", "Yang Liu"], "publication_date": "2020/2/25", "conference": "2020 IEEE International Conference on Software Maintenance and Evolution (ICSME)", "pages": "35-45", "publisher": "IEEE", "description": "Third-party libraries play a key role in software development as they can relieve developers of the heavy burden of re-implementing common functionalities. However, third-party libraries and client projects evolve asynchronously. As a result, out-dated third-party libraries might be used in client projects while developers are not aware of the potential risk (e.g., security bug). Outdated third-party libraries may be updated in client projects in a delayed way, and developers may be less aware of the potential risk (e.g., API incompatibility) in updates. Developers of third-party libraries may be unaware of how their third-party libraries are used or updated in client projects. Therefore, a quantitative and holistic study on usages, updates and risks of third-party libraries in open-source projects can provide concrete evidences on these problems, and practical insights to improve the ecosystem. In this paper, we contribute such a\u00a0\u2026", "total_citations": {"2020": 2, "2021": 16, "2022": 23, "2023": 26}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:27qsyVibG6YC": {"external_link": "https://www.usenix.org/conference/usenixsecurity20/presentation/xiao", "authors": ["Yang Xiao", "Bihuan Chen", "Chendong Yu", "Zhengzi Xu", "Zimu Yuan", "Feng Li", "Binghong Liu", "Yang Liu", "Wei Huo", "Wei Zou", "Wenchang Shi"], "publication_date": "2020", "conference": "29th USENIX Security Symposium (USENIX Security 20)", "pages": "1165-1182", "description": "Recurring vulnerabilities widely exist and remain undetected in real-world systems, which are often resulted from reused code base or shared code logic. However, the potentially small differences between vulnerable functions and their patched functions as well as the possibly large differences between vulnerable functions and target functions to be detected bring challenges to clone-based and function matching-based approaches to identify these recurring vulnerabilities, ie, causing high false positives and false negatives.", "total_citations": {"2020": 3, "2021": 14, "2022": 27, "2023": 23}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:z6xuaG2dYH0C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-38613-8_23", "authors": ["Shuang Liu", "Yang Liu", "Etienne Andr\u00e9", "Christine Choppy", "Jun Sun", "Bimlesh Wadhwa", "Jin Song Dong"], "publication_date": "2013", "conference": "Integrated Formal Methods: 10th International Conference, IFM 2013, Turku, Finland, June 10-14, 2013. Proceedings 10", "pages": "331-346", "publisher": "Springer Berlin Heidelberg", "description": "UML is a widely used notation, and formalizing its semantics is an important issue. Here, we concentrate on formalizing UML state machines, used to express the dynamic behaviour of software systems. We propose a formal operational semantics covering all features of the latest version (2.4.1) of UML state machines specification. We use labelled transition systems as the semantic model, so as to use automatic verification techniques like model checking. Furthermore, our proposed semantics includes synchronous and asynchronous communications between state machines. We implement our approach in USM2C, a model checker supporting editing, simulation and automatic verification of UML state machines. Experiments show the effectiveness of our approach.", "total_citations": {"2013": 7, "2014": 8, "2015": 5, "2016": 7, "2017": 10, "2018": 0, "2019": 4, "2020": 8, "2021": 4, "2022": 4, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:QoN_6baHBqgC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3324884.3416571", "authors": ["Qianyu Guo", "Xiaofei Xie", "Yi Li", "Xiaoyu Zhang", "Yang Liu", "Xiaohong Li", "Chao Shen"], "publication_date": "2020/9/21", "conference": "2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "486-498", "publisher": "IEEE", "description": "Deep learning (DL) has been applied widely, and the quality of DL system becomes crucial, especially for safety-critical applications. Existing work mainly focuses on the quality analysis of DL models, but lacks attention to the underlying frameworks on which all DL models depend. In this work, we propose Audee, a novel approach for testing DL frameworks and localizing bugs. Audee adopts a search-based approach and implements three different mutation strategies to generate diverse test cases by exploring combinations of model structures, parameters, weights and inputs. Audee is able to detect three types of bugs: logical bugs, crashes and Not-a-Number (NaN) errors. In particular, for logical bugs, Audee adopts a cross-reference check to detect behavioural inconsistencies across multiple frameworks (e.g., TensorFlow and PyTorch), which may indicate potential bugs in their implementations. For NaN errors\u00a0\u2026", "total_citations": {"2020": 3, "2021": 9, "2022": 28, "2023": 25}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:lRnoeYR1YAAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9152785/", "authors": ["Jiao Jiao", "Shuanglong Kan", "Shang-Wei Lin", "David Sanan", "Yang Liu", "Jun Sun"], "publication_date": "2020/5/18", "conference": "2020 IEEE Symposium on Security and Privacy (SP)", "pages": "1695-1712", "publisher": "IEEE", "description": "Bitcoin has been a popular research topic recently. Ethereum (ETH), a second generation of cryptocurrency, extends Bitcoin's design by offering a Turing-complete programming language called Solidity to develop smart contracts. Smart contracts allow creditable execution of contracts on EVM (Ethereum Virtual Machine) without third parties. Developing correct and secure smart contracts is challenging due to the decentralized computation nature of the blockchain. Buggy smart contracts may lead to huge financial loss. Furthermore, smart contracts are very hard, if not impossible, to patch once they are deployed. Thus, there is a recent surge of interest in analyzing and verifying smart contracts. While most of the existing works either focus on EVM bytecode or translate Solidity smart contracts into programs in intermediate languages, we argue that it is important and necessary to understand and formally define the\u00a0\u2026", "total_citations": {"2020": 5, "2021": 15, "2022": 20, "2023": 25}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:RRCMsQZi3KMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7464886/", "authors": ["Sanjeev Das", "Wei Zhang", "Yang Liu"], "publication_date": "2016/11", "journal": "IEEE Transactions on Very Large Scale Integration (VLSI) Systems", "volume": "24", "issue": "11", "pages": "3193-3207", "publisher": "IEEE", "description": "Runtime attacks on memory, such as buffer overflow based stack smashing and code reuse attacks, are common in embedded systems. Control flow integrity (CFI) has been acknowledged as one promising approach to protect against such runtime attacks. However, previous CFI implementations suffer from coarse granularity (which can be circumvented by an advanced attack model) and high-performance overhead. In this paper, first, we present an approach to enforce fine-grained CFI at a basic block level, named basic block CFI (BB-CFI), which aims to defend against aforesaid attacks. The key idea is to verify the target address (TA) of control flow instructions (CFINs) (e.g., call, ret, and imp), which may be modified by the adversary. BB-CFI contains two stages: 1) offline profiling of the program-to extract the control flow information and 2) runtime control flow checking-to verify the TA of CFINs using the extracted\u00a0\u2026", "total_citations": {"2016": 1, "2017": 5, "2018": 10, "2019": 5, "2020": 15, "2021": 10, "2022": 12, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:L2Pn6qttGKUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9673747/", "authors": ["Yihao Huang", "Felix Juefei-Xu", "Run Wang", "Qing Guo", "Xiaofei Xie", "Lei Ma", "Jianwen Li", "Weikai Miao", "Yang Liu", "Geguang Pu"], "publication_date": "2020", "journal": "arXiv preprint arXiv:2001.09598", "description": "Full face synthesis and partial face manipulation by virtue of the generative adversarial networks (GANs) and its variants have raised wide public concerns. In the multi-media forensics area, detecting and ultimately locating the image forgery has become an imperative task. In this work, we investigate the architecture of existing GAN-based face manipulation methods and observe that the imperfection of upsampling methods therewithin could be served as an important asset for GAN-synthesized fake image detection and forgery localization. Based on this basic observation, we have proposed a novel approach, termed  FakeLocator , to obtain high localization accuracy, at full resolution, on manipulated facial images. To the best of our knowledge, this is the very first attempt to solve the GAN-based fake localization problem with a gray-scale fakeness map that preserves more information of fake regions. To improve\u00a0\u2026", "total_citations": {"2019": 1, "2020": 10, "2021": 8, "2022": 21, "2023": 24}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:cybebCj9Au0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7001350/", "authors": ["Yang Liu", "Shiyan Hu", "Tsung-Yi Ho"], "publication_date": "2014/11/2", "conference": "2014 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)", "pages": "183-190", "publisher": "IEEE", "description": "Smart home, which controls the end use of the power grid, has become a critical component in the smart grid infrastructure. In a smart home system, the advanced metering infrastructure (AMI) is used to connect smart meters with the power system and the communication system of a smart grid. The electricity pricing information is transmitted from the utility to the local community, and then broadcast through wired or wireless networks to each smart meter within AMI. In this work, the vulnerability of the above process is assessed. Two closely related pricing cyberattacks which manipulate the guideline electricity prices received at smart meters are considered and they aim at reducing the expense of the cyberattacker and increasing the peak energy usage in the local community. A countermeasure technique which uses support vector regression and impact difference for detecting anomaly pricing is then proposed\u00a0\u2026", "total_citations": {"2015": 6, "2016": 9, "2017": 4, "2018": 5, "2019": 11, "2020": 6, "2021": 12, "2022": 5, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:z5I2ou_Dk_MC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3238147.3238170", "authors": ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "publication_date": "2018/9", "conference": "The 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE 2018)", "pages": "486-497", "description": "Android, the #1 mobile app framework, enforces the single-GUI-thread model, in which a single UI thread manages GUI rendering and event dispatching. Due to this model, it is vital to avoid blocking the UI thread for responsiveness. One common practice is to offload long-running tasks into async threads. To achieve this, Android provides various async programming constructs, and leaves evelopers themselves to obey the rules implied by the model. However, as our study reveals, more than 25% apps violate these rules and introduce hard-to-detect, fail-stop errors, which we term as aysnc programming errors (APEs). To this end, this paper introduces APEChecker, a technique to automatically and efficiently manifest APEs. The key idea is to characterize APEs as specific fault patterns, and synergistically combine static analysis and dynamic UI exploration to detect and verify such errors. Among the 40 real-world\u00a0\u2026", "total_citations": {"2018": 4, "2019": 11, "2020": 12, "2021": 16, "2022": 11, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:d9ydBXnamCkC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2950290.2950340", "authors": ["Xiaofei Xie", "Bihuan Chen", "Yang Liu", "Wei Le", "Xiaohong Li"], "publication_date": "2016", "conference": "FSE", "description": "Loops are challenging structures for program analysis, especially when loops contain multiple paths with complex interleaving executions among these paths. In this paper, we first propose a classification of multi-path loops to understand the complexity of the loop execution, which is based on the variable updates on the loop conditions and the execution order of the loop paths. Secondly, we propose a loop analysis framework, named Proteus, which takes a loop program and a set of variables of interest as inputs and summarizes path-sensitive loop effects on the variables. The key contribution is to use a path dependency automaton (PDA) to capture the execution dependency between the paths. A DFS-based algorithm is proposed to traverse the PDA to summarize the effect for all feasible executions in the loop. The experimental results show that Proteus is effective in three applications: Proteus can 1) compute\u00a0\u2026", "total_citations": {"2016": 1, "2017": 8, "2018": 7, "2019": 16, "2020": 8, "2021": 8, "2022": 6, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:KIMFRoSX18MC": {"external_link": "https://proceedings.neurips.cc/paper/2020/hash/0a73de68f10e15626eb98701ecf03adb-Abstract.html", "authors": ["Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Lei Ma", "Jian Wang", "Bing Yu", "Wei Feng", "Yang Liu"], "publication_date": "2020", "journal": "Advances in Neural Information Processing Systems", "volume": "33", "description": "The state-of-the-art deep neural networks (DNNs) are vulnerable against adversarial examples with additive random-like noise perturbations. While such examples are hardly found in the physical world, the image blurring effect caused by object motion, on the other hand, commonly occurs in practice, making the study of which greatly important especially for the widely adopted real-time image processing tasks (eg, object detection, tracking). In this paper, we initiate the first step to comprehensively investigate the potential hazards of blur effect for DNN, caused by object motion. We propose a novel adversarial attack method that can generate visually natural motion-blurred adversarial examples, named motion-based adversarial blur attack (ABBA). To this end, we first formulate the kernel-prediction-based attack where an input image is convolved with kernels in a pixel-wise way, and the misclassification capability is achieved by tuning the kernel weights. To generate visually more natural and plausible examples, we further propose the saliency-regularized adversarial kernel prediction, where the salient region serves as a moving object, and the predicted kernel is regularized to achieve naturally visual effects. Besides, the attack is further enhanced by adaptively tuning the translations of object and background. A comprehensive evaluation on the NeurIPS'17 adversarial competition dataset demonstrates the effectiveness of ABBA by considering various kernel sizes, translations, and regions. The in-depth study further confirms that our method shows a more effective penetrating capability to the state-of-the-art GAN-based deblurring mechanisms\u00a0\u2026", "total_citations": {"2019": 1, "2020": 11, "2021": 20, "2022": 17, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:HV_RJt6Pqn0C": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/16239", "authors": ["Qing Guo", "Jingyang Sun", "Felix Juefei-Xu", "Lei Ma", "Xiaofei Xie", "Wei Feng", "Yang Liu", "Jianjun Zhao"], "publication_date": "2021/5/18", "journal": "Proceedings of the AAAI Conference on Artificial Intelligence", "volume": "35", "issue": "2", "pages": "1487-1495", "description": "Single-image deraining is rather challenging due to the unknown rain model. Existing methods often make specific assumptions of the rain model, which can hardly cover many diverse circumstances in the real world, compelling them to employ complex optimization or progressive refinement. This, however, significantly affects these methods' efficiency and effectiveness for many efficiency-critical applications. To fill this gap, in this paper, we regard the single-image deraining as a general image-enhancing problem and originally propose a model-free deraining method, ie, EfficientDeRain, which is able to process a rainy image within 10 ms (ie, around 6 ms on average), over 80 times faster than the state-of-the-art method (ie, RCDNet), while achieving similar de-rain effects. We first propose novel pixel-wise dilation filtering. In particular, a rainy image is filtered with the pixel-wise kernels estimated from a kernel prediction network, by which suitable multi-scale kernels for each pixel can be efficiently predicted. Then, to eliminate the gap between synthetic and real data, we further propose an effective data augmentation method (ie, RainMix) that helps to train the network for handling real rainy images. We perform a comprehensive evaluation on both synthetic and real-world rainy datasets to demonstrate the effectiveness and efficiency of our method. We release the model and code in https://github. com/tsingqguo/efficientderain. git.", "total_citations": {"2020": 3, "2021": 11, "2022": 24, "2023": 23}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:HOg0WoviCygC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6663702/", "authors": ["Hesuan Hu", "Yang Liu"], "publication_date": "2013/11/13", "journal": "IEEE Transactions on Automation Science and Engineering", "volume": "11", "issue": "1", "pages": "66-77", "publisher": "IEEE", "description": "In the framework of automated manufacturing systems (AMS), Petri nets are widely used to model, analyze, and control them. Resolving deadlocks is of paramount significance because their emergence may likely zero a systems throughput, if not necessarily. Supervisory control technique is the most widely adopted method to resolve them. A control policy can be converted into satisfying a set of inequalities, each of which corresponds to a siphon in a Petri net structure. The number of siphons can be exponential in the worst case, so does the number of inequalities. Taking into account the independent and dependent inequalities, this paper proposes a method to remove all the dependent inequalities, while preserving only the independent ones. This method can significantly reduce the size of a supervisory controller. Examples are presented to illustrate the effectiveness and efficiency of this method.", "total_citations": {"2013": 1, "2014": 6, "2015": 12, "2016": 4, "2017": 9, "2018": 5, "2019": 6, "2020": 5, "2021": 5, "2022": 5, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:PNc4OtJD23oC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3377811.3380417", "authors": ["Sen Chen", "Lingling Fan", "Guozhu Meng", "Ting Su", "Minhui Xue", "Yinxing Xue", "Yang Liu", "Lihua Xu"], "publication_date": "2020", "journal": "Proceedings of the 42st International Conference on Software Engineering. IEEE Press", "pages": "596-607", "description": "Mobile banking apps, belonging to the most security-critical app category, render massive and dynamic transactions susceptible to security risks. Given huge potential financial loss caused by vulnerabilities, existing research lacks a comprehensive empirical study on the security risks of global banking apps to provide useful insights and improve the security of banking apps. Since data-related weaknesses in banking apps are critical and may directly cause serious financial loss, this paper first revisits the state-of-the-art available tools and finds that they have limited capability in identifying data-related security weaknesses of banking apps. To complement the capability of existing tools in data-related weakness detection, we propose a three-phase automated security risk assessment system, named Ausera, which leverages static program analysis techniques and sensitive keyword identification. By leveraging\u00a0\u2026", "total_citations": {"2020": 12, "2021": 17, "2022": 15, "2023": 15}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:c2351ekuFcIC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8630054/", "authors": ["Chunyang Chen", "Zhenchang Xing", "Yang Liu", "Kent Ong Long Xiong"], "publication_date": "2019/1/30", "journal": "IEEE Transactions on Software Engineering", "volume": "47", "issue": "3", "pages": "432-447", "publisher": "IEEE", "description": "Establishing API mappings between third-party libraries is a prerequisite step for library migration tasks. Manually establishing API mappings is tedious due to the large number of APIs to be examined. Having an automatic technique to create a database of likely API mappings can significantly ease the task. Unfortunately, existing techniques either adopt supervised learning mechanism that requires already-ported or functionality similar applications across major programming languages or platforms, which are difficult to come by for an arbitrary pair of third-party libraries, or cannot deal with lexical gap in the API descriptions of different libraries. To overcome these limitations, we present an unsupervised deep learning based approach to embed both API usage semantics and API description (name and document) semantics into vector space for inferring likely analogical API mappings between libraries. Based on\u00a0\u2026", "total_citations": {"2019": 7, "2020": 12, "2021": 21, "2022": 9, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:IjCSPb-OGe4C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-10373-5_30", "authors": ["Jun Sun", "Yang Liu", "Jin Dong", "Xian Zhang"], "publication_date": "2009", "journal": "Formal Methods and Software Engineering", "pages": "581-600", "publisher": "Springer Berlin/Heidelberg", "description": "In this work, we study model checking of compositional real-time systems. A system is modeled using mutable data variables as well as a compositional timed process. Instead of explicitly manipulating clock variables, a number of compositional timed behavioral patterns are used to capture quantitative timing requirements, e.g.\u00a0delay, timeout, deadline, timed interrupt, etc. A fully automated abstraction technique is developed to build an abstract finite state machine from the model. The idea is to dynamically create/delete clocks, and maintain/solve a constraint on the clocks. The abstract machine weakly bi-simulates the model and, therefore, LTL model checking or trace-refinement checking are sound and complete. We enhance our home-grown PAT model checker with the technique and show its usability via the verification of benchmark systems.", "total_citations": {"2009": 1, "2010": 12, "2011": 7, "2012": 7, "2013": 9, "2014": 7, "2015": 0, "2016": 5, "2017": 1, "2018": 1, "2019": 1, "2020": 3, "2021": 0, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:lmc2jWPfTJgC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-540-88194-0_4", "authors": ["Jun Sun", "Yang Liu", "Jin Dong", "Hai Wang"], "publication_date": "2008", "journal": "Formal Methods and Software Engineering", "pages": "5-24", "publisher": "Springer Berlin/Heidelberg", "description": "Liveness/Fairness plays an important role in software specification, verification and development. Existing event-based compositional models are safety-centric. In this paper, we describe a framework for systematically specifying and verifying event-based systems under fairness assumptions. We introduce different event annotations to associate fairness constraints with individual events. Fairness annotated events can be used to embed liveness/fairness assumptions in event-based models flexibly and naturally. We show that state-of-the-art verification algorithms can be extended to verify models under fairness assumptions, with little computational overhead. We further improve the algorithm by other model checking techniques like partial order reduction. A toolset named Pat has been developed to verify fairness enhanced event-based systems. Experiments show that Pat handles large systems with\u00a0\u2026", "total_citations": {"1994": 1, "1995": 0, "1996": 0, "1997": 1, "1998": 0, "1999": 0, "2000": 1, "2001": 1, "2002": 1, "2003": 0, "2004": 0, "2005": 1, "2006": 0, "2007": 0, "2008": 3, "2009": 10, "2010": 10, "2011": 3, "2012": 5, "2013": 8, "2014": 3, "2015": 1, "2016": 3, "2017": 1, "2018": 3, "2019": 0, "2020": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:IZcclEPD2KUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7029080/", "authors": ["Hesuan Hu", "Yang Liu", "Zhou. Meng Chu"], "publication_date": "2015/9", "journal": "IEEE Transactions on Control Systems Technology", "volume": "23", "issue": "5", "pages": "2026-2034", "publisher": "IEEE", "description": "Ensuring nonblockingness remains challenging for automated manufacturing systems (AMSs) owing to their discrete event dynamics. Both scalability and maximal permissiveness are essential for the synthesis and implementation of their centralized supervisors. Inspired by the divide and conquer philosophy, this brief proposes a partition methodology and distributed control technique for large-scale AMSs. They are represented as interconnected and overlapping subsystems sharing some common components in terms of buffers. For each subsystem, a local supervisor is designed based on its local behavior and neighboring information only. Generalizing the existing results, we develop a condition under which the control law via decomposition promises the maximal permissiveness. Buffer capacities are well designed for the sake of their decomposition into multiple overlapping subsystems. Theoretical results\u00a0\u2026", "total_citations": {"2015": 5, "2016": 8, "2017": 9, "2018": 8, "2019": 7, "2020": 7, "2021": 7, "2022": 6, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:6E5OHDUOeTQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9402031/", "authors": ["Xian Zhan", "Lingling Fan", "Sen Chen", "Feng Wu", "Tianming Liu", "Xiapu Luo", "Yang Liu"], "publication_date": "2021/5/22", "conference": "2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)", "pages": "1695-1707", "publisher": "IEEE", "description": "Third-party libraries (TPLs) as essential parts in the mobile ecosystem have become one of the most significant contributors to the huge success of Android, which facilitate the fast development of Android applications. Detecting TPLs in Android apps is also important for downstream tasks, such as malware and repackaged apps identification. To identify in-app TPLs, we need to solve several challenges, such as TPL dependency, code obfuscation, precise version representation. Unfortunately, existing TPL detection tools have been proved that they have not solved these challenges very well, let alone specify the exact TPL versions. To this end, we propose a system, named ATVHunter, which can pinpoint the precise vulnerable in-app TPL versions and provide detailed information about the vulnerabilities and TPLs. We propose a two-phase detection approach to identify specific TPL versions. Specifically, we\u00a0\u2026", "total_citations": {"2021": 10, "2022": 18, "2023": 29}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:B4wWq2ztVNgC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8805696/", "authors": ["Haijun Wang", "Yi Li", "Shang-Wei Lin", "Lei Ma", "Yang Liu"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER)", "pages": "1-4", "publisher": "IEEE", "description": "Despite the high stakes involved, smart contracts are often developed in an undisciplined way thus far. The existence of vulnerabilities compromises the security and reliability of smart contracts, and endangers the trust of participants in their ongoing businesses. Existing vulnerability detection techniques are often designed case-by-case, making them difficult to generalize. In this paper, we design general principles for detecting vulnerable smart contracts. Our key insight is that almost all the existing transaction-related vulnerabilities are due to the mismatch between the actual transferred amount and the amount reflected on the contract's internal bookkeeping. Based on this, we propose a precise and generally applicable technique, VULTRON, which can detect irregular transactions due to various types of adversarial exploits. We also report preliminary results applying our technique to real-world case studies.", "total_citations": {"2019": 2, "2020": 16, "2021": 10, "2022": 16, "2023": 12}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:vq25oHwZT-8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3236024.3275523", "authors": ["Sen Chen", "Ting Su", "Lingling Fan", "Guozhu Meng", "Minhui Xue", "Yang Liu", "Lihua Xu"], "publication_date": "2018/10/26", "conference": "Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "pages": "797-802", "publisher": "ACM", "description": "Mobile banking apps, as one of the most contemporary FinTechs, have been widely adopted by banking entities to provide instant financial services. However, our recent work discovered thousands of vulnerabilities in 693 banking apps, which indicates these apps are not as secure as we expected. This motivates us to conduct this study for understanding the current security status of them. First, we take 6 months to track the reporting and patching procedure of these vulnerabilities. Second, we audit 4 state-of the-art vulnerability detection tools on those patched vulnerabilities. Third, we discuss with 7 banking entities via in-person or online meetings and conduct an online survey to gain more feedback from financial app developers. Through this study, we reveal that (1) people may have inconsistent understandings of the vulnerabilities and different criteria for rating severity; (2) state-of-the-art tools are not effective\u00a0\u2026", "total_citations": {"2019": 8, "2020": 13, "2021": 15, "2022": 11, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:HPvNdXBGwkEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7360905/", "authors": ["Hesuan Hu", "Rong Su", "MengChu Zhou", "Yang Liu"], "publication_date": "2015/12/18", "journal": "IEEE Transactions on Control Systems Technology", "volume": "24", "issue": "5", "pages": "1610-1622", "publisher": "IEEE", "description": "Due to the competition for limited resources by many concurrent processes in large-scale automated manufacturing systems (AMSs), one has to resolve any deadlock issue in order to reach their production goals without disruption and downtime. Monolithic resolution is a conventional approach for optimal or acceptable solutions, but may suffer from computational difficulty. Some decentralized methods are more efficient in finding approximate solutions, but most are application dependent. By modeling AMSs as Petri nets, we develop an innovative distributed approach, which can create a trajectory leading to a desired goal and is adaptable to different kinds of applications. Control strategies are applied to processes locally such that they can proceed concurrently and efficiently. Global goals are always reachable through the local observation, control, and execution of processes without knowing external and extra\u00a0\u2026", "total_citations": {"2016": 3, "2017": 7, "2018": 9, "2019": 10, "2020": 10, "2021": 7, "2022": 6, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:q7hqJx8pYzEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7985679/", "authors": ["Yun Lin", "Jun Sun", "Yinxing Xue", "Yang Liu", "Jinsong Dong"], "publication_date": "2017/5/20", "conference": "Proceedings of the 39th International Conference on Software Engineering", "pages": "393-403", "publisher": "IEEE Press", "description": "Software debugging has long been regarded as a time and effort consuming task. In the process of debugging, developers usually need to manually inspect many program steps to see whether they deviate from their intended behaviors. Given that intended behaviors usually exist nowhere but in human mind, the automation of debugging turns out to be extremely hard, if not impossible. In this work, we propose a feedback-based debugging approach, which (1) builds on light-weight human feedbacks on a buggy program and (2) regards the feedbacks as partial program specification to infer suspicious steps of the buggy execution. Given a buggy program, we record its execution trace and allow developers to provide light-weight feedback on trace steps. Based on the feedbacks, we recommend suspicious steps on the trace. Moreover, our approach can further learn and approximate bug-free paths, which helps\u00a0\u2026", "total_citations": {"2017": 3, "2018": 6, "2019": 9, "2020": 16, "2021": 5, "2022": 10, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:Xc-mKOjpdrwC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2714576.2714620", "authors": ["Junjie Wang", "Yinxing Xue", "Yang Liu", "Tian Huat Tan"], "publication_date": "2015/4/14", "conference": "Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security", "pages": "109-120", "publisher": "ACM", "description": "Malicious JavaScript is one of the biggest threats in cyber security. Existing research and anti-virus products mainly focus on detection of JavaScript malware rather than classification. Usually, the detection will simply report the malware family name without elaborating details about attacks conducted by the malware. Worse yet, the reported family name may differ from one tool to another due to the different naming conventions. In this paper, we propose a hybrid approach to perform JavaScript malware detection and classification in an accurate and efficient way, which could not only explain the attack model but also potentially discover new malware variants and new vulnerabilities. Our approach starts with machine learning techniques to detect JavaScript malware using predicative features of textual information, program structures and risky function calls. For the detected malware, we classify them into eight\u00a0\u2026", "total_citations": {"2015": 2, "2016": 5, "2017": 7, "2018": 5, "2019": 7, "2020": 7, "2021": 10, "2022": 6, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:4IpgxnMJogoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3324884.3416609", "authors": ["David Berend", "Xiaofei Xie", "Lei Ma", "Lingjun Zhou", "Yang Liu", "Chi Xu", "Jianjun Zhao"], "publication_date": "2020/9/21", "conference": "2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1041-1052", "publisher": "IEEE", "description": "As Deep Learning (DL) is continuously adopted in many industrial applications, its quality and reliability start to raise concerns. Similar to the traditional software development process, testing the DL software to uncover its defects at an early stage is an effective way to reduce risks after deployment. According to the fundamental assumption of deep learning, the DL software does not provide statistical guarantee and has limited capability in handling data that falls outside of its learned distribution, i.e., out-of-distribution (OOD) data. Although recent progress has been made in designing novel testing techniques for DL software, which can detect thousands of errors, the current state-of-the-art DL testing techniques usually do not take the distribution of generated test data into consideration. It is therefore hard to judge whether the \"identified errors\" are indeed meaningful errors to the DL application (i.e., due to quality\u00a0\u2026", "total_citations": {"2020": 4, "2021": 13, "2022": 16, "2023": 19}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:yY8dUDjMDt8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2771783.2771814", "authors": ["Yinxing Xue", "Junjie Wang", "Yang Liu", "Hao Xiao", "Jun Sun", "Mahinthan Chandramohan"], "publication_date": "2015/7/13", "conference": "Proceedings of the 2015 International Symposium on Software Testing and Analysis", "pages": "48-59", "publisher": "ACM", "description": "Existing malicious JavaScript (JS) detection tools and commercial anti-virus tools mostly use feature-based or signature-based approaches to detect JS malware. These tools are weak in resistance to obfuscation and JS malware variants, not mentioning about providing detailed information of attack behaviors. Such limitations root in the incapability of capturing attack behaviors in these approches. In this paper, we propose to use Deterministic Finite Automaton (DFA) to abstract and summarize common behaviors of malicious JS of the same attack type. We propose an automatic behavior learning framework, named JS*, to learn DFAs from dynamic execution traces of JS malware, where we implement an effective online teacher by combining data dependency analysis, defense rules and trace replay mechanism. We evaluate JS* using real world data of 10000 benign and 276 malicious JS samples to cover 8 most\u00a0\u2026", "total_citations": {"2015": 3, "2016": 3, "2017": 3, "2018": 5, "2019": 7, "2020": 8, "2021": 10, "2022": 6, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:_FxGoFyzp5QC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-16901-4_26", "authors": ["Jun Sun", "Songzheng Song", "Yang Liu"], "publication_date": "2010", "journal": "Formal Methods and Software Engineering", "pages": "388-403", "publisher": "Springer Berlin/Heidelberg", "description": "Probabilistic modeling is important for random distributed algorithms, bio-systems or decision processes. Probabilistic model checking is a systematic way of analyzing finite-state probabilistic models. Existing probabilistic model checkers have been designed for simple systems without hierarchy. In this paper, we extend the PAT toolkit to support probabilistic model checking of hierarchical complex systems. We propose to use PCSP#, a combination of Hoare\u2019s CSP with data and probability, to model such systems. In addition to temporal logic, we allow complex safety properties to be specified by non-probabilistic PCSP# model. Validity of the properties (with probability) is established by refinement checking. Furthermore, we show that refinement checking can be applied to verify probabilistic systems against safety/co-safety temporal logic properties efficiently. We demonstrate the usability and scalability of\u00a0\u2026", "total_citations": {"2011": 6, "2012": 9, "2013": 11, "2014": 6, "2015": 3, "2016": 3, "2017": 1, "2018": 2, "2019": 1, "2020": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:uwjMLcW8QH4C": {"external_link": "https://scholar.google.com/scholar?cluster=12039510151591621762&hl=en&oi=scholarr", "authors": ["Xiaofei Xie", "Lei Ma", "Felix Juefei-Xu", "Hongxu Chen", "Minhui Xue", "Bo Li", "Yang Liu", "Jianjun Zhao", "Jianxiong Yin", "Simon See"], "publication_date": "2018/9", "journal": "arXiv preprint arXiv:1809.01266", "volume": "3", "description": "In company with the data explosion over the past decade, deep neural network (DNN) based software has experienced unprecedented leap and is becoming the key driving force of many novel industrial applications, including many safety-critical scenarios such as autonomous driving. Despite great success achieved in various human intelligence tasks, similar to traditional software, DNNs could also exhibit incorrect behaviors caused by hidden defects causing severe accidents and losses. In this paper, we propose an automated fuzz testing framework for hunting potential defects of general-purpose DNNs. It performs metamorphic mutation to generate new semantically preserved tests, and leverages multiple plugable coverage criteria as feedback to guide the test generation from different perspectives. To be scalable towards practical-sized DNNs, our framework maintains tests in batch, and prioritizes the tests\u00a0\u2026", "total_citations": {"2018": 10, "2019": 10, "2020": 16, "2021": 4, "2022": 3, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:hImZayhCRfQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8338420/", "authors": ["Yinxing Xue", "Zhengzi Xu", "Mahinthan Chandramohan", "Yang Liu"], "publication_date": "2018/4/16", "journal": "IEEE Transactions on Software Engineering", "volume": "45", "issue": "11", "pages": "1125-1149", "publisher": "IEEE", "description": "Different from source code clone detection, clone detection (similar code search) in binary executables faces big challenges due to the gigantic differences in the syntax and the structure of binary code that result from different configurations of compilers, architectures and OSs. Existing studies have proposed different categories of features for detecting binary code clones, including CFG structures, n-gram in CFG, input/output values, etc. In our previous study and the tool BinGo, to mitigate the huge gaps in CFG structures due to different compilation scenarios, we propose a selective inlining technique to capture the complete function semantics by inlining relevant library and user-defined functions. However, only features of input/output values are considered in BinGo. In this study, we propose to incorporate features from different categories (e.g., structural features and high-level semantic features) for accuracy\u00a0\u2026", "total_citations": {"2018": 2, "2019": 3, "2020": 6, "2021": 11, "2022": 12, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=20&pagesize=80&citation_for_view=_Pvgwd0AAAAJ:Y0pCki6q_DkC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-05089-3_9", "authors": ["Jun Sun", "Yang Liu", "Abhik Roychoudhury", "Shanshan Liu", "Jin Dong"], "publication_date": "2009", "journal": "FM 2009: Formal Methods", "pages": "123-139", "publisher": "Springer Berlin/Heidelberg", "description": "Parameterized systems are characterized by the presence of a large (or even unbounded) number of behaviorally similar processes, and they often appear in distributed/concurrent systems. A common state space abstraction for checking parameterized systems involves not keeping track of process identifiers by grouping behaviorally similar processes. Such an abstraction, while useful, conflicts with the notion of fairness. Because process identifiers are lost in the abstraction, it is difficult to ensure fairness (in terms of progress in executions) among the processes. In this work, we study the problem of fair model checking with process counter abstraction. Even without maintaining the process identifiers, our on-the-fly checking algorithm enforces fairness by keeping track of the local states from where actions are enabled / executed within an execution trace. We enhance our home-grown PAT model checker\u00a0\u2026", "total_citations": {"2010": 5, "2011": 5, "2012": 10, "2013": 7, "2014": 5, "2015": 3, "2016": 0, "2017": 2, "2018": 4, "2019": 0, "2020": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JdYeQSb646wC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9251060/", "authors": ["Ming Fan", "Le Yu", "Sen Chen", "Hao Zhou", "Xiapu Luo", "Shuyue Li", "Yang Liu", "Jun Liu", "Ting Liu"], "publication_date": "2020/10/12", "conference": "2020 IEEE 31st International Symposium on Software Reliability Engineering (ISSRE)", "pages": "253-264", "publisher": "IEEE", "description": "The purpose of the General Data Protection Regulation (GDPR) is to provide improved privacy protection. If an app controls personal data from users, it needs to be compliant with GDPR. However, GDPR lists general rules rather than exact step-by-step guidelines about how to develop an app that fulfills the requirements. Therefore, there may exist GDPR compliance violations in existing apps, which would pose severe privacy threats to app users. In this paper, we take mobile health applications (mHealth apps) as a peephole to examine the status quo of GDPR compliance in Android apps. We first propose an automated system, named HPDROID, to bridge the semantic gap between the general rules of GDPR and the app implementations by identifying the data practices declared in the app privacy policy and the data relevant behaviors in the app code. Then, based on HPDROID, we detect three kinds of GDPR\u00a0\u2026", "total_citations": {"2021": 9, "2022": 18, "2023": 18}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4UtermoNRQAC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3324884.3416582", "authors": ["Xian Zhan", "Lingling Fan", "Tianming Liu", "Sen Chen", "Li Li", "Haoyu Wang", "Yifei Xu", "Xiapu Luo", "Yang Liu"], "publication_date": "2020/9/21", "conference": "2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "919-930", "publisher": "IEEE", "description": "Third-party libraries (TPLs) have become a significant part of the Android ecosystem. Developers can employ various TPLs with different functionalities to facilitate their app development. Unfortunately, the popularity of TPLs also brings new challenges and even threats. TPLs may carry malicious or vulnerable code, which can infect popular apps to pose threats to mobile users. Besides, the code of third-party libraries could constitute noises in some downstream tasks (e.g., malware and repackaged app detection). Thus, researchers have developed various tools to identify TPLs. However, no existing work has studied these TPL detection tools in detail; different tools focus on different applications with performance differences, but little is known about them. To better understand existing TPL detection tools and dissect TPL detection techniques, we conduct a comprehensive empirical study to fill the gap by evaluating\u00a0\u2026", "total_citations": {"2021": 17, "2022": 20, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:siTy-4AL0AwC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-030-32409-4_1", "authors": ["Yang Liu", "Lei Ma", "Jianjun Zhao"], "publication_date": "2019/11/5", "conference": "International Conference on Formal Engineering Methods", "pages": "3-15", "publisher": "Springer, Cham", "description": "Over the past decades, deep learning (DL) systems have achieved tremendous success and gained great popularity in various applications, such as intelligent machines, image processing, speech processing, and medical diagnostics. Deep neural networks are the key driving force behind its recent success, but still seem to be a magic black box lacking interpretability and understanding. This brings up many open safety and security issues with enormous and urgent demands on rigorous methodologies and engineering practice for quality enhancement. A plethora of studies have shown that state-of-the-art DL systems suffer from defects and vulnerabilities that can lead to severe loss and tragedies, especially when applied to real-world safety-critical applications. In this paper, we perform a large-scale study and construct a paper repository of 223 relevant works to the quality assurance, security\u00a0\u2026", "total_citations": {"2018": 5, "2019": 5, "2020": 12, "2021": 11, "2022": 11, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Yb2T6HvJONwC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3238147.3238219", "authors": ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "publication_date": "2018/9/3", "book": "Proceedings of the 33rd ACM/IEEE international conference on automated software engineering", "pages": "679-690", "description": "Analyzing and understanding source code changes is important in a variety of software maintenance tasks. To this end, many code differencing and code change summarization methods have been proposed. For some tasks (e.g. code review and software merging), however, those differencing methods generate too fine-grained a representation of code changes, and those summarization methods generate too coarse-grained a representation of code changes. Moreover, they do not consider the relationships among code changes. Therefore, the generated differences or summaries make it not easy to analyze and understand code changes in some software maintenance tasks.   In this paper, we propose a code differencing approach, named CLDIFF, to generate concise linked code differences whose granularity is in between the existing code differencing and code change summarization methods. The goal of\u00a0\u2026", "total_citations": {"2019": 7, "2020": 13, "2021": 12, "2022": 7, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4Yq6kJLCcecC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-41202-8_21", "authors": ["Manman Chen", "Tian Huat Tan", "Jun Sun", "Yang Liu", "Jun Pang", "Xiaohong Li"], "publication_date": "2013", "conference": "Formal Methods and Software Engineering: 15th International Conference on Formal Engineering Methods, ICFEM 2013, Queenstown, New Zealand, October 29\u2013November 1, 2013, Proceedings 15", "pages": "313-328", "publisher": "Springer Berlin Heidelberg", "description": "Web services have emerged as an important technology nowadays. There are two kinds of requirements that are crucial to web service composition, which are functional and non-functional requirements. Functional requirements focus on functionality of the composed service, e.g., given a booking service, an example of functional requirements is that a flight ticket with price higher than $2000 will never be purchased. Non-functional requirements are concerned with the quality of service (QoS), e.g., an example of the booking service\u2019s non-functional requirements is that the service will respond to the user within 5 seconds. Non-functional requirements are important to web service composition, and are often an important clause in service-level agreements (SLAs). Even though the functional requirements are satisfied, a slow or unreliable service may still not be adopted. In our paper, we propose an\u00a0\u2026", "total_citations": {"2013": 1, "2014": 6, "2015": 7, "2016": 11, "2017": 4, "2018": 3, "2019": 2, "2020": 2, "2021": 3, "2022": 5, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hegzVdMJwJYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3394171.3413544", "authors": ["Run Wang", "Felix Juefei-Xu", "Qing Guo", "Yihao Huang", "Xiaofei Xie", "Lei Ma", "Yang Liu"], "publication_date": "2020/10/12", "book": "Proceedings of the 28th ACM International Conference on Multimedia", "pages": "1376-1385", "description": "Nowadays, digital facial content manipulation has become ubiquitous and realistic with the success of generative adversarial networks (GANs), making face recognition (FR) systems suffer from unprecedented security concerns. In this paper, we investigate and introduce a new type of adversarial attack to evade FR systems by manipulating facial content, called adversarial morphing attack (a.k.a. Amora). In contrast to adversarial noise attack that perturbs pixel intensity values by adding human-imperceptible noise, our proposed adversarial morphing attack works at the semantic level that perturbs pixels spatially in a coherent manner. To tackle the black-box attack problem, we devise a simple yet effective joint dictionary learning pipeline to obtain a proprietary optical flow field for each attack. Our extensive evaluation on two popular FR systems demonstrates the effectiveness of our adversarial morphing attack at\u00a0\u2026", "total_citations": {"2019": 2, "2020": 12, "2021": 11, "2022": 14, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:W6h41lW4BooC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9402046/", "authors": ["Yan Zheng", "Yi Liu", "Xiaofei Xie", "Yepang Liu", "Lei Ma", "Jianye Hao", "Yang Liu"], "publication_date": "2021/5/22", "conference": "2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)", "pages": "423-435", "publisher": "IEEE", "description": "Web testing has long been recognized as a notoriously difficult task. Even nowadays, web testing still mainly relies on manual efforts in many cases while automated web testing is still far from achieving human-level performance. Key challenges include dynamic content update and deep bugs hiding under complicated user interactions and specific input values, which can only be triggered by certain action sequences in the huge space of all possible sequences. In this paper, we propose WebExplor, an automatic end-to-end web testing framework, to achieve an adaptive exploration of web applications. WebExplor adopts a curiosity-driven reinforcement learning to generate high-quality action sequences (test cases) with temporal logical relations. Besides, WebExplor incrementally builds an automaton during the online testing process, which acts as the high-level guidance to further improve the testing efficiency\u00a0\u2026", "total_citations": {"2021": 3, "2022": 22, "2023": 19}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Zrzg8MEyHc4C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3394171.3413732", "authors": ["Yihao Huang", "Felix Juefei-Xu", "Run Wang", "Qing Guo", "Lei Ma", "Xiaofei Xie", "Jianwen Li", "Weikai Miao", "Yang Liu", "Geguang Pu"], "publication_date": "2020/10/12", "book": "Proceedings of the 28th ACM International Conference on Multimedia", "pages": "1217-1226", "description": "At this moment, GAN-based image generation methods are still imperfect, whose upsampling design has limitations in leaving some certain artifact patterns in the synthesized image. Such artifact patterns can be easily exploited (by recent methods) for difference detection of real and GAN-synthesized images. However, the existing detection methods put much emphasis on the artifact patterns, which can become futile if such artifact patterns were reduced. Towards reducing the artifacts in the synthesized images, in this paper, we devise a simple yet powerful approach termed FakePolisher that performs shallow reconstruction of fake images through a learned linear dictionary, intending to effectively and efficiently reduce the artifacts introduced during image synthesis. In particular, we first train a dictionary model to capture the patterns of real images. Based on this dictionary, we seek the representation of DeepFake\u00a0\u2026", "total_citations": {"2020": 9, "2021": 8, "2022": 15, "2023": 11}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:dONrx3-W1TkC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3395363.3397361", "authors": ["Yifei Xu", "Zhengzi Xu", "Bihuan Chen", "Fu Song", "Yang Liu", "Ting Liu"], "publication_date": "2020/7/18", "book": "Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "376-387", "description": "The binary-level function matching has been widely used to detect whether there are 1-day vulnerabilities in released programs. However, the high false positive is a challenge for current function matching solutions, since the vulnerable function is highly similar to its corresponding patched version. In this paper, the Binary X-Ray (BinXray), a patch based vulnerability matching approach, is proposed to identify the specific 1-day vulnerabilities in target programs accurately and effectively. In the preparing step, a basic block mapping algorithm is designed to extract the signature of a patch, by comparing the given vulnerable and patched programs. The signature is represented as a set of basic block traces. In the detection step, the patching semantics is applied to reduce irrelevant basic block traces to speed up the signature searching. The trace similarity is also designed to identify whether a target program is patched\u00a0\u2026", "total_citations": {"2020": 1, "2021": 12, "2022": 14, "2023": 17}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HklM7qHXWrUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8913495/", "authors": ["Sen Chen", "Lingling Fan", "Chunyang Chen", "Minhui Xue", "Yang Liu", "Lihua Xu"], "publication_date": "2019/11/26", "journal": "IEEE Transactions on Dependable and Secure Computing", "volume": "18", "issue": "6", "pages": "2551-2568", "publisher": "IEEE", "description": "Mobile phishing attacks, such as mimic mobile browser pages, masquerade as legitimate applications by leveraging repackaging or clone techniques, have caused varied yet significant security concerns. Consequently, detection techniques have been receiving increasing attention. However, many such detection methods are not well tested and may therefore still be vulnerable to new types of phishing attacks. In this article, we propose a new attacking technique, named GUI-Squatting attack, which can generate phishing apps (phapps) automatically and effectively on the Android platform. Our method adopts image processing and deep learning algorithms, to enable powerful and large-scale attacks. We observe that a successful phishing attack requires two conditions, page confusion and logic deception during attacks synthesis. We directly optimize these two conditions to create a practical attack. Our\u00a0\u2026", "total_citations": {"2020": 9, "2021": 13, "2022": 14, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:K5ggCqHMkpcC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2771783.2771808", "authors": ["Tian Huat Tan", "Yinxing Xue", "Manman Chen", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2015/7/13", "conference": "Proceedings of the 2015 International Symposium on Software Testing and Analysis", "pages": "246-256", "publisher": "ACM", "description": "Software that support various groups of customers usually require complicated configurations to attain different functionalities. To model the configuration options, feature model is proposed to capture the commonalities and competing variabilities of the product variants in software family or Software Product Line (SPL). A key challenge for deriving a new product is to find a set of features that do not have inconsistencies or conflicts, yet optimize multiple objectives (e.g., minimizing cost and maximizing number of features), which are often competing with each other. Existing works have attempted to make use of evolutionary algorithms (EAs) to address this problem. In this work, we incorporated a novel feedback-directed mechanism into existing EAs. Our empirical results have shown that our method has improved noticeably over all unguided version of EAs on the optimal feature selection. In particular, for case\u00a0\u2026", "total_citations": {"2015": 1, "2016": 9, "2017": 6, "2018": 9, "2019": 7, "2020": 6, "2021": 3, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:BMiRioqqltAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6693091/", "authors": ["Yongzheng Wu", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2013/11/11", "conference": "Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering", "pages": "323-333", "publisher": "IEEE Press", "description": "The principle of least privilege requires that software components should be granted only necessary privileges, so that compromising one component does not lead to compromising others. However, writing privilege separated software is difficult and as a result, a large number of software is monolithic, i.e., it runs as a whole without separation. Manually rewriting monolithic software into privilege separated software requires significant effort and can be error prone. We propose ProgramCutter, a novel approach to automatically partitioning monolithic software using dynamic data dependency analysis. ProgramCutter works by constructing a data dependency graph whose nodes are functions and edges are data dependencies between functions. The graph is then partitioned into subgraphs where each subgraph represents a least privilege component. The privilege separated software runs each component in a\u00a0\u2026", "total_citations": {"2014": 2, "2015": 3, "2016": 5, "2017": 5, "2018": 3, "2019": 7, "2020": 2, "2021": 6, "2022": 7, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KmkpU35IWjAC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S1568494616303751", "authors": ["Yinxing Xue", "Jinghui Zhong", "Tian Huat Tan", "Yang Liu", "Wentong Cai", "Manman Chen", "Jun Sun"], "publication_date": "2016/12/31", "journal": "Applied Soft Computing", "volume": "49", "pages": "1215-1231", "publisher": "Elsevier", "description": "Software configuration, which aims to customize the software for different users (e.g., Linux kernel configuration), is an important and complicated task. In software product line engineering (SPLE), feature oriented domain analysis is adopted and feature model is used to guide the configuration of new product variants. In SPLE, product configuration is an optimal feature selection problem, which needs to find a set of features that have no conflicts and meanwhile achieve multiple design objectives (e.g., minimizing cost and maximizing the number of features). In previous studies, several multi-objective evolutionary algorithms (MOEAs) were used for the optimal feature selection problem and indicator-based evolutionary algorithm (IBEA) was proven to be the best MOEA for this problem. However, IBEA still suffers from the issues of correctness and diversity of found solutions. In this paper, we propose a dual\u00a0\u2026", "total_citations": {"2016": 1, "2017": 3, "2018": 7, "2019": 8, "2020": 6, "2021": 11, "2022": 3, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lDOOmgye57wC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2566486.2568048", "authors": ["Tian Huat Tan", "Manman Chen", "\u00c9tienne Andr\u00e9", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2014/4/7", "conference": "Proceedings of the 23rd international conference on World wide web", "pages": "563-574", "publisher": "ACM", "description": "Service composition uses existing service-based applications as components to achieve a business goal. The composite service operates in a highly dynamic environment; hence, it can fail at any time due to the failure of component services. Service composition languages such as BPEL provide a compensation mechanism to rollback the error. But such a compensation mechanism has several issues. For instance, it cannot guarantee the functional properties of the composite service after compensation. In this work, we propose an automated approach based on a genetic algorithm to calculate the recovery plan that could guarantee the satisfaction of functional properties of the composite service after recovery. Given a composite service with large state space, the proposed method does not require exploring the full state space of the composite service; therefore, it allows efficient selection of recovery plan. In\u00a0\u2026", "total_citations": {"2014": 3, "2015": 9, "2016": 8, "2017": 5, "2018": 6, "2019": 1, "2020": 4, "2021": 3, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9aOYe38lPcwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9153947/", "authors": ["Ting Su", "Lingling Fan", "Sen Chen", "Yang Liu", "Lihua Xu", "Geguang Pu", "Zhendong Su"], "publication_date": "2020/7/31", "journal": "IEEE Transactions on Software Engineering", "volume": "48", "issue": "4", "pages": "1115-1137", "publisher": "IEEE", "description": "Mobile apps have become ubiquitous. Ensuring their correctness and reliability is important. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to both developers and researchers. However, such studies are difficult and yet to be carried out \u2014 this work fills this gap. We collected 16,245 and 8,760 unique exceptions from 2,486 open-source and 3,230 commercial Android apps, respectively, and observed that the exceptions thrown from Android framework (termed  \u201cframework-specific exceptions\u201d ) account for the majority. With one-year effort, we (1) extensively investigated these framework-specific exceptions, and (2) further conducted an online survey of 135 professional app developers about how they analyze, test, reproduce and fix these exceptions\u00a0\u2026", "total_citations": {"2020": 5, "2021": 11, "2022": 7, "2023": 18}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0KZCP5UExFUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2771783.2771815", "authors": ["Xiaofei Xie", "Yang Liu", "Wei Le", "Xiaohong Li", "Hongxu Chen"], "publication_date": "2015/7/13", "conference": "Proceedings of the 2015 International Symposium on Software Testing and Analysis", "pages": "188-198", "publisher": "ACM", "description": "Loops are important yet most challenging program constructs to analyze for various program analysis tasks. Existing loop analysis techniques mainly handle well loops that contain only integer variables with a single path in the loop body. The key challenge in summarizing a multiple-path loop is that a loop traversal can yield a large number of possibilities due to the different execution orders of these paths located in the loop; when a loop contains a conditional branch related to string content, we potentially need to track every character in the string for loop summarization, which is expensive. In this paper, we propose an approach, named S-Looper, to automatically summarize a type of loops related to a string traversal. This type of loops can contain multiple paths, and the branch conditions in the loop can be related to string content. Our approach is to identify patterns of the string based on the branch conditions\u00a0\u2026", "total_citations": {"2016": 3, "2017": 10, "2018": 5, "2019": 13, "2020": 3, "2021": 2, "2022": 2, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:WQTnNU6cpycC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9318560/", "authors": ["Qing Guo", "Wei Feng", "Ruijun Gao", "Yang Liu", "Song Wang"], "publication_date": "2021/1/8", "journal": "IEEE Transactions on Image Processing", "volume": "30", "pages": "1812-1824", "publisher": "IEEE", "description": "The existence of motion blur can inevitably influence the performance of visual object tracking. However, in contrast to the rapid development of visual trackers, the quantitative effects of increasing levels of motion blur on the performance of visual trackers still remain unstudied. Meanwhile, although image-deblurring can produce visually sharp videos for pleasant visual perception, it is also unknown whether visual object tracking can benefit from image deblurring or not. In this paper, we present a Blurred Video Tracking (BVT) benchmark to address these two problems, which contains a large variety of videos with different levels of motion blurs, as well as ground-truth tracking results. To explore the effects of blur and deblurring to visual object tracking, we extensively evaluate 25 trackers on the proposed BVT benchmark and obtain several new interesting findings. Specifically, we find that light motion blur may\u00a0\u2026", "total_citations": {"2020": 4, "2021": 8, "2022": 16, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LdOr7sPPAccC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9054794/", "authors": ["Jing Kai Siow", "Cuiyun Gao", "Lingling Fan", "Sen Chen", "Yang Liu"], "publication_date": "2020/2/18", "conference": "2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER)", "pages": "284-295", "publisher": "IEEE", "description": "Code review is a common process that is used by developers, in which a reviewer provides useful comments or points out defects in the submitted source code changes via pull request. Code review has been widely used for both industry and open-source projects due to its capacity in early defect identification, project maintenance, and code improvement. With rapid updates on project developments, code review becomes a non-trivial and labor-intensive task for reviewers. Thus, an automated code review engine can be beneficial and useful for project development in practice. Although there exist prior studies on automating the code review process by adopting static analysis tools or deep learning techniques, they often require external sources such as partial or full source code for accurate review suggestion. In this paper, we aim at automating the code review process only based on code changes and the\u00a0\u2026", "total_citations": {"2020": 2, "2021": 8, "2022": 19, "2023": 12}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yGgOC45Jz5YC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8055437/", "authors": ["Yuan Zhou", "Hesuan Hu", "Yang Liu", "Shang-Wei Lin", "Zuohua Ding"], "publication_date": "2017/10/2", "journal": "IEEE Transactions on Systems, Man, and Cybernetics: Systems", "issue": "99", "pages": "1-15", "publisher": "IEEE", "description": "Motion planning is one of the most critical problems in multirobot systems. The basic target is to generate a collision-free trajectory for each robot from its initial position to the target position. In this paper, we study the trajectory planning for the multirobot systems operating in unstructured and changing environments. Each robot is equipped with some sensors of limited sensing ranges. We propose a fully distributed approach to planning trajectories for such systems. It combines the model predictive control (MPC) strategy and the incremental sequential convex programming (iSCP) method. The MPC framework is applied to detect the local running environment real-timely with the concept of receding horizon. For each robot, a nonlinear programming is built in its current prediction horizon. To construct its own optimization problem, a robot first needs to communicate with its neighbors to retrieve their current states\u00a0\u2026", "total_citations": {"2018": 5, "2019": 7, "2020": 9, "2021": 8, "2022": 6, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lRzkMCTRmMwC": {"external_link": "https://link.springer.com/article/10.1007/s11704-013-3091-5", "authors": ["Yuanjie Si", "Jun Sun", "Yang Liu", "Jin Song Dong", "Jun Pang", "Shao Jie Zhang", "Xiaohu Yang"], "publication_date": "2014/2/1", "journal": "Frontiers of Computer Science", "volume": "8", "issue": "1", "pages": "1-16", "publisher": "Springer Berlin Heidelberg", "description": "Recent development on distributed systems has shown that a variety of fairness constraints (some of which are only recently defined) play vital roles in designing self-stabilizing population protocols. Existing model checkers are deficient in verifying the systems as only limited kinds of fairness are supported with limited verification efficiency. In this work, we support model checking of distributed systems in the toolkit PAT (process analysis toolkit), with a variety of fairness constraints (e.g., process-level weak/strong fairness, event-level weak/strong fairness, strong global fairness). It performs on-the-fly verification against linear temporal properties. We show through empirical evaluation (on recent population protocols as well as benchmark systems) that PAT has advantage in model checking with fairness. Previously unknown bugs have been revealed against systems which are designed to function only with\u00a0\u2026", "total_citations": {"2014": 1, "2015": 4, "2016": 4, "2017": 4, "2018": 7, "2019": 4, "2020": 5, "2021": 3, "2022": 3, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9hNLEifDsrsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7094257/", "authors": ["Hesuan Hu", "Yang Liu", "Ling Yuan"], "publication_date": "2015/4/24", "journal": "IEEE Transactions on Control Systems Technology", "volume": "24", "issue": "1", "pages": "81-95", "publisher": "IEEE", "description": "Modern complex systems require intensive application of sophisticated supervisors. Structural simplification techniques are one of the fundamental researches in the context of flexible manufacturing systems (FMSs). They can reduce implementation cost, mitigate fabrication complexity, and improve reliability. Several typical methods have been developed along this direction. In order to thoroughly explore their effectiveness and performance, we not only conduct a comparison investigation but also develop some new theoretical results. Several analytical results and performance measures are proposed for their qualitative and quantitative comparison. Our approach can assist researchers and practitioners to better comprehend the inherent mechanisms and relative merits of these simplification methodologies as well as their applicability in FMSs. This paper is motivated by FMSs' control; however, it is also\u00a0\u2026", "total_citations": {"2016": 1, "2017": 3, "2018": 3, "2019": 7, "2020": 9, "2021": 5, "2022": 8, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qxL8FJ1GzNcC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-24559-6_26", "authors": ["Manchun Zheng", "Jun Sun", "Yang Liu", "Jin Song Dong", "Yu Gu"], "publication_date": "2011", "conference": "Formal Methods and Software Engineering: 13th International Conference on Formal Engineering Methods, ICFEM 2011, Durham, UK, October 26-28, 2011. Proceedings 13", "pages": "372-387", "publisher": "Springer Berlin Heidelberg", "description": "Wireless sensor networks (WSNs) are expected to run unattendedly for critical tasks. To guarantee the correctness of WSNs is important, but highly nontrivial due to the distributed nature. In this work, we present an automatic approach to directly verify WSNs built with TinyOS applications implemented in the NesC language. To achieve this target, we firstly define a set of formal operational semantics for most of the NesC language structures for the first time. This allows us to capture the behaviors of sensors by labelled transition systems (LTSs), which are the underlying semantic models of NesC programs. Secondly, WSNs are modeled as the composition of sensors with a network topology. Verifications of individual sensors and the whole WSN become possible by exploring the corresponding LTSs using model checking. With substantial engineering efforts, we implemented this approach in the tool NesC\u00a0\u2026", "total_citations": {"2011": 1, "2012": 3, "2013": 12, "2014": 4, "2015": 5, "2016": 5, "2017": 1, "2018": 2, "2019": 3, "2020": 1, "2021": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:VTkKiNFP83YC": {"external_link": "https://www.researchgate.net/profile/Qing-Guo-17/publication/344334686_It's_Raining_Cats_or_Dogs_Adversarial_Rain_Attack_on_DNN_Perception/links/5f737eb1299bf1b53effb0fa/Its-Raining-Cats-or-Dogs-Adversarial-Rain-Attack-on-DNN-Perception.pdf", "authors": ["Liming Zhai", "Felix Juefei-Xu", "Qing Guo", "Xiaofei Xie", "Lei Ma", "Wei Feng", "Shengchao Qin", "Yang Liu"], "publication_date": "2020/9/19", "journal": "arXiv preprint arXiv:2009.09205", "volume": "2", "description": "Rain is a common phenomenon in nature and an essential factor for many deep neural network (DNN) based perception systems. Rain can often post inevitable threats that must be carefully addressed especially in the context of safetyand security-sensitive scenarios (eg, autonomous driving). Therefore, a comprehensive investigation of the potential risks of the rain to a DNN is of great importance. Unfortunately, in practice, it is often rather difficult to collect or synthesize rainy images that can represent all raining situations that possibly occur in the real world. To this end, in this paper, we start from a new perspective and propose to combine two totally different studies, ie, rainy image synthesis and adversarial attack. We present an adversarial rain attack, with which we could simulate various rainy situations with the guidance of deployed DNNs and reveal the potential threat factors that can be brought by rain, helping to develop more rain-robust DNNs. In particular, we propose a factor-aware rain generation that simulates rain steaks according to the camera exposure process and models the learnable rain factors for adversarial attack. With this generator, we further propose the adversarial rain attack against the image classification and object detection, where the rain factors are guided by the various DNNs. As a result, it enables to comprehensively study the impacts of the rain factors to DNNs. Our largescale evaluation on three datasets, ie, NeurIPS\u201917 DEV, MS COCO and KITTI, demonstrates that our synthesized rainy images can not only present visually realistic appearances, but also exhibit strong adversarial capability, which builds the\u00a0\u2026", "total_citations": {"2020": 7, "2021": 14, "2022": 12, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:41wR57jXX04C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9186721/", "authors": ["Ming Fan", "Wenying Wei", "Xiaofei Xie", "Yang Liu", "Xiaohong Guan", "Ting Liu"], "publication_date": "2020/9/4", "journal": "IEEE Transactions on Information Forensics and Security", "volume": "16", "pages": "838-853", "publisher": "IEEE", "description": "With the rapid growth of Android malware, many machine learning-based malware analysis approaches are proposed to mitigate the severe phenomenon. However, such classifiers are opaque, non-intuitive, and difficult for analysts to understand the inner decision reason. For this reason, a variety of explanation approaches are proposed to interpret predictions by providing important features. Unfortunately, the explanation results obtained in the malware analysis domain cannot achieve a consensus in general, which makes the analysts confused about whether they can trust such results. In this work, we propose principled guidelines to assess the quality of five explanation approaches by designing three critical quantitative metrics to measure their stability, robustness, and effectiveness. Furthermore, we collect five widely-used malware datasets and apply the explanation approaches on them in two tasks\u00a0\u2026", "total_citations": {"2021": 11, "2022": 18, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:MOFHY6MwG3AC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3134667", "authors": ["Chunyang Chen", "Zhenchang Xing", "Yang Liu"], "publication_date": "2017", "journal": "Proceedings of the ACM on Human-Computer Interaction", "volume": "1", "issue": "32", "pages": "1-32", "description": "Community edits to questions and answers (called post edits) plays an important role in improving content quality in Stack Overflow. Our study of post edits in Stack Overflow shows that a large number of edits are about formatting, grammar and spelling. These post edits usually involve small-scale sentence edits and our survey of trusted contributors suggests that most of them care much or very much about such small sentence edits. To assist users in making small sentence edits, we develop an edit-assistance tool for identifying minor textual issues in posts and recommending sentence edits for correction. We formulate the sentence editing task as a machine translation problem, in which an original sentence is \"translated\" into an edited sentence. Our tool implements a character-level Recurrent Neural Network (RNN) encoder-decoder model, trained with about 6.8 millions original-edited sentence pairs from Stack\u00a0\u2026", "total_citations": {"2018": 5, "2019": 11, "2020": 10, "2021": 8, "2022": 2, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:WF5omc3nYNoC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-15643-4_30", "authors": ["Yang Liu", "Jun Sun", "Jin Dong"], "publication_date": "2010", "journal": "Automated Technology for Verification and Analysis", "pages": "371-377", "publisher": "Springer Berlin/Heidelberg", "description": "During the last two decades, model checking has emerged as an effective system analysis technique complementary to simulation and testing. Many model checking algorithms and state space reduction techniques have been proposed. Although it is desirable to have dedicated model checkers for every language (or application domain), implementing one with effective reduction techniques is rather challenging. In this work, we present a generic and extensible framework PAT, which facilitates users to build customized model checkers. PAT provides a library of state-of-art model checking algorithms as well as support for customizing language syntax, semantics, state space reduction techniques, graphic user interfaces, and even domain specific abstraction techniques. Based on this design, model checkers for concurrent systems, real-time systems, probabilistic systems and Web Services are developed\u00a0\u2026", "total_citations": {"2011": 4, "2012": 5, "2013": 7, "2014": 4, "2015": 4, "2016": 3, "2017": 2, "2018": 4, "2019": 2, "2020": 2, "2021": 1, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EUsVPkoNztoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3474085.3475518", "authors": ["Run Wang", "Felix Juefei-Xu", "Meng Luo", "Yang Liu", "Lina Wang"], "publication_date": "2021/10/17", "book": "Proceedings of the 29th ACM International Conference on Multimedia", "pages": "3546-3555", "description": "In recent years, DeepFake is becoming a common threat to our society, due to the remarkable progress of generative adversarial networks (GAN) in image synthesis. Unfortunately, existing studies that propose various approaches, in fighting against DeepFake and determining if the facial image is real or fake, is still at an early stage. Obviously, the current DeepFake detection method struggles to catch the rapid progress of GANs, especially in the adversarial scenarios where attackers can evade the detection intentionally, such as adding perturbations to fool the DNN-based detectors. While passive detection simply tells whether the image is fake or real, DeepFake provenance, on the other hand, provides clues for tracking the sources in DeepFake forensics. Thus, the tracked fake images could be blocked immediately by administrators and avoid further spread in social networks. In this paper, we investigate the\u00a0\u2026", "total_citations": {"2020": 3, "2021": 5, "2022": 14, "2023": 16}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:udEBkMWtBUQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9530205/", "authors": ["Jakub Breier", "Dirmanto Jap", "Xiaolu Hou", "Shivam Bhasin", "Yang Liu"], "publication_date": "2021/9/6", "journal": "IEEE Transactions on Reliability", "publisher": "IEEE", "description": "Neural networks have been shown to be vulnerable against fault injection attacks. These attacks change the physical behavior of the device during the computation, resulting in a change of value that is currently being computed. They can be realized by various techniques, ranging from clock/voltage glitching to application of lasers to rowhammer. Previous works have mostly explored fault attacks for output misclassification, thus affecting the reliability of neural networks. In this article, we investigate the possibility to reverse engineer neural networks with fault attacks. Sign bit flip fault attack enables the reverse engineering by changing the sign of intermediate values. We develop the first exact extraction method on deep-layer feature extractor networks that provably allows the recovery of proprietary model parameters. Our experiments with Keras library show that the precision error for the parameter recovery for the\u00a0\u2026", "total_citations": {"2020": 3, "2021": 7, "2022": 19, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:x9X1S-hd97YC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8882775/", "authors": ["Ruitao Feng", "Sen Chen", "Xiaofei Xie", "Lei Ma", "Guozhu Meng", "Yang Liu", "Shang-Wei Lin"], "publication_date": "2019/11/10", "conference": "2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "61-70", "publisher": "IEEE", "description": "Currently, Android malware detection is mostly performed on the server side against the increasing number of Android malware. Powerful computing resource gives more exhaustive protection for Android markets than maintaining detection by a single user in many cases. However, apart from the Android apps provided by the official market (i.e., Google Play Store), apps from unofficial markets and third-party resources are always causing a serious security threat to end-users. Meanwhile, it is a time-consuming task if the app is downloaded first and then uploaded to the server side for detection because the network transmission has a lot of overhead. In addition, the uploading process also suffers from the threat of attackers. Consequently, a last line of defense on Android devices is necessary and much-needed. To address these problems, in this paper, we propose an effective Android malware detection system\u00a0\u2026", "total_citations": {"2019": 1, "2020": 12, "2021": 10, "2022": 11, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:IsfZ5sDDKYkC": {"external_link": "https://arxiv.org/abs/1812.05339", "authors": ["Xiaoning Du", "Xiaofei Xie", "Yi Li", "Lei Ma", "Jianjun Zhao", "Yang Liu"], "publication_date": "2018/12/13", "journal": "arXiv preprint arXiv:1812.05339", "description": "Deep learning (DL) defines a data-driven programming paradigm that automatically composes the system decision logic from the training data. In company with the data explosion and hardware acceleration during the past decade, DL achieves tremendous success in many cutting-edge applications. However, even the state-of-the-art DL systems still suffer from quality and reliability issues. It was only until recently that some preliminary progress was made in testing feed-forward DL systems. In contrast to feed-forward DL systems, recurrent neural networks (RNN) follow a very different architectural design, implementing temporal behaviors and memory with loops and internal states. Such stateful nature of RNN contributes to its success in handling sequential inputs such as audio, natural languages and video processing, but also poses new challenges for quality assurance. In this paper, we initiate the very first step towards testing RNN-based stateful DL systems. We model RNN as an abstract state transition system, based on which we define a set of test coverage criteria specialized for stateful DL systems. Moreover, we propose an automated testing framework, DeepCruiser, which systematically generates tests in large scale to uncover defects of stateful DL systems with coverage guidance. Our in-depth evaluation on a state-of-the-art speech-to-text DL system demonstrates the effectiveness of our technique in improving quality and reliability of stateful DL systems.", "total_citations": {"2019": 4, "2020": 12, "2021": 6, "2022": 10, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hUq98zRk74IC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7911333/", "authors": ["Guangdong Bai", "Quanqi Ye", "Yongzheng Wu", "Heila Botha", "Jun Sun", "Yang Liu", "Jin Song Dong", "Willem Visser"], "publication_date": "2017/4/25", "journal": "IEEE Transactions on Software Engineering", "volume": "44", "issue": "6", "pages": "595-612", "publisher": "IEEE", "description": "As feature-rich Android applications (apps for short) are increasingly popularized in security-sensitive scenarios, methods to verify their security properties are highly desirable. Existing approaches on verifying Android apps often have limited effectiveness. For instance, static analysis often suffers from a high false-positive rate, whereas approaches based on dynamic testing are limited in coverage. In this work, we propose an alternative approach, which is to apply the software model checking technique to verify Android apps. We have built a general framework named DroidPF upon Java PathFinder (JPF), towards model checking Android apps. In the framework, we craft an executable mock-up Android OS which enables JPF to dynamically explore the concrete state spaces of the tested apps; we construct programs to generate user interaction and environmental input so as to drive the dynamic execution of the\u00a0\u2026", "total_citations": {"2018": 8, "2019": 5, "2020": 12, "2021": 8, "2022": 3, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-pSblevFsSkC": {"external_link": "https://onlinelibrary.wiley.com/doi/abs/10.1002/int.22510", "authors": ["Fu Song", "Yusi Lei", "Sen Chen", "Lingling Fan", "Yang Liu"], "publication_date": "2021/9", "journal": "International Journal of Intelligent Systems", "volume": "36", "issue": "9", "pages": "5210-5240", "description": "Machine learning (ML) based classifiers are vulnerable to evasion attacks, as shown by recent attacks. However, there is a lack of systematic study of evasion attacks on ML\u2010based anti\u2010phishing detection. In this study, we show that evasion attacks are not only effective on practical ML\u2010based classifiers, but can also be efficiently launched without destructing the functionalities and appearance. For this purpose, we propose three mutation\u2010based attacks, differing in the knowledge of the target classifier, addressing a key technical challenge: automatically crafting an adversarial sample from a known phishing website in a way that can mislead classifiers. To launch attacks in the white\u2010 and gray\u2010box scenarios, we also propose a sample\u2010based collision attack to gain the knowledge of the target classifier. We demonstrate the efficacy of our evasion attacks on the state\u2010of\u2010the\u2010art, Google's phishing page filter, achieved\u00a0\u2026", "total_citations": {"2020": 3, "2021": 6, "2022": 15, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:A_xf8jiGkywC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3423096", "authors": ["Bozhi Wu", "Sen Chen", "Cuiyun Gao", "Lingling Fan", "Yang Liu", "Weiping Wen", "Michael R Lyu"], "publication_date": "2021/3/10", "journal": "ACM Transactions on Software Engineering and Methodology (TOSEM)", "volume": "30", "issue": "2", "pages": "1-29", "publisher": "ACM", "description": "Machine learning\u2013(ML) based approach is considered as one of the most promising techniques for Android malware detection and has achieved high accuracy by leveraging commonly used features. In practice, most of the ML classifications only provide a binary label to mobile users and app security analysts. However, stakeholders are more interested in the reason why apps are classified as malicious in both academia and industry. This belongs to the research area of interpretable ML but in a specific research domain (i.e., mobile malware detection). Although several interpretable ML methods have been exhibited to explain the final classification results in many cutting-edge Artificial Intelligent\u2013based research fields, until now, there is no study interpreting why an app is classified as malware or unveiling the domain-specific challenges. In this article, to fill this gap, we propose a novel and interpretable ML\u00a0\u2026", "total_citations": {"2020": 1, "2021": 7, "2022": 16, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3YTBxAczQXIC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9036058/", "authors": ["Xiaoyuan Xie", "Zhiyi Zhang", "Tsong Yueh Chen", "Yang Liu", "Pak-Lok Poon", "Baowen Xu"], "publication_date": "2020/3/13", "journal": "IEEE Transactions on Reliability", "publisher": "IEEE", "description": "Unsupervised machine learning is the training of an artificial intelligence system using information that is neither classified nor labeled, with a view to modeling the underlying structure or distribution in a dataset. Since unsupervised machine learning systems are widely used in many real-world applications, assessing the appropriateness of these systems and validating their implementations with respect to individual users' requirements and specific application scenarios/contexts are indisputably two important tasks. Such assessments and validation tasks, however, are fairly challenging due to the absence of a priori knowledge of the data. In view of this challenge, in this article, we develop a METamorphic Testing approach to assessing and validating unsupervised machine LEarning systems, abbreviated as mettle. Our approach provides a new way to unveil the (possibly latent) characteristics of various machine\u00a0\u2026", "total_citations": {"2019": 1, "2020": 4, "2021": 9, "2022": 16, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6KBr9xvF6m4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9256983/", "authors": ["Haijun Wang", "Ye Liu", "Yi Li", "Shang-Wei Lin", "Cyrille Artho", "Lei Ma", "Yang Liu"], "publication_date": "2020/11/11", "journal": "IEEE Transactions on Dependable and Secure Computing", "publisher": "IEEE", "description": "Despite the high stakes involved in smart contracts, they are often developed in an undisciplined manner, leaving the security and reliability of blockchain transactions at risk. In this article, we introduce ContraMaster\u2014an oracle-supported dynamic exploit generation framework for smart contracts. Existing approaches mutate only single transactions; ContraMaster exceeds these by mutating the transaction sequences. ContraMaster uses data-flow, control-flow, and the dynamic contract state to guide its mutations. It then monitors the executions of target contract programs, and validates the results against a general-purpose semantic test oracle to discover vulnerabilities. Being a dynamic technique, it guarantees that each discovered vulnerability is a violation of the test oracle and is able to generate the attack script to exploit this vulnerability. In contrast to rule-based approaches, ContraMaster has not shown any\u00a0\u2026", "total_citations": {"2020": 5, "2021": 5, "2022": 11, "2023": 15}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CgSwehex2-EC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8809906/", "authors": ["Xiang Chen", "Yingquan Zhao", "Zhanqi Cui", "Guozhu Meng", "Yang Liu", "Zan Wang"], "publication_date": "2019/8/22", "journal": "IEEE Transactions on Reliability", "volume": "69", "issue": "1", "pages": "70-87", "publisher": "IEEE", "description": "Security vulnerability prediction (SVP) can identify potential vulnerable modules in advance and then help developers to allocate most of the test resources to these modules. To evaluate the performance of different SVP methods, we should take the security audit and code inspection into account and then consider effort-aware performance measures (such as ACC and P opt ). However, to the best of our knowledge, the effectiveness of different SVP methods has not been thoroughly investigated in terms of effort-aware performance measures. In this article, we consider 48 different SVP methods, of which 36 are supervised methods and 12 are unsupervised methods. For the supervised methods, we consider 34 software-metric-based methods and two text-mining-based methods. For the software-metric-based methods, in addition to a large number of classification methods, we also consider four state-of-the-art\u00a0\u2026", "total_citations": {"2019": 1, "2020": 9, "2021": 12, "2022": 5, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LGA7_l5-FVwC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S0005109818304217", "authors": ["Yuan Zhou", "Hesuan Hu", "Yang Liu", "Shang-Wei Lin", "Zuohua Ding"], "publication_date": "2018/12/1", "journal": "Automatica", "volume": "98", "pages": "1-13", "publisher": "Pergamon", "description": "Motion planning of multi-robot systems has been extensively investigated. Many proposed approaches assume that all robots are reliable. However, robots with priori known levels of reliability may be used in applications to account for: (1) the cost in terms of unit price per robot type, and (2) the cost in terms of robot wear in long term deployment. In the former case, higher reliability comes at a higher price, while in the latter replacement may cost more than periodic repairs, e.g., buses, trams, and subways. In this study, we investigate robust control of multi-robot systems, such that the number of robots affected by the failed ones is minimized. It should mandate that the failure of a robot can only affect the motion of robots that collide directly with the failed one. We assume that the robots in a system are divided into reliable and unreliable ones, and each robot has a predetermined and closed path to execute persistent\u00a0\u2026", "total_citations": {"2019": 1, "2020": 8, "2021": 12, "2022": 11, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:zYLM7Y9cAGgC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/1370175.1370187", "authors": ["Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2008/5/10", "conference": "Companion of the 30th international conference on Software engineering", "pages": "919-920", "publisher": "ACM", "description": "System simulation and verification become more demanding as complexity grows. PAT is developed as an interactive system to support composing, simulating and reasoning of process algebra with various extensions like fairness events, global variables and parameterized processes. PAT provides user friendly interfaces to support system modeling and simulation. Furthermore, it embeds two complementing model checking techniques catering for different systems and properties, namely, an explicit on-the-fly model checker which is designed to verify event-based fairness constraints efficiently and a bounded model checker based on state-of-the-art SAT solvers. The model checkers are capable of proving reachability, deadlock-freeness and the full set of Linear Temporal Logic (LTL) properties. Compared to other model checkers, PAT has two key advantages. Firstly, it supports an intuitive annotation of fairness\u00a0\u2026", "total_citations": {"2008": 1, "2009": 2, "2010": 4, "2011": 8, "2012": 5, "2013": 8, "2014": 1, "2015": 1, "2016": 2, "2017": 0, "2018": 1, "2019": 0, "2020": 0, "2021": 0, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:FuNQ1RLggQIC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S0167404822003984", "authors": ["Yisroel Mirsky", "Ambra Demontis", "Jaidip Kotak", "Ram Shankar", "Deng Gelei", "Liu Yang", "Xiangyu Zhang", "Maura Pintor", "Wenke Lee", "Yuval Elovici", "Battista Biggio"], "publication_date": "2022/11/6", "source": "Computers & Security", "pages": "103006", "publisher": "Elsevier Advanced Technology", "description": "AI has provided us with the ability to automate tasks, extract information from vast amounts of data, and synthesize media that is nearly indistinguishable from the real thing. However, positive tools can also be used for negative purposes. In particular, cyber adversaries can use AI to enhance their attacks and expand their campaigns.Although offensive AI has been discussed in the past, there is a need to analyze and understand the threat in the context of organizations. For example, how does an AI-capable adversary impact the cyber kill chain? Does AI benefit the attacker more than the defender? What are the most significant AI threats facing organizations today and what will be their impact on the future?In this study, we explore the threat of offensive AI on organizations. First, we present the background and discuss how AI changes the adversary\u2019s methods, strategies, goals, and overall attack model. Then\u00a0\u2026", "total_citations": {"2021": 2, "2022": 9, "2023": 24}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:r7QigD7TRWAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8804455/", "authors": ["Chongbin Tang", "Sen Chen", "Lingling Fan", "Lihua Xu", "Yang Liu", "Zhushou Tang", "Liang Dou"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)", "pages": "183-192", "publisher": "IEEE", "description": "While there have been various studies towards Android apps and their development, there is limited discussion of the broader class of apps that fall in the fake area. Fake apps and their development are distinct from official apps and belong to the mobile underground industry. Due to the lack of knowledge of the mobile underground industry, fake apps, their ecosystem and nature still remain in mystery. To fill the blank, we conduct the first systematic and comprehensive empirical study on a large-scale set of fake apps. Over 150,000 samples related to the top 50 popular apps are collected for extensive measurement. In this paper, we present discoveries from three different perspectives, namely fake sample characteristics, quantitative study on fake samples and fake authors' developing trend. Moreover, valuable domain knowledge, like fake apps' naming tendency and fake developers' evasive strategies, is then\u00a0\u2026", "total_citations": {"2019": 5, "2020": 9, "2021": 11, "2022": 6, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:H6myOybQgeYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2642937.2642969", "authors": ["Shuang Liu", "Jun Sun", "Yang Liu", "Yue Zhang", "Bimlesh Wadhwa", "Jin Song Dong", "Xinyu Wang"], "publication_date": "2014/9/15", "conference": "Proceedings of the 29th ACM/IEEE international conference on Automated software engineering", "pages": "785-790", "publisher": "ACM", "description": "Use cases, as the primary techniques in the user requirement analysis, have been widely adopted in the requirement engineering practice. As developed early, use cases also serve as the basis for function requirement development, system design and testing. Errors in the use cases could potentially lead to problems in the system design or implementation. It is thus highly desirable to detect errors in use cases. Automatically analyzing use case documents is challenging primarily because they are written in natural languages. In this work, we aim to achieve automatic defect detection in use case documents by leveraging on advanced parsing techniques. In our approach, we first parse the use case document using dependency parsing techniques. The parsing results of each use case are further processed to form an activity diagram. Lastly, we perform defect detection on the activity diagrams. To evaluate our\u00a0\u2026", "total_citations": {"2015": 1, "2016": 3, "2017": 3, "2018": 4, "2019": 6, "2020": 3, "2021": 6, "2022": 3, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4EsMycecMEYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3510003.3510142", "authors": ["Chengwei Liu", "Sen Chen", "Lingling Fan", "Bihuan Chen", "Yang Liu", "Xin Peng"], "publication_date": "2022/5/21", "book": "Proceedings of the 44th International Conference on Software Engineering", "pages": "672-684", "description": "Third-party libraries with rich functionalities facilitate the fast development of JavaScript software, leading to the explosive growth of the NPM ecosystem. However, it also brings new security threats that vulnerabilities could be introduced through dependencies from third-party libraries. In particular, the threats could be excessively amplified by transitive dependencies. Existing research only considers direct dependencies or reasoning transitive dependencies based on reachability analysis, which neglects the NPM-specific dependency resolution rules as adapted during real installation, resulting in wrongly resolved dependencies. Consequently, further fine-grained analysis, such as precise vulnerability propagation and their evolution over time in dependencies, cannot be carried out precisely at a large scale, as well as deriving ecosystem-wide solutions for vulnerabilities in dependencies. To fill this gap, we\u00a0\u2026", "total_citations": {"2021": 1, "2022": 9, "2023": 23}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:S9ByAo1SvpUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3468854", "authors": ["Yaqin Zhou", "Jing Kai Siow", "Chenyu Wang", "Shangqing Liu", "Yang Liu"], "publication_date": "2021/9/28", "journal": "ACM Transactions on Software Engineering and Methodology (TOSEM)", "volume": "31", "issue": "1", "pages": "1-27", "publisher": "ACM", "description": "Security patches in open source software, providing security fixes to identified vulnerabilities, are crucial in protecting against cyber attacks. Security advisories and announcements are often publicly released to inform the users about potential security vulnerability. Despite the National Vulnerability Database (NVD) publishes identified vulnerabilities, a vast majority of vulnerabilities and their corresponding security patches remain beyond public exposure, e.g., in the open source libraries that are heavily relied on by developers. As many of these patches exist in open sourced projects, the problem of curating and gathering security patches can be difficult due to their hidden nature. An extensive and complete security patches dataset could help end-users such as security companies, e.g., building a security knowledge base, or researcher, e.g., aiding in vulnerability research. To efficiently curate security patches\u00a0\u2026", "total_citations": {"2021": 1, "2022": 12, "2023": 20}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:QlYoQ0azr6kC": {"external_link": "https://scholar.google.com/scholar?cluster=9727743218417590017&hl=en&oi=scholarr", "authors": ["Junjie Wang", "Bihuan Chen", "Lei Wei", "Yang Liu"], "publication_date": "2019", "pages": "724-735", "publisher": "IEEE", "total_citations": {"2020": 5, "2021": 4, "2022": 9, "2023": 15}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2VmNxfDIOWgC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7039248/", "authors": ["HeSuan Hu", "MengChu Zhou", "Yang Liu"], "publication_date": "2013/8/17", "conference": "Automation Science and Engineering (CASE), 2013 IEEE International Conference on", "pages": "1139-1144", "publisher": "IEEE", "description": "For event-driven systems like automated manufacturing systems (AMSs), intelligent part dispatching, i.e., to assign various parts to proper processing routes, is crucial to gain high resource utilization and production efficiency. This work proposes an innovative dispatching mechanism, which can better these metrics by minimizing the cycle time, i.e., the mean time to produce a product, while avoiding any deadlock, i.e., no part can proceed due to circuit wait. Its prerequisite is liveness supervision; however, temporal information is associated to certain operation stages for the sake of performance evaluation and throughput maximization, i.e., to maximize the finished-part quantity per time unit. In the paradigm of Petri nets, we show the criticality to prioritize certain activities locally. Our method can well design ratio parameters among distinct processes to improve system productivity.", "total_citations": {"2015": 3, "2016": 3, "2017": 3, "2018": 4, "2019": 7, "2020": 6, "2021": 3, "2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:t1niNHmIXQYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3395363.3397377", "authors": ["Muhui Jiang", "Yajin Zhou", "Xiapu Luo", "Ruoyu Wang", "Yang Liu", "Kui Ren"], "publication_date": "2020/7/18", "book": "Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "401-414", "description": "With the increasing popularity of embedded devices, ARM is becoming the dominant architecture for them. In the meanwhile, there is a pressing need to perform security assessments for these devices. Due to different types of peripherals, it is challenging to dynamically run the firmware of these devices in an emulated environment. Therefore, the static analysis is still commonly used. Existing work usually leverages off-the-shelf tools to disassemble stripped ARM binaries and (implicitly) assume that reliable disassembling binaries and function recognition are solved problems. However, whether this assumption really holds is unknown.  In this paper, we conduct the first comprehensive study on ARM disassembly tools. Specifically, we build 1,896 ARM binaries (including 248 obfuscated ones) with different compilers, compiling options, and obfuscation methods. We then evaluate them using eight state-of-the-art\u00a0\u2026", "total_citations": {"2020": 1, "2021": 12, "2022": 12, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:tp0eXr8pwPYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9531416/", "authors": ["Yupeng Cheng", "Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Shang-Wei Lin", "Weisi Lin", "Wei Feng", "Yang Liu"], "publication_date": "2020/7/14", "journal": "arXiv preprint arXiv:2007.07097", "description": "Image denoising can remove natural noise that widely exists in images captured by multimedia devices due to low-quality imaging sensors, unstable image transmission processes, or low light conditions. Recent works also find that image denoising benefits the high-level vision tasks,  e.g ., image classification. In this work, we try to challenge this common sense and explore a totally new problem,  i.e ., whether the image denoising can be given the capability of fooling the state-of-the-art deep neural networks (DNNs) while enhancing the image quality. To this end, we initiate the very first attempt to study this problem from the perspective of adversarial attack and propose the  adversarial denoise attack . More specifically, our main contributions are three-fold:  First , we identify a new task that stealthily embeds attacks inside the image denoising module widely deployed in multimedia devices as an image post\u00a0\u2026", "total_citations": {"2020": 10, "2021": 9, "2022": 6, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:T5V60G5X4B8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9075200/", "authors": ["Jakub Breier", "Mustafa Khairallah", "Xiaolu Hou", "Yang Liu"], "publication_date": "2020/4/21", "journal": "IEEE Transactions on Circuits and Systems II: Express Briefs", "volume": "67", "issue": "12", "pages": "3322-3326", "publisher": "IEEE", "description": "Current state-of-the-art countermeasures against Fault Injection Attacks (FIA) provide good protection against analysis methods that require the differences in the correct and faulty ciphertext to derive the secret information, such as Differential Fault Analysis (DFA) or collision fault analysis. However, recent progress in Ineffective Fault Analysis (IFA) and Statistical IFA (SIFA) constitutes a real threat against cryptographic implementations. Such methods cannot be thwarted by standard FIA countermeasures that focus on detecting the change in the intermediate data. In this brief, we present a novel method based on error correcting codes that protects implementations against SIFA. We design a set of universal error-correcting gates that can be used for block cipher implementations. We analyze a hardware implementation of protected GIFT-64 and show that our method provides 100% protection against SIFA.", "total_citations": {"2019": 3, "2020": 11, "2021": 7, "2022": 7, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qdelZCX8GBYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3238147.3238208", "authors": ["Yi Huang", "Chunyang Chen", "Zhenchang Xing", "Tian Lin", "Yang Liu"], "publication_date": "2018/9/3", "journal": "Proceedings of the 33rd ACM/IEEE international conference on automated software engineering. ACM", "pages": "214-224", "description": "Developers can use different technologies for many software development tasks in their work. However, when faced with several technologies with comparable functionalities, it is not easy for developers to select the most appropriate one, as comparisons among technologies are time-consuming by trial and error. Instead, developers can resort to expert articles, read official documents or ask questions in QA sites for technology comparison, but it is opportunistic to get a comprehensive comparison as online information is often fragmented or contradictory. To overcome these limitations, we propose the diffTech system that exploits the crowdsourced discussions from Stack Overflow, and assists technology comparison with an informative summary of different comparison aspects. We first build a large database of comparable technologies in software engineering by mining tags in Stack Overflow, and then locate\u00a0\u2026", "total_citations": {"2018": 3, "2019": 6, "2020": 5, "2021": 4, "2022": 11, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CXI6bF9CpJ4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6682903/", "authors": ["Shang-Wei Lin", "Etienne Andr\u00e9", "Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2014/2", "journal": "IEEE Transactions on Software Engineering", "volume": "40", "issue": "2", "pages": "137-153", "publisher": "IEEE", "description": "Compositional techniques such as assume-guarantee reasoning (AGR) can help to alleviate the state space explosion problem associated with model checking. However, compositional verification is difficult to be automated, especially for timed systems, because constructing appropriate assumptions for AGR usually requires human creativity and experience. To automate compositional verification of timed systems, we propose a compositional verification framework using a learning algorithm for automatic construction of timed assumptions for AGR. We prove the correctness and termination of the proposed learning-based framework, and experimental results show that our method performs significantly better than traditional monolithic timed model checking.", "total_citations": {"2013": 2, "2014": 6, "2015": 3, "2016": 0, "2017": 3, "2018": 4, "2019": 3, "2020": 4, "2021": 4, "2022": 0, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:fhZv66dCuXAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6693101/", "authors": ["Hao Xiao", "Jun Sun", "Yang Liu", "Shang-Wei Lin", "Chengnian Sun"], "publication_date": "2013/11/11", "conference": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "432-442", "publisher": "IEEE", "description": "Behavioral models are useful for various software engineering tasks. They are, however, often missing in practice. Thus, specification mining was proposed to tackle this problem. Existing work either focuses on learning simple behavioral models such as finite-state automata, or relies on techniques (e.g., symbolic execution) to infer finite-state machines equipped with data states, referred to as stateful typestates. The former is often inadequate as finite-state automata lack expressiveness in capturing behaviors of data-rich programs, whereas the latter is often not scalable. In this work, we propose a fully automated approach to learn stateful typestates by extending the classic active learning process to generate transition guards (i.e., propositions on data states). The proposed approach has been implemented in a tool called TzuYu and evaluated against a number of Java classes. The evaluation results show that\u00a0\u2026", "total_citations": {"2013": 1, "2014": 1, "2015": 6, "2016": 3, "2017": 6, "2018": 4, "2019": 1, "2020": 3, "2021": 2, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:m1aD9PlKDecC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3433210.3453090", "authors": ["Kangjie Chen", "Shangwei Guo", "Tianwei Zhang", "Xiaofei Xie", "Yang Liu"], "publication_date": "2021/5/24", "book": "Proceedings of the 2021 ACM Asia Conference on Computer and Communications Security", "pages": "307-319", "description": "This paper presents the first model extraction attack against Deep Reinforcement Learning (DRL), which enables an external adversary to precisely recover a black-box DRL model only from its interaction with the environment. Model extraction attacks against supervised Deep Learning models have been widely studied. However, those techniques cannot be applied to the reinforcement learning scenario due to DRL models' high complexity, stochasticity and limited observable information. We propose a novel methodology to overcome the above challenges. The key insight of our approach is that the process of DRL model extraction is equivalent to imitation learning, a well-established solution to learn sequential decision-making policies. Based on this observation, our methodology first builds a classifier to reveal the training algorithm family of the targeted black-box DRL model only based on its predicted actions\u00a0\u2026", "total_citations": {"2021": 7, "2022": 14, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:P5iVsrg4GywC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-06410-9_8", "authors": ["Guangdong Bai", "Jianan Hao", "Jianliang Wu", "Yang Liu", "Zhenkai Liang", "Andrew Martin"], "publication_date": "2014", "conference": "FM 2014: Formal Methods: 19th International Symposium, Singapore, May 12-16, 2014. Proceedings 19", "pages": "110-126", "publisher": "Springer International Publishing", "description": "Trusted computing relies on formally verified trusted computing platforms to achieve high security assurance. In practice, however, new platforms are often proposed without a comprehensive formal evaluation and explicitly defined underlying assumptions. In this work, we propose TRUSTFOUND, a formal foundation and framework for model checking trusted computing platforms. TRUSTFOUND includes a logic for formally modeling platforms, a model of trusted computing techniques and a broad spectrum of threat models. It can be used to check platforms on security properties\u00a0(e.g., confidentiality and attestability) and uncover the implicit assumptions that must be satisfied to guarantee the security properties. In our experiments, TRUSTFOUND is used to encode and model check two trusted platforms. It has identified a total of six implicit assumptions and two severe previously-unknown logic flaws from them.", "total_citations": {"2014": 3, "2015": 8, "2016": 1, "2017": 5, "2018": 4, "2019": 2, "2020": 4, "2021": 1, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:U3HXUhiBGqIC": {"external_link": "https://arxiv.org/abs/2009.08697", "authors": ["Shangwei Guo", "Tianwei Zhang", "Han Qiu", "Yi Zeng", "Tao Xiang", "Yang Liu"], "publication_date": "2021", "journal": "International Joint Conference on Artificial Intelligence (IJCAI)", "description": "Watermarking has become the tendency in protecting the intellectual property of DNN models. Recent works, from the adversary's perspective, attempted to subvert watermarking mechanisms by designing watermark removal attacks. However, these attacks mainly adopted sophisticated fine-tuning techniques, which have certain fatal drawbacks or unrealistic assumptions. In this paper, we propose a novel watermark removal attack from a different perspective. Instead of just fine-tuning the watermarked models, we design a simple yet powerful transformation algorithm by combining imperceptible pattern embedding and spatial-level transformations, which can effectively and blindly destroy the memorization of watermarked models to the watermark samples. We also introduce a lightweight fine-tuning strategy to preserve the model performance. Our solution requires much less resource or knowledge about the watermarking scheme than prior works. Extensive experimental results indicate that our attack can bypass state-of-the-art watermarking solutions with very high success rates. Based on our attack, we propose watermark augmentation techniques to enhance the robustness of existing watermarks.", "total_citations": {"2021": 3, "2022": 12, "2023": 15}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:cTLm0pkq19gC": {"external_link": "https://arxiv.org/abs/2009.09231", "authors": ["Yupeng Cheng", "Felix Juefei-Xu", "Qing Guo", "Huazhu Fu", "Xiaofei Xie", "Shang-Wei Lin", "Weisi Lin", "Yang Liu"], "publication_date": "2020/9/19", "journal": "arXiv preprint arXiv:2009.09231", "description": "Diabetic retinopathy (DR) is a leading cause of vision loss in the world and numerous cutting-edge works have built powerful deep neural networks (DNNs) to automatically classify the DR cases via the retinal fundus images (RFIs). However, RFIs are usually affected by the widely existing camera exposure while the robustness of DNNs to the exposure is rarely explored. In this paper, we study this problem from the viewpoint of adversarial attack and identify a totally new task, i.e., adversarial exposure attack generating adversarial images by tuning image exposure to mislead the DNNs with significantly high transferability. To this end, we first implement a straightforward method, i.e., multiplicative-perturbation-based exposure attack, and reveal the big challenges of this new task. Then, to make the adversarial image naturalness, we propose the adversarial bracketed exposure fusion that regards the exposure attack as an element-wise bracketed exposure fusion problem in the Laplacian-pyramid space. Moreover, to realize high transferability, we further propose the convolutional bracketed exposure fusion where the element-wise multiplicative operation is extended to the convolution. We validate our method on the real public DR dataset with the advanced DNNs, e.g., ResNet50, MobileNet, and EfficientNet, showing our method can achieve high image quality and success rate of the transfer attack. Our method reveals the potential threats to the DNN-based DR automated diagnosis and can definitely benefit the development of exposure-robust automated DR diagnosis method in the future.", "total_citations": {"2020": 8, "2021": 12, "2022": 4, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0oeUc68sgesC": {"external_link": "https://link.springer.com/article/10.1007/s10664-018-9657-y", "authors": ["Chunyang Chen", "Zhenchang Xing", "Yang Liu"], "publication_date": "2019/6/15", "journal": "Empirical Software Engineering", "volume": "24", "issue": "3", "pages": "1155-1194", "publisher": "Springer US", "description": "Third-party libraries are an integral part of many software projects. It often happens that developers need to find analogical libraries that can provide comparable features to the libraries they are already familiar with for different programming languages or different mobile platforms. Existing methods to find analogical libraries are limited by the community-curated list of libraries, blogs, or Q&A posts, which often contain overwhelming or out-of-date information. In this paper, we present a new approach to recommend analogical libraries based on a knowledge base of analogical libraries mined from tags of millions of Stack Overflow questions. The novelty of our approach is to solve analogical-library questions by combining state-of-the-art word embedding technique and domain-specific relational and categorical knowledge mined from Stack Overflow. Given a library and a recommended analogical library, our\u00a0\u2026", "total_citations": {"2019": 6, "2020": 5, "2021": 9, "2022": 5, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:IEHkmGLyHGEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8672718/", "authors": ["Sen Chen", "Lingling Fan", "Ting Su", "Lei Ma", "Yang Liu", "Lihua Xu"], "publication_date": "2019/2/24", "conference": "2019 IEEE 1st International Workshop on Artificial Intelligence for Mobile (AI4Mobile)", "pages": "13-16", "publisher": "IEEE", "description": "Android and iOS are the two dominant platforms for building mobile apps. To provide uniform and smooth user experience, app companies typically employ two teams of programmers to develop UIs (and underlying functionalities) for these two platforms, respectively. However, this development practice is costly for both development and maintenance. To reduce the cost, we take the first step in this direction by proposing an automated cross-platform GUI code generation framework. It can transfer the GUI code implementation between the two mobile platforms. Specifically, our framework takes as input the UI pages and outputs the GUI code for the target platform (e.g., Android or iOS). It contains three phases, i.e., component identification, component type mapping, and GUI code generation. It leverages image processing and deep learning classification techniques. Apart from the UI pages of an app, this framework\u00a0\u2026", "total_citations": {"2019": 3, "2020": 4, "2021": 10, "2022": 8, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:SSsxPzPPytkC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8241837/", "authors": ["Xiaofei Xie", "Bihuan Chen", "Liang Zou", "Yang Liu", "Wei Le", "Xiaohong Li"], "publication_date": "2017/12/29", "journal": "IEEE Transactions on Software Engineering", "volume": "45", "issue": "6", "pages": "537-557", "publisher": "IEEE", "description": "Analyzing loops is very important for various software engineering tasks such as bug detection, test case generation and program optimization. However, loops are very challenging structures for program analysis, especially when (nested) loops contain multiple paths that have complex interleaving relationships. In this paper, we propose the path dependency automaton (PDA) to capture the dependencies among the multiple paths in a loop. Based on the PDA, we first propose a loop classification to understand the complexity of loop summarization. Then, we propose a loop analysis framework, named Proteus, which takes a loop program and a set of variables of interest as inputs and summarizes path-sensitive loop effects (i.e., disjunctive loop summary) on the variables of interest. An algorithm is proposed to traverse the PDA to summarize the effect for all possible executions in the loop. We have evaluated\u00a0\u2026", "total_citations": {"2019": 9, "2020": 5, "2021": 7, "2022": 6, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:iHNVki4A1WcC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7727817/", "authors": ["Annamalai Narayanan", "Guozhu Meng", "Liu Yang", "Jinliang Liu", "Lihui Chen"], "publication_date": "2016/7", "conference": "2016 International Joint Conference on Neural Networks (IJCNN 2016)", "pages": "4701-4708", "description": "In this paper, we propose a novel graph kernel specifically to address a challenging problem in the field of cyber-security, namely, malware detection. Previous research has revealed the following: (1) Graph representations of programs are ideally suited for malware detection as they are robust against several attacks, (2) Besides capturing topological neighbourhoods (i.e., structural information) from these graphs it is important to capture the context under which the neighbourhoods are reachable to accurately detect malicious neighbourhoods. We observe that state-of-the-art graph kernels, such as Weisfeiler-Lehman kernel (WLK) capture the structural information well but fail to capture contextual information. To address this, we develop the Contextual Weisfeiler-Lehman kernel (CWLK) which is capable of capturing both these types of information. We show that for the malware detection problem, CWLK is more\u00a0\u2026", "total_citations": {"2016": 2, "2017": 7, "2018": 4, "2019": 3, "2020": 2, "2021": 9, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LgRImbQfgY4C": {"external_link": "https://link.springer.com/article/10.1007/s10009-012-0235-0", "authors": ["Chunqing Chen", "Jun Sun", "Yang Liu", "Jin Song Dong", "Manchun Zheng"], "publication_date": "2012/11", "journal": "International Journal on Software Tools for Technology Transfer (STTT)", "volume": "14", "issue": "6", "pages": "653-671", "publisher": "Springer Berlin/Heidelberg", "description": "Stateflow is an industrial tool for modeling and simulating control systems in model-based development. In this paper, we present our latest work on automatic verification of Stateflow using model-checking techniques. We propose an approach to systematically translate Stateflow diagrams to a formal modeling language called CSP# by precisely following Stateflow\u2019s execution semantics, which is described by examples. A translator is developed inside the Process Analysis Toolkit (PAT) model checker to automate this process with the support of various Stateflow advanced modeling features. Formal analysis can be conducted on the transformed CSP# with PAT\u2019s simulation and model-checking power. Using our approach, we can not only detect bugs in Stateflow diagrams, but also discover subtle semantics flaws in Stateflow user\u2019s guide and demo cases.", "total_citations": {"2012": 1, "2013": 6, "2014": 6, "2015": 5, "2016": 6, "2017": 1, "2018": 1, "2019": 0, "2020": 1, "2021": 1, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_OG5zn83XeQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9542854/", "authors": ["Xian Zhan", "Tianming Liu", "Lingling Fan", "Li Li", "Sen Chen", "Xiapu Luo", "Yang Liu"], "publication_date": "2021/9/21", "source": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "description": "Third-party libraries (TPLs) have been widely used in mobile apps, which play an essential part in the entire Android ecosystem. However, TPL is a double-edged sword. On the one hand, it can ease the development of mobile apps. On the other hand, it also brings security risks such as privacy leaks or increased attack surfaces (e.g., by introducing over-privileged permissions) to mobile apps. Although there are already many studies for characterizing third-party libraries, including automated detection, security and privacy analysis of TPLs, TPL attributes analysis, etc., what strikes us odd is that there is no systematic study to summarize those studies\u2019 endeavors. To this end, we conduct the first systematic literature review on Android TPL-related research. Following a well-defined systematic literature review protocol, we collected 74 primary research papers closely related to Android third-party library from 2012 to\u00a0\u2026", "total_citations": {"2022": 11, "2023": 18}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CLQ-NLsb8zAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9428437/", "authors": ["Binyu Tian", "Qing Guo", "Felix Juefei-Xu", "Wen Le Chan", "Yupeng Cheng", "Xiaohong Li", "Xiaofei Xie", "Shengchao Qin"], "publication_date": "2021/7/5", "conference": "2021 IEEE International Conference on Multimedia and Expo (ICME)", "pages": "1-6", "publisher": "IEEE", "description": "Chest X-ray plays a key role in screening and diagnosis of many lung diseases including the COVID-19. Many works construct deep neural networks (DNNs) for chest X-ray images to realize automated and efficient diagnosis of lung diseases. However, bias field caused by the improper medical image acquisition process widely exists in the chest X-ray images while the robustness of DNNs to the bias field is rarely explored, posing a threat to the X-ray-based automated diagnosis system. In this paper, we study this problem based on the adversarial attack and propose a brand new attack, i.e., adversarial bias field attack where the bias field instead of the additive noise works as the adversarial perturbations for fooling DNNs. This novel attack poses a key problem: how to locally tune the bias field to realize high attack success rate while maintaining its spatial smoothness to guarantee high realisticity. These two goals\u00a0\u2026", "total_citations": {"2020": 7, "2021": 12, "2022": 7, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:DRUjQUnLNDcC": {"external_link": "http://openaccess.thecvf.com/content/ICCV2021/html/Guo_Learning_To_Adversarially_Blur_Visual_Object_Tracking_ICCV_2021_paper.html", "authors": ["Qing Guo", "Ziyi Cheng", "Felix Juefei-Xu", "Lei Ma", "Xiaofei Xie", "Yang Liu", "Jianjun Zhao"], "publication_date": "2021", "conference": "Proceedings of the IEEE/CVF International Conference on Computer Vision", "pages": "10839-10848", "description": "Motion blur caused by the moving of the object or camera during the exposure can be a key challenge for visual object tracking, affecting tracking accuracy significantly. In this work, we explore the robustness of visual object trackers against motion blur from a new angle, ie, adversarial blur attack (ABA). Our main objective is to online transfer input frames to their natural motion-blurred counterparts while misleading the state-of-the-art trackers during the tracking process. To this end, we first design the motion blur synthesizing method for visual tracking based on the generation principle of motion blur, considering the motion information and the light accumulation process. With this synthetic method, we propose optimization-based ABA (OP-ABA) by iteratively optimizing an adversarial objective function against the tracking wrt the motion and light accumulation parameters. The OP-ABA is able to produce natural adversarial examples but the iteration can cause heavy time cost, making it unsuitable for attacking real-time trackers. To alleviate this issue, we further propose one-step ABA (OS-ABA) where we design and train a joint adversarial motion and accumulation predictive network (JAMANet) with the guidance of OP-ABA, which is able to efficiently estimate the adversarial motion and accumulation parameters in a one-step way. The experiments on four popular datasets (eg, OTB100, VOT2018, UAV123, and LaSOT) demonstrate that our methods are able to cause significant accuracy drops on four state-of-the-art trackers with high transferability. Please find the source code at https://github. com/tsingqguo/ABA.", "total_citations": {"2021": 3, "2022": 7, "2023": 19}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rEjdzzKT7SMC": {"external_link": "http://openaccess.thecvf.com/content/CVPR2021/html/Gao_Privacy-Preserving_Collaborative_Learning_With_Automatic_Transformation_Search_CVPR_2021_paper.html", "authors": ["Wei Gao", "Shangwei Guo", "Tianwei Zhang", "Han Qiu", "Yonggang Wen", "Yang Liu"], "publication_date": "2021", "conference": "Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition", "pages": "114-123", "description": "Collaborative learning has gained great popularity due to its benefit of data privacy protection: participants can jointly train a Deep Learning model without sharing their training sets. However, recent works discovered that an adversary can fully recover the sensitive training samples from the shared gradients. Such reconstruction attacks pose severe threats to collaborative learning. Hence, effective mitigation solutions are urgently desired. In this paper, we propose to leverage data augmentation to defeat reconstruction attacks: by preprocessing sensitive images with carefully-selected transformation policies, it becomes infeasible for the adversary to extract any useful information from the corresponding gradients. We design a novel search method to automatically discover qualified policies. We adopt two new metrics to quantify the impacts of transformations on data privacy and model usability, which can significantly accelerate the search speed. Comprehensive evaluations demonstrate that the policies discovered by our method can defeat existing reconstruction attacks in collaborative learning, with high efficiency and negligible impact on the model performance.", "total_citations": {"2021": 6, "2022": 11, "2023": 12}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0_RpHV3rhqYC": {"external_link": "https://eprint.iacr.org/2017/829", "authors": ["Jakub Breier", "Xiaolu Hou", "Yang Liu"], "publication_date": "2018/5/8", "journal": "IACR Transactions on Cryptographic Hardware and Embedded Systems", "pages": "96-122", "description": "Over the past decades, fault injection attacks have been extensively studied due to their capability to efficiently break cryptographic implementations. Fault injection attack models are normally determined by analyzing the cipher structure and finding exploitable spots in non-linear and permutation layers. However, this level of abstraction is often too high to distinguish vulnerable parts of software implementations, due to specific operations and optimizations. On the other hand, manually analyzing the assembly code requires non-negligible amount of time and expertise. In this paper, we propose an automated approach for analyzing cipher implementations in assembly. We represent the whole assembly program as a data flow graph so that the vulnerable spots can be found efficiently. Fault propagation is analyzed in a subgraph constructed from each vulnerable spot, allowing equations for Differential Fault Analysis (DFA) to be automatically generated. We have created a tool that implements our approach: DATAC-DFA Automation Tool for Assembly Code. We have successfully used this tool for attacking PRESENT-80, being able to find implementation-specific vulnerabilities that can be exploited in order to recover the last round key with 16 faults. Our results show that DATAC is useful in finding attack spots that are not visible from the cipher structure, but can be easily exploited when dealing with real-world implementations.", "total_citations": {"2018": 1, "2019": 9, "2020": 7, "2021": 4, "2022": 4, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:r655XaDZu5IC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2591062.2591070", "authors": ["Manman Chen", "Tian Huat Tan", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2014/5/31", "conference": "Companion Proceedings of the 36th International Conference on Software Engineering", "pages": "564-567", "publisher": "ACM", "description": "Web service composition is an emerging technique to develop Web applications by composing existing Web services. Web service composition is subject to two important classes of requirements, i.e., functional and non-functional requirements. Both are crucial to Web service composition. Therefore, it is desirable to verify combined functional and non-functional requirements for Web service composition. We present VeriWS, a tool to verify combined functional and non-functional requirements of Web service composition. VeriWS captures the semantics of Web service composition and verifies it directly based on the semantics. We also show how to describe Web service composition and properties using VeriWS. The YouTube video for demonstration of VeriWS is available at https://sites. google.com/site/veriwstool/.", "total_citations": {"2015": 5, "2016": 9, "2017": 3, "2018": 3, "2019": 2, "2020": 4, "2021": 0, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-yGd096yOn8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6606600/", "authors": ["Tian Huat Tan", "\u00c9tienne Andr\u00e9", "Jun Sun", "Yang Liu", "Jin Song Dong", "Manman Chen"], "publication_date": "2013/5/18", "conference": "Proceedings of the 2013 International Conference on Software Engineering", "pages": "542-551", "publisher": "IEEE Press", "description": "Service composition makes use of existing service-based applications as components to achieve a business goal. In time critical business environments, the response time of a service is crucial, which is also reflected as a clause in service level agreements (SLAs) between service providers and service users. To allow the composite service to fulfill the response time requirement as promised, it is important to find a feasible set of component services, such that their response time could collectively allow the satisfaction of the response time of the composite service. In this work, we propose a fully automated approach to synthesize the response time requirement of component services, in the form of a constraint on the local response times, that guarantees the global response time requirement. Our approach is based on parameter synthesis techniques for real-time systems. It has been implemented and evaluated\u00a0\u2026", "total_citations": {"2013": 2, "2014": 9, "2015": 3, "2016": 8, "2017": 1, "2018": 2, "2019": 0, "2020": 3, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LI9QrySNdTsC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-24372-1_35", "authors": ["Shang-Wei Lin", "\u00c9tienne Andr\u00e9", "Jin Dong", "Jun Sun", "Yang Liu"], "publication_date": "2011", "journal": "Automated Technology for Verification and Analysis", "pages": "463-472", "publisher": "Springer Berlin/Heidelberg", "description": "In inference of untimed regular languages, given an unknown language to be inferred, an automaton is constructed to accept the unknown language from answers to a set of membership queries each of which asks whether a string is contained in the unknown language. One of the most well-known regular inference algorithms is the L* algorithm, proposed by Angluin in 1987, which can learn a minimal deterministic finite automaton (DFA) to accept the unknown language. In this work, we propose an efficient polynomial time learning algorithm, TL*, for timed regular language accepted by event-recording automata. Given an unknown timed regular language, TL* first learns a DFA accepting the untimed version of the timed language, and then passively refines the DFA by adding time constraints. We prove the correctness, termination, and minimality of the proposed TL* algorithm.", "total_citations": {"2012": 2, "2013": 5, "2014": 3, "2015": 3, "2016": 0, "2017": 2, "2018": 3, "2019": 2, "2020": 4, "2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:t6hKUfryX1MC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-662-63958-0_13", "authors": ["Palina Tolmach", "Yi Li", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2021/3/1", "conference": "International Conference on Financial Cryptography and Data Security", "pages": "149-161", "publisher": "Springer, Berlin, Heidelberg", "description": "Decentralized finance (DeFi) has become one of the most successful applications of blockchain and smart contracts. The DeFi ecosystem enables a wide range of crypto-financial activities, while the underlying smart contracts often contain bugs, with many vulnerabilities arising from the unforeseen consequences of composing DeFi protocols together. In this paper, we propose a formal process-algebraic technique that models DeFi protocols in a compositional manner to allow for efficient property verification. We also conduct a case study to demonstrate the proposed approach in analyzing the composition of two interacting DeFi protocols, namely, Curve and Compound. Finally, we discuss how the proposed modeling and verification approach can be used to analyze financial and security properties of interest.", "total_citations": {"2021": 7, "2022": 10, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:E9jS3u5z5twC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8594860/", "authors": ["Charlie Soh", "Annamalai Narayanan", "Lihui Chen", "Yang Liu", "Lipo Wang"], "publication_date": "2018/11", "conference": "The 2018 IEEE International Conference on Data Mining (ICDM 2018)", "pages": "357-366", "description": "Building behavior profiles of Android applications (apps) with holistic, rich and multi-view information (e.g., incorporating several semantic views of an app such as API sequences, system calls, etc.) would help catering downstream analytics tasks such as app categorization, recommendation and malware analysis significantly better. Towards this goal, we design a semisupervised Representation Learning (RL) framework named apk2vec to automatically generate a compact representation (aka profile/embedding) for a given app. More specifically, apk2vec has the three following unique characteristics which make it an excellent choice for large-scale app profiling: (1) it encompasses information from multiple semantic views such as API sequences, permissions, etc., (2) being a semi-supervised embedding technique, it can make use of labels associated with apps (e.g., malware family or app category labels) to\u00a0\u2026", "total_citations": {"2020": 8, "2021": 13, "2022": 1, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YsMSGLbcyi4C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-10373-5_22", "authors": ["Yang Liu", "Jun Sun", "Jin Dong"], "publication_date": "2009", "journal": "Formal Methods and Software Engineering", "pages": "426-445", "publisher": "Springer Berlin/Heidelberg", "description": "Rapid development in hardware industry has brought the prevalence of multi-core systems with shared-memory, which enabled the speedup of various tasks by using parallel algorithms. The Linear Temporal Logic (LTL) model checking problem is one of the difficult problems to be parallelized or scaled up to multi-core. In this work, we propose an on-the-fly parallel model checking algorithm based on the Tarjan\u2019s strongly connected components (SCC) detection algorithm. The approach can be applied to general LTL model checking or with different fairness assumptions. Further, it is orthogonal to state space reduction techniques like partial order reduction. We enhance our PAT model checker with the technique and show its usability via the automated verification of several real-life systems. Experimental results show that our approach is scalable, especially when a system search space contains many\u00a0\u2026", "total_citations": {"2009": 1, "2010": 5, "2011": 1, "2012": 2, "2013": 7, "2014": 2, "2015": 1, "2016": 3, "2017": 2, "2018": 0, "2019": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kPzzr9KoCG0C": {"external_link": "https://nos.netease.com/mg-file/mg/neteasegamecampus/art_works/20200812/202008122020238603.pdf", "authors": ["Ruimin Shen", "Yan Zheng", "Jianye Hao", "Zhaopeng Meng", "Yingfeng Chen", "Changjie Fan", "Yang Liu"], "publication_date": "2020", "journal": "Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence (IJCAI)", "pages": "3371-3377", "description": "Generating diverse behaviors for game artificial intelligence (Game AI) has been long recognized as a challenging task in the game industry. Designing a Game AI with a satisfying behavioral characteristic (style) heavily depends on the domain knowledge and is hard to achieve manually. Deep reinforcement learning sheds light on advancing the automatic Game AI design. However, most of them focus on creating a superhuman Game AI, ignoring the importance of behavioral diversity in games. To bridge the gap, we introduce a new framework, named EMOGI, which can automatically generate desirable styles with almost no domain knowledge. More importantly, EMOGI succeeds in creating a range of diverse styles, providing behavior-diverse Game AIs. Evaluations on the Atari and real commercial games indicate that, compared to existing algorithms, EMOGI performs better in generating diverse behaviors and significantly improves the efficiency of Game AI design.", "total_citations": {"2021": 10, "2022": 12, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:oyQIn_cjXD4C": {"external_link": "https://www.usenix.org/conference/usenixsecurity20/presentation/xu", "authors": ["Zhengzi Xu", "Yulong Zhang", "Longri Zheng", "Liangzhao Xia", "Chenfu Bao", "Zhi Wang", "Yang Liu"], "publication_date": "2020", "conference": "29th USENIX Security Symposium (USENIX Security 20)", "pages": "2397-2414", "description": "The rapid growth of the Android ecosystem has led to the fragmentation problem where a wide range of (customized) versions of Android OS exist in the market. This poses a severe security issue as it is very costly for Android vendors to fix vulnerabilities in their customized Android kernels in time. The recent development of the hot patching technique provides an ideal solution to solve this problem since it can be applied to a wide range of Android kernels without interrupting their normal functionalities. However, the current hot patches are written by human experts, which can be time-consuming and error-prone.", "total_citations": {"2020": 2, "2021": 8, "2022": 6, "2023": 11}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:BJbdYPG6LGMC": {"external_link": "https://link.springer.com/article/10.1007/s11241-014-9208-6", "authors": ["\u00c9tienne Andr\u00e9", "Yang Liu", "Jun Sun", "Jin-Song Dong"], "publication_date": "2014/11/1", "journal": "Real-Time Systems", "volume": "50", "issue": "5-6", "pages": "620-679", "publisher": "Springer US", "description": "Modeling and verifying complex real-time systems, involving timing delays, are notoriously difficult problems. Checking the correctness of a system for one particular value for each delay does not give any information for other values. It is thus interesting to reason parametrically, by considering that the delays are parameters (unknown constants) and synthesizing a constraint guaranteeing a correct behavior. We present here Parametric Stateful Timed Communicating Sequential Processes, a language capable of specifying and verifying parametric hierarchical real-time systems with complex data structures. Although we prove that the synthesis is undecidable in general, we present several semi-algorithms for efficient parameter synthesis, which behave well in practice. This work has been implemented in a real-time model checker, PSyHCoS, and validated on a set of case studies.", "total_citations": {"2013": 7, "2014": 1, "2015": 3, "2016": 6, "2017": 4, "2018": 0, "2019": 3, "2020": 1, "2021": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hqOjcs7Dif8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5693192/", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Geguang Pu", "Tian Hut Tan"], "publication_date": "2010/11/30", "conference": "Software Engineering Conference (APSEC), 2010 17th Asia Pacific", "pages": "166-175", "publisher": "IEEE", "description": "In recent years, many Web service composition languages have been proposed. Web service choreography describes collaboration protocols of cooperating Web service participants from a global view. Web service orchestration describes collaboration of the Web services in predefined patterns based on local decision about their interactions with one another at the message/execution level. In this work, we present model-based methods to close the gap between the two views. Building on the strength of model checking techniques, Web service choreography and orchestration are verified against temporal properties or against each other (to show that they are consistent). Specialized optimization techniques are developed to handle large Web service models. Furthermore, we propose a method to mechanically synthesize a prototype Web service orchestration from choreography, by repairing the choreography if\u00a0\u2026", "total_citations": {"2009": 1, "2010": 0, "2011": 1, "2012": 1, "2013": 14, "2014": 3, "2015": 2, "2016": 1, "2017": 1, "2018": 1, "2019": 1, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:mYLs_rVKHI4C": {"external_link": "https://arxiv.org/abs/2105.05558", "authors": ["Binyu Tian", "Felix Juefei-Xu", "Qing Guo", "Xiaofei Xie", "Xiaohong Li", "Yang Liu"], "publication_date": "2021/5/12", "journal": "arXiv preprint arXiv:2105.05558", "description": "Vignetting is an inherited imaging phenomenon within almost all optical systems, showing as a radial intensity darkening toward the corners of an image. Since it is a common effect for photography and usually appears as a slight intensity variation, people usually regard it as a part of a photo and would not even want to post-process it. Due to this natural advantage, in this work, we study vignetting from a new viewpoint, i.e., adversarial vignetting attack (AVA), which aims to embed intentionally misleading information into vignetting and produce a natural adversarial example without noise patterns. This example can fool the state-of-the-art deep convolutional neural networks (CNNs) but is imperceptible to humans. To this end, we first propose the radial-isotropic adversarial vignetting attack (RI-AVA) based on the physical model of vignetting, where the physical parameters (e.g., illumination factor and focal length) are tuned through the guidance of target CNN models. To achieve higher transferability across different CNNs, we further propose radial-anisotropic adversarial vignetting attack (RA-AVA) by allowing the effective regions of vignetting to be radial-anisotropic and shape-free. Moreover, we propose the geometry-aware level-set optimization method to solve the adversarial vignetting regions and physical parameters jointly. We validate the proposed methods on three popular datasets, i.e., DEV, CIFAR10, and Tiny ImageNet, by attacking four CNNs, e.g., ResNet50, EfficientNet-B0, DenseNet121, and MobileNet-V2, demonstrating the advantages of our methods over baseline methods on both transferability and image quality.", "total_citations": {"2021": 6, "2022": 13, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:nFloTcPoiwMC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S0005109819305692", "authors": ["Yuan Zhou", "Hesuan Hu", "Yang Liu", "Shang-Wei Lin", "Zuohua Ding"], "publication_date": "2020/2/1", "journal": "Automatica", "volume": "112", "pages": "108706", "publisher": "Pergamon", "description": "Deadlock avoidance is a crucial problem in motion control of multi-robot systems since deadlocks can crash the systems and\u2215 or degrade their performance. However, deadlocks sometimes are difficult to predict in advance because of the existence of higher-order deadlocks, from which a system can lead to a deadlock inevitably. In this paper, we investigate the properties of higher-order deadlocks and propose a distributed approach to their avoidance in multi-robot systems where each robot has a predetermined and closed path to execute persistent motion. After modeling the motion of robots by labeled transition systems (LTSs), we first conclude that there exist at most the (N\u2212 3)-th order deadlocks with N robots. This means that deadlocks, if any, will occur unavoidably within N\u2212 3 steps of corresponding transitions. A distributed algorithm is then proposed to avoid deadlocks in such systems. In the algorithm\u00a0\u2026", "total_citations": {"2020": 5, "2021": 8, "2022": 6, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1xqo9R7SDZkC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8590692/", "authors": ["Guozhu Meng", "Matthew Patrick", "Yinxing Xue Xue", "Yang Liu", "Jie Zhang"], "publication_date": "2019", "journal": "IEEE Transactions on Information Forensics and Security", "description": "The Android ecosystem has recently dominated mobile devices. Android app markets, including official Google Play and other third party markets, are becoming hotbeds, where malware originates and spreads. Android malware has been observed to both propagate within markets and spread between markets. If the spread of Android malware between markets can be predicted, market administrators can take appropriate measures to prevent the outbreak of malware and minimize the damages caused by malware. In this paper, we make the first attempt to protect the Android ecosystem by modeling and predicting the spread of Android malware between markets. To this end, we study the social behaviors that affect the spread of malware, model these spread behaviors with multiple epidemic models, and predict the infection time and order among markets for well-known malware families. To achieve an accurate\u00a0\u2026", "total_citations": {"2019": 3, "2020": 7, "2021": 8, "2022": 5, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:OYHP0ARJxK0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7294234/", "authors": ["Yan Cheng", "HeSuan Hu", "Yang Liu"], "publication_date": "2015/8/24", "conference": "2015 IEEE International Conference on Automation Science and Engineering (CASE)", "pages": "1029-1035", "publisher": "IEEE", "description": "In order to engage automated manufacturing systems in practice, a prerequisite is that they must be immune to deadlocks, which have been extensively investigated for decades by numerous researchers. To ease their effort, resources are presumptively and arbitrarily assumed never to fail; nevertheless, this is quite the opposite in reality. Actually, failures occur frequently due to various causes. In this paper, resource failures will be taken into consideration. In the paradigm of Petri nets, a robust control supervisor is developed to guarantee that the system will not be in stagnation when failures occur unexpectedly. Processes not requiring the failed resources can continue their progress smoothly. Three algorithms are proposed to achieve the tractability in deadlock-freeness, robustness, and concurrency matters, respectively. At each state, they are executed in sequence so as to attain a set of fireable transitions\u00a0\u2026", "total_citations": {"2016": 5, "2017": 4, "2018": 5, "2019": 3, "2020": 3, "2021": 1, "2022": 2, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Fd6TstiuZzAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6976100/", "authors": ["Yun Lin", "Zhenchang Xing", "Xin Peng", "Yang Liu", "Jun Sun", "Wenyun Zhao", "Jinsong Dong"], "publication_date": "2014/9/29", "conference": "2014 IEEE International Conference on Software Maintenance and Evolution", "pages": "341-350", "publisher": "IEEE", "description": "Code clones have to be made explicit and be managed in software maintenance. Researchers have developed many clone detection tools to detect and analyze code clones in software systems. These tools report code clones as similar code fragments in source files. However, clone-related maintenance tasks (e.g., refactorings) often involve a group of code clones appearing in larger syntactic context (e.g., code clones in sibling classes or code clones calling similar methods). Given a list of low-level code-fragment clones, developers have to manually summarize from bottom up low-level code clones that are relevant to the syntactic context of a maintenance task. In this paper, we present a clone summarization technique to summarize code clones with respect to their common syntactic context. The clone summarization allows developers to locate and maintain code clones in a top-down manner by type hierarchy\u00a0\u2026", "total_citations": {"2015": 2, "2016": 1, "2017": 2, "2018": 5, "2019": 5, "2020": 4, "2021": 3, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Tyk-4Ss8FVUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/4549882/", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Jing Sun"], "publication_date": "2008/6/17", "conference": "Theoretical Aspects of Software Engineering, 2008. TASE'08. 2nd IFIP/IEEE International Symposium on", "pages": "23-30", "publisher": "IEEE", "description": "Verification techniques like SAT-based bounded model checking have been successfully applied to a variety of system models. Applying bounded model checking to compositional process algebras is, however, not a trivial task. One challenge is that the number of system states for process algebra models is not statically known, whereas exploring the full state space is computationally expensive. This paper presents a compositional encoding of hierarchical processes as SAT problems and then applies state-of-the-art SAT solvers for bounded model checking. The encoding avoids exploring the full state space for complex systems so as to deal with state space explosion. We developed an automated analyzer which combines complementing model checking techniques (i.e., bounded model checking and explicit on-the-fly model checking) to validate system models against event-based temporal properties. The\u00a0\u2026", "total_citations": {"2008": 1, "2009": 4, "2010": 4, "2011": 2, "2012": 5, "2013": 2, "2014": 1, "2015": 3, "2016": 1, "2017": 1, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Kp2F6cy7E28C": {"external_link": "https://arxiv.org/abs/2305.13860", "authors": ["Yi Liu", "Gelei Deng", "Zhengzi Xu", "Yuekang Li", "Yaowen Zheng", "Ying Zhang", "Lida Zhao", "Tianwei Zhang", "Yang Liu"], "publication_date": "2023/5/23", "journal": "arXiv preprint arXiv:2305.13860", "description": "Large Language Models (LLMs), like ChatGPT, have demonstrated vast potential but also introduce challenges related to content constraints and potential misuse. Our study investigates three key research questions: (1) the number of different prompt types that can jailbreak LLMs, (2) the effectiveness of jailbreak prompts in circumventing LLM constraints, and (3) the resilience of ChatGPT against these jailbreak prompts. Initially, we develop a classification model to analyze the distribution of existing prompts, identifying ten distinct patterns and three categories of jailbreak prompts. Subsequently, we assess the jailbreak capability of prompts with ChatGPT versions 3.5 and 4.0, utilizing a dataset of 3,120 jailbreak questions across eight prohibited scenarios. Finally, we evaluate the resistance of ChatGPT against jailbreak prompts, finding that the prompts can consistently evade the restrictions in 40 use-case scenarios. The study underscores the importance of prompt structures in jailbreaking LLMs and discusses the challenges of robust jailbreak prompt generation and prevention.", "total_citations": {"2023": 25}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:iKmOvsfbmGkC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S092523122100792X", "authors": ["Lun Yiu Nie", "Cuiyun Gao", "Zhicong Zhong", "Wai Lam", "Yang Liu", "Zenglin Xu"], "publication_date": "2021/5/18", "journal": "Neurocomputing", "publisher": "Elsevier", "description": "Automatic generation of high-quality commit messages for code commits can substantially facilitate software developers\u2019 works and coordination. However, the semantic gap between source code and natural language poses a major challenge for the task. Several studies have been proposed to alleviate the challenge but none explicitly involves code contextual information during commit message generation. Specifically, existing research adopts static embedding for code tokens, which maps a token to the same vector regardless of its context. In this paper, we propose a novel Contextualized code representation learning strategy for commit message Generation (CoreGen). CoreGen first learns contextualized code representations which exploit the contextual information behind code commit sequences. The learned representations of code commits built upon Transformer are then fine-tuned for downstream commit\u00a0\u2026", "total_citations": {"2020": 2, "2021": 5, "2022": 9, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LimhlhUO2s4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7862167/", "authors": ["Yongwang Zhao", "David Sanan", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2019/2", "journal": "IEEE Transactions on Dependable and Secure Computing", "volume": "16", "issue": "1", "pages": "127-141", "publisher": "IEEE", "description": "Assurance of information-flow security by formal methods is mandated in security certification of separation kernels. As an industrial standard for improving safety, ARINC 653 has been complied with by mainstream separation kernels. Due to the new trend of integrating safe and secure functionalities into one separation kernel, security analysis of ARINC 653 as well as a formal specification with security proofs are thus significant for the development and certification of ARINC 653 compliant Separation Kernels (ARINC SKs). This paper presents a specification development and security analysis method for ARINC SKs based on refinement. We propose a generic security model and a stepwise refinement framework. Two levels of functional specification are developed by the refinement. A major part of separation kernel requirements in ARINC 653 are modeled, such as kernel initialization, two-level scheduling\u00a0\u2026", "total_citations": {"2018": 3, "2019": 1, "2020": 6, "2021": 3, "2022": 8, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HoaxrAv1AIcC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3180155.3180229", "authors": ["Zhifei Chen", "Bihuan Chen", "Lu Xiao", "Xiao Wang", "Lin Chen", "Yang Liu", "Baowen Xu"], "publication_date": "2018/5/27", "conference": "2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE)", "pages": "811-821", "publisher": "IEEE", "description": "Performance problems widely exist in modern software systems. Existing performance optimization techniques, including profiling-based and pattern-based techniques, usually fail to consider the architectural impacts among methods that easily slow down the overall system performance. This paper contributes a new approach, named Speedoo, to identify groups of methods that should be treated together and deserve high priorities for performance optimization. The uniqueness of Speedoo is to measure and rank the performance optimization opportunities of a method based on 1) the architectural impact and 2) the optimization potential. For each highly ranked method, we locate a respective Optimization Space based on 5 performance patterns generalized from empirical observations. The top ranked optimization spaces are suggested to developers as potential optimization opportunities. Our evaluation on three\u00a0\u2026", "total_citations": {"2018": 1, "2019": 4, "2020": 8, "2021": 5, "2022": 5, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-jjRUaukNG4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9825871/", "authors": ["Jing Kai Siow", "Shangqing Liu", "Xiaofei Xie", "Guozhu Meng", "Yang Liu"], "publication_date": "2022/3/15", "conference": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)", "pages": "554-565", "publisher": "IEEE", "description": "Program semantics learning is the core and fundamental for various code intelligent tasks e.g., vulnerability detection, clone detection. A considerable amount of existing works propose diverse approaches to learn the program semantics for different tasks and these works have achieved state-of-the-art performance. However, currently, a comprehensive and systematic study on evaluating different program representation techniques across diverse tasks is still missed. From this starting point, in this paper, we conduct an empirical study to evaluate different program representation techniques. Specifically, we categorize current mainstream code representation techniques into four categories i.e., Feature-based, Sequence-based, Tree-based, and Graph-based program representation technique and evaluate its performance on three diverse and popular code intelligent tasks i.e., Code Classification, Vulnerability\u00a0\u2026", "total_citations": {"2022": 5, "2023": 19}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lIaPce-xyHYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9365691/", "authors": ["Yan Zheng", "Ziming Yan", "Kangjie Chen", "Jianwen Sun", "Yan Xu", "Yang Liu"], "publication_date": "2021/3/1", "journal": "IEEE Transactions on Smart Grid", "volume": "12", "issue": "4", "pages": "3613-3623", "publisher": "IEEE", "description": "This paper studies the vulnerability of deep reinforcement learning (DRL) models for power systems topology optimization under data perturbations and cyber-attack. DRL has recently solved many complex power system optimization problems. However, it has been practically proven that small perturbations of input data can lead to drastically different control decisions and induce danger. To evaluate and mitigate the security risks of DRL models in power systems, we propose a vulnerability assessment method for such DRL models under noisy data and cyber-attack. In specific, we assess the vulnerability of a DRL model in a way that perturbations are constructed to minimize the model's performance. Besides, several vulnerability indices are proposed to identify the characteristics of perturbations that may cause malfunction of DRL. Simulations on the 14-bus system and the IEEE 118-bus system for topology\u00a0\u2026", "total_citations": {"2021": 5, "2022": 10, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:g-FVFPYC6a8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3061639.3062291", "authors": ["Wenjian He", "Sanjeev Das", "Wei Zhang", "Yang Liu"], "publication_date": "2017/6/18", "conference": "Proceedings of the 54th Annual Design Automation Conference 2017", "pages": "23", "publisher": "ACM", "description": "Code-reuse attack is a growing threat to computing systems as it can circumvent existing security defenses. Fortunately, control flow integrity (CFI) is promising in defending such attack. However, former implementations generally suffer from two major drawbacks: 1) complex pre-processing to obtain control flow graph; 2) high overhead. In this paper, we propose a cross-layer approach that employs basic block information inside the binary code and read-only data to enforce fine-grained control-flow integrity. Our approach demonstrates high applicability and thorough attack detection coverage without static analysis or recompilation. Meanwhile, it can effectively protect even striped programs, while incurring negligible 0.13% performance overhead.", "total_citations": {"2017": 2, "2018": 2, "2019": 1, "2020": 10, "2021": 4, "2022": 4, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lxZgYf9FOvoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2884781.2884861", "authors": ["Tian Huat Tan", "Manman Chen", "Jun Sun", "Yang Liu", "\u00c9tienne Andr\u00e9", "Yinxing Xue", "Jin Song Dong"], "publication_date": "2016/5/14", "conference": "2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)", "pages": "85-95", "publisher": "IEEE", "description": "Recently, many large enterprises (e.g., Netflix, Amazon) have decomposed their monolithic application into services, and composed them to fulfill their business functionalities. Many hosting services on the cloud, with different Quality of Service (QoS) (e.g., availability, cost), can be used to host the services. This is an example of competing services. QoS is crucial for the satisfaction of users. It is important to choose a set of services that maximize the overall QoS, and satisfy all QoS requirements for the service composition. This problem, known as optimal service selection, is NP-hard. Therefore, an effective method for reducing the search space and guiding the search process is highly desirable. To this end, we introduce a novel technique, called Probabilistic Hierarchical Refinement (ProHR). ProHR effectively reduces the search space by removing competing services that cannot be part of the selection. ProHR\u00a0\u2026", "total_citations": {"2016": 2, "2017": 3, "2018": 6, "2019": 5, "2020": 4, "2021": 0, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qNJvDq80yDAC": {"external_link": "https://ifaamas.org/Proceedings/aamas2015/aamas/p791.pdf", "authors": ["Dongxia Wang", "Tim Muller", "Athirai A Irissappane", "Jie Zhang", "Yang Liu"], "publication_date": "2015/5/4", "conference": "Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems", "pages": "791-799", "publisher": "International Foundation for Autonomous Agents and Multiagent Systems", "description": "Unfair rating attacks to trust systems can affect the accuracy of trust evaluation when trust ratings (recommendations) about trustee agents are sought by truster agents from others (advisor agents). A robust trust system should remain accurate, even under the worst-case attacks which yield the least useful recommendations. In this work, we base on information theory to quantify the utility of recommendations. We analyse models where the advisors have the worst-case behaviour. With these models, we formally prove that if the fraction of dishonest advisors exceeds a certain threshold, recommendations become completely useless (in the worst case). Our evaluations on several popular trust models show that they cannot provide accurate trust evaluation under the worst-case as well as many other types of unfair rating attacks. Our way of explicitly modelling dishonest advisors induces a method of computing trust accurately, which can serve to improve the robustness of the trust models.", "total_citations": {"2015": 4, "2016": 8, "2017": 2, "2018": 0, "2019": 4, "2020": 2, "2021": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:25zTQ8aaf3EC": {"external_link": "https://scholar.google.com/scholar?cluster=4500702791790236672&hl=en&oi=scholarr", "authors": ["Shangwei Guo", "Tianwei Zhang", "Xiaofei Xie", "Lei Ma", "Tao Xiang", "Yang Liu"], "publication_date": "2020/2/20", "journal": "arXiv preprint arXiv:2002.08569", "description": "With the proliferation of IoT and edge computing, decentralized learning is becoming more promising. When designing a distributed learning system, one major challenge to consider is Byzantine Fault Tolerance (BFT). Past works have researched Byzantine-resilient solutions for centralized distributed learning. However, there are currently no satisfactory solutions with strong efficiency and security in decentralized systems. In this paper, we propose a novel algorithm, Mozi, to achieve BFT in decentralized learning systems. Specifically, Mozi provides a uniform Byzantine-resilient aggregation rule for benign nodes to select the useful parameter updates and filter out the malicious ones in each training iteration. It guarantees that each benign node in a decentralized system can train a correct model under very strong Byzantine attacks with an arbitrary number of faulty nodes. We perform the theoretical analysis to prove\u00a0\u2026", "total_citations": {"2019": 1, "2020": 6, "2021": 6, "2022": 7, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-1WLWRmjvKAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7939995/", "authors": ["Li Li", "Jun Sun", "Yang Liu", "Meng Sun", "Jin-Song Dong"], "publication_date": "2018/8/1", "journal": "IEEE Transactions on Software Engineering", "volume": "44", "issue": "8", "pages": "725-746", "publisher": "IEEE", "description": "Nowadays, protocols often use time to provide better security. For instance, critical credentials are often associated with expiry dates in system designs. However, using time correctly in protocol design is challenging, due to the lack of time related formal specification and verification techniques. Thus, we propose a comprehensive analysis framework to formally specify as well as automatically verify timed security protocols. A parameterized method is introduced in our framework to handle timing parameters whose values cannot be decided in the protocol design stage. In this work, we first propose timed applied p-calculus as a formal language for specifying timed security protocols. It supports modeling of continuous time as well as application of cryptographic functions. Then, we define its formal semantics based on timed logic rules, which facilitates efficient verification against various authentication and secrecy\u00a0\u2026", "total_citations": {"2016": 2, "2017": 0, "2018": 1, "2019": 4, "2020": 4, "2021": 1, "2022": 8, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vuU-T12QLgwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7530866/", "authors": ["Liang He", "Guozhu Meng", "Yu Gu", "Cong Liu", "Jun Sun", "Ting Zhu", "Yang Liu", "Kang G Shin"], "publication_date": "2016/8/3", "journal": "IEEE Transactions on Mobile Computing", "publisher": "IEEE", "description": "Significant research has been devoted to reduce the energy consumption of mobile devices, but how to increase their energy supply has received far less attention. Moreover, reducing the energy consumption alone does not always extend the device operation time due to a unique battery property - the capacity it delivers hinges critically upon how it is discharged. In this paper, we propose B-MODS, a novel design of battery-aware mobile data service on mobile devices. B-MODS constructs battery-friendly discharge patterns utilizing the recovery effect so as to increase the capacity delivered from batteries while meeting data service requirements. We implement B-MODS as an application layer library on the Android platform. Our experiments with diverse mobile devices under various application scenarios have shown that B-MODS increases the capacity delivery from the battery by up to 49.5 percent, with which an\u00a0\u2026", "total_citations": {"2017": 4, "2018": 3, "2019": 5, "2020": 6, "2021": 2, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:tDdgxD0hSQMC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-08867-9_26", "authors": ["Henri Hansen", "Shang-Wei Lin", "Yang Liu", "Truong Khanh Nguyen", "Jun Sun"], "publication_date": "2014/7/18", "conference": "International Conference on Computer Aided Verification", "pages": "391-406", "publisher": "Springer International Publishing", "description": "A major obstacle for using partial order reduction in the context of real time verification is that the presence of clocks and clock constraints breaks the usual diamond structure of otherwise independent transitions. This is especially true when information of the relative values of clocks is preserved in the form of diagonal constraints. However, when diagonal constraints are relaxed by a suitable abstraction, some diamond structure is re-introduced in the zone graph. In this article, we introduce a variant of the stubborn set method for reducing an abstracted zone graph. Our method works with all abstractions, but especially targets situations where one abstract execution can simulate several permutations of the corresponding concrete execution, even though it might not be able to simulate the permutations of the abstract execution. We define independence relations that capture this \u201chidden\u201d diamond structure\u00a0\u2026", "total_citations": {"2014": 2, "2015": 0, "2016": 1, "2017": 6, "2018": 2, "2019": 0, "2020": 2, "2021": 3, "2022": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0x7hHEPTrR8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10005619/", "authors": ["Shangqing Liu", "Xiaofei Xie", "Jingkai Siow", "Lei Ma", "Guozhu Meng", "Yang Liu"], "publication_date": "2023/1/4", "journal": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "description": "Code search aims to retrieve accurate code snippets based on a natural language query to improve software productivity and quality. With the massive amount of available programs such as (on GitHub or Stack Overflow), identifying and localizing the precise code is critical for the software developers. In addition, Deep learning has recently been widely applied to different code-related scenarios, e.g., vulnerability detection, source code summarization. However, automated deep code search is still challenging since it requires a high-level semantic mapping between code and natural language queries. Most existing deep learning-based approaches for code search rely on the sequential text i.e., feeding the program and the query as a flat sequence of tokens to learn the program semantics while the structural information is not fully considered. Furthermore, the widely adopted Graph Neural Networks (GNNs) have\u00a0\u2026", "total_citations": {"2022": 8, "2023": 14}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_xmTp9Pj6u8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9525343/", "authors": ["Sen Chen", "Chunyang Chen", "Lingling Fan", "Mingming Fan", "Xian Zhan", "Yang Liu"], "publication_date": "2021/8/30", "journal": "IEEE Transactions on Software Engineering", "volume": "48", "issue": "10", "pages": "3954-3968", "publisher": "IEEE", "description": "Mobile apps provide new opportunities to people with disabilities to act independently in the world. Following the law of the US, EU, mobile OS vendors such as Google and Apple have included accessibility features in their mobile systems and provide a set of guidelines and toolsets for ensuring mobile app accessibility. Motivated by this trend, researchers have conducted empirical studies by using the inaccessibility issue rate of each page (i.e., screen level) to represent the characteristics of mobile app accessibility. However, there still lacks an empirical investigation directly focusing on the issues themselves (i.e., issue level) to unveil more fine-grained findings, due to the lack of an effective issue detection method and a relatively comprehensive dataset of issues. To fill in this literature gap, we first propose an automated app page exploration tool, named Xbot, to facilitate app accessibility testing and\u00a0\u2026", "total_citations": {"2021": 1, "2022": 8, "2023": 12}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ObAD8Md4PD8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8115652/", "authors": ["Yun Lin", "Guozhu Meng", "Yinxing Xue", "Zhenchang Xing", "Jun Sun", "Xin Peng", "Yang Liu", "Wenyun Zhao", "Jinsong Dong"], "publication_date": "2017/10/30", "conference": "2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "394-404", "publisher": "IEEE", "description": "In this paper, we propose an approach to detecting project-specific recurring designs in code base and abstracting them into design templates as reuse opportunities. The mined templates allow programmers to make further customization for generating new code. The generated code involves the code skeleton of recurring design as well as the semi-implemented code bodies annotated with comments to remind programmers of necessary modification. We implemented our approach as an Eclipse plugin called MICoDe. We evaluated our approach with a reuse simulation experiment and a user study involving 16 participants. The results of our simulation experiment on 10 open source Java projects show that, to create a new similar feature with a design template, (1) on average 69% of the elements in the template can be reused and (2) on average 60% code of the new feature can be adopted from the template\u00a0\u2026", "total_citations": {"2018": 3, "2019": 2, "2020": 4, "2021": 4, "2022": 6, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:NN0YOz9s3UgC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-662-54577-5_28", "authors": ["David San\u00e1n", "Yongwang Zhao", "Zhe Hou", "Fuyuan Zhang", "Alwen Tiu", "Yang Liu"], "publication_date": "2017/4/24", "conference": "International Conference on Tools and Algorithms for the Construction and Analysis of Systems", "pages": "481-498", "publisher": "Springer, Berlin, Heidelberg", "description": "It is essential to deal with the interference of the environment between programs in concurrent program verification. This has led to the development of concurrent program reasoning techniques such as rely-guarantee. However, the source code of the programs to be verified often involves language features such as exceptions and procedures which are not supported by the existing mechanizations of those concurrent reasoning techniques. Schirmer et al. have solved a similar problem for sequential programs by developing a verification framework in the Isabelle/HOL theorem prover called Simpl, which provides a rich sequential language that can encode most of the features in real world programming languages. However Simpl only aims to verify sequential programs, and it does not support the specification nor the verification of concurrent programs. In this paper we introduce CSimpl, an extension of\u00a0\u2026", "total_citations": {"2017": 3, "2018": 5, "2019": 3, "2020": 2, "2021": 1, "2022": 3, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ZxXHo_Hcam8C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-662-49674-9_50", "authors": ["Yongwang Zhao", "David San\u00e1n", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2016/4/4", "conference": "International Conference on Tools and Algorithms for the Construction and Analysis of Systems", "pages": "791-810", "publisher": "Springer Berlin Heidelberg", "description": "Assurance of information flow security by formal methods is mandated in security certification of separation kernels. As an industrial standard for separation kernels, ARINC 653 has been complied with by mainstream separation kernels. Security of functionalities defined in ARINC 653 is thus very important for the development and certification of separation kernels. This paper presents the first effort to formally specify and verify separation kernels with ARINC 653 channel-based communication. We provide a reusable formal specification and security proofs for separation kernels in Isabelle/HOL. During reasoning about information flow security, we find some security flaws in the ARINC 653 standard, which can cause information leakage, and fix them in our specification. We also validate the existence of the security flaws in two open-source ARINC 653 compliant separation kernels.", "total_citations": {"2016": 1, "2017": 5, "2018": 3, "2019": 2, "2020": 3, "2021": 1, "2022": 5, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=100&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:c2LjitseEfMC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-54862-8_21", "authors": ["Ting Wang", "Jun Sun", "Yang Liu", "Xinyu Wang", "Shanping Li"], "publication_date": "2014/4/5", "conference": "International Conference on Tools and Algorithms for the Construction and Analysis of Systems", "pages": "310-325", "publisher": "Springer, Berlin, Heidelberg", "description": "Given a timed automaton  modeling an implementation and a timed automaton  as a specification, language inclusion checking is to decide whether the language of  is a subset of that of . It is known that this problem is undecidable and \u201cthis result is an obstacle in using timed automata as a specification language\u201d [2]. This undecidability result, however, does not imply that all timed automata are bad for specification. In this work, we propose a zone-based semi-algorithm for language inclusion checking, which implements simulation reduction based on Anti-Chain and LU-simulation. Though it is not guaranteed to terminate, we show that it does in many cases through both theoretical and empirical analysis. The semi-algorithm has been incorporated into the PAT model checker, and applied to multiple systems to show its usefulness and scalability.", "total_citations": {"2015": 4, "2016": 4, "2017": 4, "2018": 2, "2019": 1, "2020": 2, "2021": 1, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ZnWe2zbntUIC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-11737-9_27", "authors": ["Zhimin Wu", "Yang Liu", "Yun Liang", "Jun Sun"], "publication_date": "2014", "conference": "Formal Methods and Software Engineering: 16th International Conference on Formal Engineering Methods, ICFEM 2014, Luxembourg, Luxembourg, November 3-5, 2014. Proceedings 16", "pages": "413-429", "publisher": "Springer International Publishing", "description": "Strongly Connected Component (SCC) based searching is one of the most popular LTL model checking algorithms. When the SCCs are huge, the counterexample generation process can be time-consuming, especially when dealing with fairness assumptions. In this work, we propose a GPU accelerated counterexample generation algorithm, which improves the performance by parallelizing the Breadth First Search (BFS) used in the counterexample generation. BFS work is irregular, which means it is hard to allocate resources and may suffer from imbalanced load. We make use of the features of latest CUDA Compute Architecture-NVIDIA Kepler GK110 to achieve the dynamic parallelism and memory hierarchy so as to handle the irregular searching pattern in BFS. We build dynamic queue management, task scheduler and path recording such that the counterexample generation process can be completely\u00a0\u2026", "total_citations": {"2015": 4, "2016": 4, "2017": 2, "2018": 4, "2019": 1, "2020": 0, "2021": 1, "2022": 2, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:AkQCnCHIR28C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3510003.3510197", "authors": ["Zhengjie Du", "Yuekang Li", "Yang Liu", "Bing Mao"], "publication_date": "2022", "journal": "2022 IEEE/ACM 44st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)", "description": "Directed grey-box fuzzing (DGF) is a security testing technique that aims to steer the fuzzer towards predefined target sites in the program. To gain directedness, DGF prioritizes the seeds whose execution traces are closer to the target sites. Therefore, evaluating the distance between the execution trace of a seed and the target sites (aka, the seed distance) is important for DGF. The first directed grey-box fuzzer, AFLGo, uses an approach of calculating the basic block level distances during static analysis and accumulating the distances of the executed basic blocks to compute the seed distance. Following AFLGo, most of the existing state-of-the-art DGF techniques use all the basic blocks on the execution trace and only the control flow information for seed distance calculation. However, not every basic block is equally important and there are certain basic blocks where the execution trace starts to deviate from the\u00a0\u2026", "total_citations": {"2022": 1, "2023": 18}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8dmKnlANe1sC": {"external_link": "https://www.usenix.org/conference/usenixsecurity21/presentation/zhang-cen", "authors": ["Cen Zhang", "Xingwei Lin", "Yuekang Li", "Yinxing Xue", "Jundong Xie", "Hongxu Chen", "Xinlei Ying", "Jiashui Wang", "Yang Liu"], "publication_date": "2021", "conference": "30th USENIX Security Symposium (USENIX Security 21)", "pages": "2811-2828", "description": "Fuzz drivers are needed for fuzzing libraries. A fuzz driver is a program which can execute library functions by feeding them with inputs provided by the fuzzer. In practice, fuzz drivers are written by security experts and the drivers' quality depends on the skill of their authors. To relieve manual efforts and ensure test quality, different techniques have been proposed to automatically generate fuzz drivers. However, existing techniques mostly rely on static analysis of source code, leaving the fuzz driver generation for closed-source SDK libraries an open problem. Fuzz driver generation for closed-source libraries is faced with two major challenges: 1) only limited information can be extracted from the library; 2) the semantic relations among API functions are complex yet their correctness needs to be ensured.", "total_citations": {"2021": 1, "2022": 7, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6fs0NoO7GbkC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7384234/", "authors": ["Zhimin Wu", "Yang Liu", "Jun Sun", "Jianqi Shi", "Shengchao Qin"], "publication_date": "2015/12/9", "conference": "2015 20th International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "100-109", "publisher": "IEEE", "description": "Model checking suffers from the infamous state space explosion problem. In this paper, we propose an approach, named GPURC, to utilize the Graphics Processing Units (GPUs) to speed up the reachability verification. The key idea is to achieve a dynamic load balancing so that the many cores in GPUs are fully utilized during the state space exploration. To this end, we firstly construct a compact data encoding of the input transition systems to reduce the memory cost and fit the calculation in GPUs. To support a large number of concurrent components, we propose a multi-integer encoding with conflict-release accessing approach. We then develop a BFS-based state space generation algorithm in GPUs, which makes full use of the GPU memory hierarchy and the latest dynamic parallelism feature in CUDA to achieve a high parallelism. GPURC also supports a parallel collaborative event synchronization approach\u00a0\u2026", "total_citations": {"2016": 7, "2017": 3, "2018": 3, "2019": 2, "2020": 1, "2021": 1, "2022": 0, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0izLItjtcgwC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-32759-9_28", "authors": ["Truong Khanh Nguyen", "Jun Sun", "Yang Liu", "Jin Song Dong", "Yan Liu"], "publication_date": "2012", "conference": "FM 2012: Formal Methods: 18th International Symposium, Paris, France, August 27-31, 2012. Proceedings 18", "pages": "326-340", "publisher": "Springer Berlin Heidelberg", "description": "Model checking timed systems through digitization is relatively easy, compared to zone-based approaches. The applicability of digitization, however, is limited mainly for two reasons, i.e., it is only sound for closed timed systems; and clock ticks cause state space explosion. The former is mild as many practical systems are subject to digitization. It has been shown that BDD-based techniques can be used to tackle the latter to some extent. In this work, we significantly improve the existing approaches by keeping the ticks simple in the BDD encoding. Taking advantage of the \u2018simple\u2019 nature of clock ticks, we fine-tune the encoding of ticks and are able to verify systems with many ticks. Furthermore, we develop a BDD library which supports not only encoding/verifying of timed state machines (through digitization) but also composing timed components using a rich set of composition functions. The usefulness and\u00a0\u2026", "total_citations": {"2012": 1, "2013": 3, "2014": 6, "2015": 2, "2016": 1, "2017": 2, "2018": 0, "2019": 1, "2020": 2, "2021": 0, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:OxQqgzTNpSoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3460120.3484823", "authors": ["Xiaoyu He", "Xiaofei Xie", "Yuekang Li", "Jianwen Sun", "Feng Li", "Wei Zou", "Yang Liu", "Lei Yu", "Jianhua Zhou", "Wenchang Shi", "Wei Huo"], "publication_date": "2021/11/12", "book": "Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security", "pages": "2229-2242", "description": "JavaScript engines have been shown prone to security vulnerabilities, which can lead to serious consequences due to their popularity. Fuzzing is an effective testing technique to discover vulnerabilities. The main challenge of fuzzing JavaScript engines is to generate syntactically and semantically valid inputs such that deep functionalities can be explored. However, due to the dynamic nature of JavaScript and the special features of different engines, it is quite challenging to generate semantically meaningful test inputs. We observed that state-of-the-art semantic-aware JavaScript fuzzers usually require manually written rules to analyze the semantics for a JavaScript engine, which is labor-intensive, incomplete and engine-specific. Moreover, the error rate of generated test cases is still high. Another challenge is that existing fuzzers cannot generate new method calls that are not included in the initial seed corpus or\u00a0\u2026", "total_citations": {"2021": 1, "2022": 7, "2023": 12}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:uh8FjILnQOkC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9508422/", "authors": ["Ming Fan", "Ziliang Si", "Xiaofei Xie", "Yang Liu", "Ting Liu"], "publication_date": "2021/8/6", "journal": "IEEE Transactions on Information Forensics and Security", "volume": "16", "pages": "4117-4132", "publisher": "IEEE", "description": "Deep neural networks (DNNs) are known to be inherently vulnerable to malicious attacks such as the adversarial attack and the backdoor attack. The former is crafted by adding small perturbations to benign inputs so as to fool a DNN. The latter generally embeds a hidden pattern in a DNN by poisoning the dataset during the training process, which causes the infected model to misbehave on predefined inputs with a specific trigger and normally perform for others. Much work has been conducted on defending against the adversarial samples, while the backdoor attack received much less attention, especially in recurrent neural networks (RNNs), which play an important role in the text processing field. Two main limitations make it hard to directly apply existing image backdoor detection approaches to RNN-based text classification systems. First, a layer in an RNN does not preserve the same feature latent space\u00a0\u2026", "total_citations": {"2021": 1, "2022": 11, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:viTTOddtVMkC": {"external_link": "https://scholar.google.com/scholar?cluster=7006311207105530576&hl=en&oi=scholarr", "authors": ["Shangqing Liu", "Yu Chen", "Xiaofei Xie", "Jing Kai Siow", "Yang Liu"], "publication_date": "2020/6/9", "journal": "arXiv preprint arXiv:2006.05405", "total_citations": {"2020": 2, "2021": 4, "2022": 10, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:OBae9N4Z9bMC": {"external_link": "https://pubs.acs.org/doi/abs/10.1021/jacs.9b11673", "authors": ["Ya Deng", "Yuanming Lai", "Xiaoxu Zhao", "Xiaowei Wang", "Chao Zhu", "Ke Huang", "Chao Zhu", "Jiadong Zhou", "Qingsheng Zeng", "Ruihuan Duan", "Qundong Fu", "Lixing Kang", "Yang Liu", "Stephen J Pennycook", "X Renshaw Wang", "Zheng Liu"], "publication_date": "2020/1/21", "journal": "Journal of the American Chemical Society", "volume": "142", "issue": "6", "pages": "2948-2955", "publisher": "American Chemical Society", "description": "Transition metal dichalcogenides (TMDs) have become a playground for exploring rich physical phenomena like superconductivity and charge-density-waves (CDW). Here, we report the synthesis of the atom-thin TaSe2 with a rare 3R phase and enhanced superconductivity. The 3R phase is achieved by an ambient pressure chemical vapor deposition (CVD) strategy and confirmed by the high-resolution aberration-corrected STEM. Low-temperature transport data reveal an enhanced superconducting transition temperature (Tc) of 1.6 K in the 3R-TaSe2, which undoubtedly breaks the traditional perception of TaSe2 crystal as a material with Tc close to 0 K. This work demonstrates the strength of ambient pressure CVD in the exploration of crystal polymorphism, highlights a decisive role of layer stacking order in the superconducting transition, and provides fresh insights on manipulating crystal structures to gain\u00a0\u2026", "total_citations": {"2020": 1, "2021": 6, "2022": 7, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ZtJ3RtM1NaMC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3236024.3264593", "authors": ["Hongxu Chen", "Yuekang Li", "Bihuan Chen", "Yinxing Xue", "Yang Liu"], "publication_date": "2018/10/26", "conference": "Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "pages": "867-870", "publisher": "ACM", "description": "Greybox fuzzing is one of the most effective approaches for detecting software vulnerabilities. Various new techniques have been continuously emerging to enhance the effectiveness and/or efficiency by incorporating novel ideas into different components of a greybox fuzzer. However, there lacks a modularized fuzzing framework that can easily plugin new techniques and hence facilitate the reuse, integration and comparison of different techniques. To address this problem, we propose a fuzzing framework, namely Fuzzing Orchestration Toolkit (FOT). FOT is designed to be versatile, configurable and extensible. With FOT and its extensions, we have found 111 new bugs from 11 projects. Among these bugs, 18 CVEs have been assigned. Video link: https://youtu.be/O6Qu7BJ8RP0.", "total_citations": {"2018": 2, "2019": 6, "2020": 3, "2021": 3, "2022": 2, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Lr5Uwm59ZTwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8115690/", "authors": ["Shang-Wei Lin", "Jun Sun", "Hao Xiao", "Yang Liu", "David San\u00e1n", "Henri Hansen"], "publication_date": "2017/10/1", "conference": "2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "793-803", "publisher": "IEEE", "description": "Loop invariant generation is a fundamental problem in program analysis and verification. In this work, we propose a new approach to automatically constructing inductive loop invariants. The key idea is to aggressively squeeze an inductive invariant based on Craig interpolants between forward and backward reachability analysis. We have evaluated our approach by a set of loop benchmarks, and experimental results show that our approach is promising.", "total_citations": {"2017": 2, "2018": 1, "2019": 3, "2020": 6, "2021": 1, "2022": 3, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ULOm3_A8WrAC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-24559-6_12", "authors": ["Jun Sun", "Yang Liu", "Songzheng Song", "Jin Song Dong", "Xiaohong Li"], "publication_date": "2011/10/26", "conference": "International Conference on Formal Engineering Methods", "pages": "147-162", "publisher": "Springer, Berlin, Heidelberg", "description": "Model Checking real-life systems is always difficult since such systems usually have quantitative timing factors and work in unreliable environment. The combination of real-time and probability in hierarchical systems presents a unique challenge to system modeling and analysis. In this work, we develop an automated approach for verifying probabilistic, real-time, hierarchical systems. Firstly, a modeling language called PRTS is defined, which combines data structures, real-time and probability. Next, a zone-based method is used to build a finite-state abstraction of PRTS models so that probabilistic model checking could be used to calculate the probability of a system satisfying certain property. We implemented our approach in the PAT model checker and conducted experiments with real-life case studies.", "total_citations": {"2011": 1, "2012": 3, "2013": 6, "2014": 4, "2015": 1, "2016": 1, "2017": 2, "2018": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8k81kl-MbHgC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-16901-4_34", "authors": ["Jun Sun", "Yang Liu", "Bin Cheng"], "publication_date": "2010", "journal": "Formal Methods and Software Engineering", "pages": "518-533", "publisher": "Springer Berlin/Heidelberg", "description": "Model checkers, like any complex software, are subject to bugs. Unlike ordinary software, model checkers are often used to verify safety critical systems. Their correctness is thus vital. Verifying model checkers is extremely challenging because they are always complicated in logic and highly optimized. In this work, we propose a code contract combined approach for checking model checkers and apply it to a home-grown model checker PAT. In this approach, we firstly embed programming contracts (i.e., pre/post-conditions and invariants) into its source code, which can capture correctness of model checking algorithms, underlying data structures, consistency between different model checking parameters, etc. Then, interface models of complicated data structures and graphical user interfaces (GUI) are built and model checked. By linking the interface models with actual source codes and exhausting all\u00a0\u2026", "total_citations": {"2011": 2, "2012": 5, "2013": 5, "2014": 2, "2015": 3, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LpWf3qrnWeoC": {"external_link": "https://arxiv.org/abs/2112.00964", "authors": ["Ziyuan Zhong", "Yun Tang", "Yuan Zhou", "Vania de Oliveira Neves", "Yang Liu", "Baishakhi Ray"], "publication_date": "2021/12/2", "journal": "arXiv preprint arXiv:2112.00964", "description": "Automated Driving Systems (ADSs) have seen rapid progress in recent years. To ensure the safety and reliability of these systems, extensive testings are being conducted before their future mass deployment. Testing the system on the road is the closest to real-world and desirable approach, but it is incredibly costly. Also, it is infeasible to cover rare corner cases using such real-world testing. Thus, a popular alternative is to evaluate an ADS's performance in some well-designed challenging scenarios, a.k.a. scenario-based testing. High-fidelity simulators have been widely used in this setting to maximize flexibility and convenience in testing what-if scenarios. Although many works have been proposed offering diverse frameworks/methods for testing specific systems, the comparisons and connections among these works are still missing. To bridge this gap, in this work, we provide a generic formulation of scenario-based testing in high-fidelity simulation and conduct a literature review on the existing works. We further compare them and present the open challenges as well as potential future research directions.", "total_citations": {"2022": 6, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0izwh0c-50kC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9560890/", "authors": ["Yun Tang", "Yuan Zhou", "Fenghua Wu", "Yang Liu", "Jun Sun", "Wuling Huang", "Gang Wang"], "publication_date": "2021/5/30", "conference": "2021 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "11450-11456", "publisher": "IEEE", "description": "Autonomous vehicles (AVs) play an important role in transforming our transportation systems and relieving traffic congestion. To guarantee their safety, AVs must be sufficiently tested before they are deployed to public roads. Existing testing often focuses on AVs\u2019 collision avoidance on a given route. There is little work on the systematic testing for AVs\u2019 route planning and tracking on a map. In this paper, we propose CROUTE, a novel testing method based on a new AV testing criterion called route coverage. First, the map is modeled as a labeled Petri net, where roads, junctions, and traffic signs are modeled as places, transitions, and labels, respectively. Second, based on the Petri net, we define junctions\u2019 topology features and route features for junction classification. The topology feature describes the topology of roads forming the junction, and the route feature identifies the actions that a vehicle can take to follow a\u00a0\u2026", "total_citations": {"2021": 4, "2022": 7, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:FcH-RsB9iB0C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3338906.3338966", "authors": ["Haijun Wang", "Xiaofei Xie", "Shang-Wei Lin", "Yun Lin", "Yuekang Li", "Shengchao Qin", "Yang Liu", "Ting Liu"], "publication_date": "2019/8/12", "book": "Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "pages": "718-728", "description": "Locating vulnerabilities is an important task for security auditing, exploit writing, and code hardening. However, it is challenging to locate vulnerabilities in binary code, because most program semantics (e.g., boundaries of an array) is missing after compilation. Without program semantics, it is difficult to determine whether a memory access exceeds its valid boundaries in binary code. In this work, we propose an approach to locate vulnerabilities based on memory layout recovery. First, we collect a set of passed executions and one failed execution. Then, for passed and failed executions, we restore their program semantics by recovering fine-grained memory layouts based on the memory addressing model. With the memory layouts recovered in passed executions as reference, we can locate vulnerabilities in failed execution by memory layout identification and comparison. Our experiments show that the proposed\u00a0\u2026", "total_citations": {"2019": 2, "2020": 9, "2021": 3, "2022": 1, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:u-coK7KVo8oC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6375617/", "authors": ["Jiexin Zhang", "Yang Liu", "Jing Sun", "Jin Song Dong", "Jun Sun"], "publication_date": "2012/10/25", "conference": "High-Assurance Systems Engineering (HASE), 2012 IEEE 14th International Symposium on", "pages": "193-200", "publisher": "IEEE", "description": "Software Architecture plays an essential role in the high level description of a system design. Despite its importance in the software engineering practice, the lack of formal description and verification support hinders the development of quality architectural models. In this paper, we present an automated approach to the modeling and verification of software architecture designs using the Process Analysis Toolkit (PAT). We present the formal syntax of the Wright# architecture description language together with its operational semantics in Labeled Transition System (LTS). A dedicated model checking module for Wright# is implemented in the PAT verification framework based on the proposed formalism. The module - ADL supports verification and simulation of software architecture models in PAT. We advance our work via defining an architecture style library that embodies commonly used architecture patterns to\u00a0\u2026", "total_citations": {"2012": 2, "2013": 1, "2014": 2, "2015": 1, "2016": 2, "2017": 2, "2018": 1, "2019": 5, "2020": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5MTHONV0fEkC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-34281-3_26", "authors": ["Ting Wang", "Songzheng Song", "Jun Sun", "Yang Liu", "Jin Song Dong", "Xinyu Wang", "Shanping Li"], "publication_date": "2012", "conference": "International Conference on Formal Engineering Methods", "pages": "364-380", "description": "Refinement checking plays an important role in system verification. It establishes properties of an implementation by showing a refinement relationship between the implementation and a specification. Recently, it has been shown that anti-chain based approaches increase the efficiency of trace refinement checking significantly. In this work, we study the problem of adopting anti-chain for stable failures refinement checking, failures-divergence refinement checking and probabilistic refine checking (i.e., a probabilistic implementation against a non-probabilistic specification). We show that the first two problems can be significantly improved, because the state space of the product model may be reduced dramatically. Though applying anti-chain for probabilistic refinement checking is more complicated, we manage to show improvements in some cases. We have integrated these techniques into the PAT model\u00a0\u2026", "total_citations": {"2012": 1, "2013": 5, "2014": 2, "2015": 2, "2016": 3, "2017": 2, "2018": 0, "2019": 1, "2020": 1, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:W7OEmFMy1HYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5198490/", "authors": ["Yang Liu", "Jun Pang", "Jun Sun", "Jianhua Zhao"], "publication_date": "2009/7/29", "conference": "Theoretical Aspects of Software Engineering, 2009. TASE 2009. Third IEEE International Symposium on", "pages": "81-89", "publisher": "IEEE", "description": "The population protocol model has emerged as an elegant paradigm for describing mobile ad hoc networks, consisting of a number of nodes that interact with each other to carry out a computation. One essential property of self-stabilizing population protocols is that all nodes must eventually converge to the correct output value, with respect to all possible initial configurations. It has been shown that fairness constraints play a crucial role in designing population protocols. The Process Analysis Toolkit (PAT) has been developed to perform verifications under different fairness constraints efficiently. In particular, it can handle global fairness, which is required for the correctness of most of population protocols. It is an ideal candidate for automatically verifying population protocols. In this paper, we summarize our latest empirical evaluation of PAT on a set of self-stabilizing population protocols for ring networks. We report\u00a0\u2026", "total_citations": {"2009": 1, "2010": 3, "2011": 5, "2012": 2, "2013": 3, "2014": 2, "2015": 0, "2016": 1, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:oC1yQlCKEqoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3490489", "authors": ["Xiaofei Xie", "Tianlin Li", "Jian Wang", "Lei Ma", "Qing Guo", "Felix Juefei-Xu", "Yang Liu"], "publication_date": "2022/4/9", "journal": "ACM Transactions on Software Engineering and Methodology (TOSEM)", "volume": "31", "issue": "3", "pages": "1-27", "publisher": "ACM", "description": "Deep learning has recently been widely applied to many applications across different domains, e.g., image classification and audio recognition. However, the quality of Deep Neural Networks (DNNs) still raises concerns in the practical operational environment, which calls for systematic testing, especially in safety-critical scenarios. Inspired by software testing, a number of structural coverage criteria are designed and proposed to measure the test adequacy of DNNs. However, due to the blackbox nature of DNN, the existing structural coverage criteria are difficult to interpret, making it hard to understand the underlying principles of these criteria. The relationship between the structural coverage and the decision logic of DNNs is unknown. Moreover, recent studies have further revealed the non-existence of correlation between the structural coverage and DNN defect detection, which further posts concerns on what a\u00a0\u2026", "total_citations": {"2022": 3, "2023": 15}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UlRcoTO8nVoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9555632/", "authors": ["Shangwei Guo", "Tianwei Zhang", "Han Yu", "Xiaofei Xie", "Lei Ma", "Tao Xiang", "Yang Liu"], "publication_date": "2021/10/1", "journal": "IEEE Transactions on Circuits and Systems for Video Technology", "volume": "32", "issue": "6", "pages": "4096-4106", "publisher": "IEEE", "description": "Decentralized learning has gained great popularity to improve learning efficiency and preserve data privacy. Each computing node makes equal contribution to collaboratively learn a Deep Learning model. The elimination of centralized Parameter Servers (PS) can effectively address many issues such as privacy, performance bottleneck and single-point-failure. However, how to achieve Byzantine Fault Tolerance in decentralized learning systems is rarely explored, although this problem has been extensively studied in centralized systems. In this paper, we present an in-depth study towards the Byzantine resilience of decentralized learning systems with two contributions. First, from the adversarial perspective, we theoretically illustrate that Byzantine attacks are more dangerous and feasible in decentralized learning systems: even one malicious participant can arbitrarily alter the models of other participants by\u00a0\u2026", "total_citations": {"2021": 1, "2022": 5, "2023": 12}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:d7BmB2BcYiwC": {"external_link": "https://content.iospress.com/articles/journal-of-computer-security/jcs200036", "authors": ["Zhiwu Xu", "Hongxu Chen", "Alwen Tiu", "Yang Liu", "Kunal Sareen"], "publication_date": "2021/1/1", "journal": "Journal of Computer Security", "volume": "29", "issue": "2", "pages": "161-228", "publisher": "IOS Press", "description": "We introduce a novel type system for enforcing secure information flow in an imperative language. Our work is motivated by the problem of statically checking potential information leakage in Android applications. To this end, we design a lightweight type system featuring Android permission model, w here the permissions are statically assigned to applications and are used to enforce access control in the applications. We take inspiration from a type system by Banerjee and Naumann to allow security types to be dependent on the permissions of the applications. A novel feature of our type system is a typing rule for conditional branching induced by permission testing, which introduces a merging operator on security types, allowing more precise security policies to be enforced. The soundness of our type system is proved with respect to non-interference. A type inference algorithm is also presented for the underlying\u00a0\u2026", "total_citations": {"2018": 1, "2019": 5, "2020": 3, "2021": 4, "2022": 3, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CY3uIpTmi-gC": {"external_link": "https://arxiv.org/abs/2009.06996", "authors": ["Haoliang Li", "Yufei Wang", "Xiaofei Xie", "Yang Liu", "Shiqi Wang", "Renjie Wan", "Lap-Pui Chau", "Alex C Kot"], "publication_date": "2020/9/15", "journal": "arXiv preprint arXiv:2009.06996", "description": "Deep neural networks (DNN) have shown great success in many computer vision applications. However, they are also known to be susceptible to backdoor attacks. When conducting backdoor attacks, most of the existing approaches assume that the targeted DNN is always available, and an attacker can always inject a specific pattern to the training data to further fine-tune the DNN model. However, in practice, such attack may not be feasible as the DNN model is encrypted and only available to the secure enclave. In this paper, we propose a novel black-box backdoor attack technique on face recognition systems, which can be conducted without the knowledge of the targeted DNN model. To be specific, we propose a backdoor attack with a novel color stripe pattern trigger, which can be generated by modulating LED in a specialized waveform. We also use an evolutionary computing strategy to optimize the waveform for backdoor attack. Our backdoor attack can be conducted in a very mild condition: 1) the adversary cannot manipulate the input in an unnatural way (e.g., injecting adversarial noise); 2) the adversary cannot access the training database; 3) the adversary has no knowledge of the training model as well as the training set used by the victim party. We show that the backdoor trigger can be quite effective, where the attack success rate can be up to  based on our simulation study and up to  based on our physical-domain study by considering the task of face recognition and verification based on at most three-time attempts during authentication. Finally, we evaluate several state-of-the-art potential defenses towards backdoor\u00a0\u2026", "total_citations": {"2021": 4, "2022": 8, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EsO17nB32j8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8883062/", "authors": ["Haijun Wang", "Yun Lin", "Zijiang Yang", "Jun Sun", "Yang Liu", "Jinsong Dong", "Qinghua Zheng", "Ting Liu"], "publication_date": "2019/10/25", "journal": "IEEE Transactions on Software Engineering", "volume": "47", "issue": "11", "pages": "2421-2437", "publisher": "IEEE", "description": "Regression faults, which make working code stop functioning, are often introduced when developers make changes to the software. Many regression fault localization techniques have been proposed. However, issues like inaccuracy and lack of explanation are still obstacles for their practical application. In this work, we propose a trace-based approach to identifying not only where the root cause of a regression bug lies, but also how the defect is propagated to its manifestation as the explanation. In our approach, we keep the trace of original correct version as reference and infer the faulty steps on the trace of regression version so that we can build a causality graph of how the defect is propagated. To this end, we overcomes two technical challenges. First, we align two traces derived from two program versions by extending state-of-the-art trace alignment technique for regression fault with novel relaxation technique\u00a0\u2026", "total_citations": {"2020": 6, "2021": 1, "2022": 4, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ZJWHNt7Cjk4C": {"external_link": "https://arxiv.org/abs/1809.02444", "authors": ["Alvin Chan", "Lei Ma", "Felix Juefei-Xu", "Xiaofei Xie", "Yang Liu", "Yew Soon Ong"], "publication_date": "2018/9/7", "journal": "arXiv preprint arXiv:1809.02444", "description": "Deep neural networks (DNN), while becoming the driving force of many novel technology and achieving tremendous success in many cutting-edge applications, are still vulnerable to adversarial attacks. Differentiable neural computer (DNC) is a novel computing machine with DNN as its central controller operating on an external memory module for data processing. The unique architecture of DNC contributes to its state-of-the-art performance in tasks which requires the ability to represent variables and data structure as well as to store data over long timescales. However, there still lacks a comprehensive study on how adversarial examples affect DNC in terms of robustness. In this paper, we propose metamorphic relation based adversarial techniques for a range of tasks described in the natural processing language domain. We show that the near-perfect performance of the DNC in bAbI logical question answering tasks can be degraded by adversarially injected sentences. We further perform in-depth study on the role of DNC's memory size in its robustness and analyze the potential reason causing why DNC fails. Our study demonstrates the current challenges and potential opportunities towards constructing more robust DNCs.", "total_citations": {"2018": 3, "2019": 2, "2020": 6, "2021": 4, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kuq-04jA658C": {"external_link": "https://content.iospress.com/articles/fundamenta-informaticae/fi131-1-05", "authors": ["GuanJun Liu", "Jun Sun", "Yang Liu", "JinSong Dong"], "publication_date": "2014/1/1", "journal": "Fundamenta Informaticae", "volume": "131", "issue": "1", "pages": "81-101", "publisher": "IOS Press", "description": "Classical workflow nets (WF-nets for short) are an important subclass of Petri nets that are widely used to model and analyze workflow systems. Soundness is a crucial property of workflow systems and guarantees that these systems are deadlock-free and bounded. Aalst et al. proved that the soundness problem is decidable for WF-nets and can be polynomially solvable for free-choice WF-nets. This paper proves that the soundness problem is PSPACE-hard for WF-nets. Furthermore, it is proven that the soundness problem is PSPACE-complete for bounded WF-nets. Based on the above conclusion, it is derived that the soundness problem is also PSPACE-complete for bounded WF-nets with reset or inhibitor arcs (ReWF-nets and InWF-nets for short, resp.). ReWF-and InWF-nets are two extensions to WF-nets and their soundness problems were proven by Aalst et al. to be undecidable. Additionally, we prove that the\u00a0\u2026", "total_citations": {"2013": 1, "2014": 1, "2015": 7, "2016": 2, "2017": 2, "2018": 0, "2019": 1, "2020": 1, "2021": 0, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:anf4URPfarAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6299212/", "authors": ["Yan Liu", "Xian Zhang", "Jin Song Dong", "Yang Liu", "Jun Sun", "Jit Biswas", "Mounir Mokhtari"], "publication_date": "2012/7/18", "conference": "2012 IEEE 17th International Conference on Engineering of Complex Computer Systems", "pages": "169-178", "publisher": "IEEE", "description": "Pervasive computing systems are heterogenous and complex as they usually involve human activities, various sensors and actuators as well as middleware for system controlling. Therefore, analyzing such systems is highly non-trivial. In this work, we propose to use formal methods for analyzing pervasive computing systems. Firstly, a formal modeling framework is proposed to cover main characteristics of pervasive computing systems (e.g., context-awareness, concurrent communications, layered architectures). Secondly, we identify the safety requirements (e.g., free of deadlock and conflicts etc.) and propose their specifications as safety and liveness properties. Finally, we demonstrate our ideas using a case study of a smart nursing home system. Experimental results show the effectiveness of our approach in exploring system behaviors and revealing system design flaws such as information inconsistency and\u00a0\u2026", "total_citations": {"2013": 5, "2014": 6, "2015": 3, "2016": 1, "2017": 1, "2018": 0, "2019": 1, "2020": 0, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:artPoR2Yc-kC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-32759-9_24", "authors": ["Shang-Wei Lin", "Yang Liu", "Jun Sun", "Jin Dong", "\u00c9tienne Andr\u00e9"], "publication_date": "2012", "journal": "FM 2012: Formal Methods", "pages": "272-276", "publisher": "Springer Berlin/Heidelberg", "description": "Specification and verification of real-time systems are important research topics with crucial applications; however, the so-called state space explosion problem often prevents model checking to be used in practice for large systems. In this work, we present a self-contained toolkit to analyze real-time systems specified using event-recording automata (ERAs), which supports system modeling, animated simulation, and fully automatic compositional verification based on learning techniques. Experimental results show that our tool outperforms the state-of-the-art timed model checker.", "total_citations": {"2013": 6, "2014": 5, "2015": 1, "2016": 0, "2017": 1, "2018": 0, "2019": 1, "2020": 1, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:IOahUoDOFMsC": {"external_link": "https://arxiv.org/abs/2306.05499", "authors": ["Yi Liu", "Gelei Deng", "Yuekang Li", "Kailong Wang", "Tianwei Zhang", "Yepang Liu", "Haoyu Wang", "Yan Zheng", "Yang Liu"], "publication_date": "2023/6/8", "journal": "arXiv preprint arXiv:2306.05499", "description": "Large Language Models (LLMs), renowned for their superior proficiency in language comprehension and generation, stimulate a vibrant ecosystem of applications around them. However, their extensive assimilation into various services introduces significant security risks. This study deconstructs the complexities and implications of prompt injection attacks on actual LLM-integrated applications. Initially, we conduct an exploratory analysis on ten commercial applications, highlighting the constraints of current attack strategies in practice. Prompted by these limitations, we subsequently formulate HouYi, a novel black-box prompt injection attack technique, which draws inspiration from traditional web injection attacks. HouYi is compartmentalized into three crucial elements: a seamlessly-incorporated pre-constructed prompt, an injection prompt inducing context partition, and a malicious payload designed to fulfill the attack objectives. Leveraging HouYi, we unveil previously unknown and severe attack outcomes, such as unrestricted arbitrary LLM usage and uncomplicated application prompt theft. We deploy HouYi on 36 actual LLM-integrated applications and discern 31 applications susceptible to prompt injection. 10 vendors have validated our discoveries, including Notion, which has the potential to impact millions of users. Our investigation illuminates both the possible risks of prompt injection attacks and the possible tactics for mitigation.", "total_citations": {"2023": 17}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ILCMxgzxjrQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9730006/", "authors": ["Chris Xing Tian", "Haoliang Li", "Xiaofei Xie", "Yang Liu", "Shiqi Wang"], "publication_date": "2022/3/8", "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "publisher": "IEEE", "description": "This paper focuses on the domain generalization task where domain knowledge is unavailable, and even worse, only samples from a single domain can be utilized during training. Our motivation originates from the recent progresses in deep neural network (DNN) testing, which has shown that maximizing neuron coverage of DNN can help to explore possible defects of DNN (i.e., misclassification). More specifically, by treating the DNN as a program and each neuron as a functional point of the code, during the network training we aim to improve the generalization capability by maximizing the neuron coverage of DNN with the gradient similarity regularization between the original and augmented samples. As such, the decision behavior of the DNN is optimized, avoiding the arbitrary neurons that are deleterious for the unseen samples, and leading to the trained DNN that can be better generalized to out-of\u00a0\u2026", "total_citations": {"2022": 4, "2023": 13}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Y3Sh7dCAXz0C": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/17391", "authors": ["Xiyue Zhang", "Xiaoning Du", "Xiaofei Xie", "Lei Ma", "Yang Liu", "Meng Sun"], "publication_date": "2021/5/18", "conference": "Thirty-Fifth AAAI Conference on Artificial Intelligence (AAAI)", "pages": "11699-11707", "publisher": "AAAI Press", "description": "Recurrent Neural Networks (RNNs) have demonstrated their effectiveness in learning and processing sequential data (eg, speech and natural language). However, due to the black-box nature of neural networks, understanding the decision logic of RNNs is quite challenging. Some recent progress has been made to approximate the behavior of an RNN by weighted automata. They provide better interpretability, but still suffer from poor scalability. In this paper, we propose a novel approach to extracting weighted automata with the guidance of a target RNN's decision and context information. In particular, we identify the patterns of RNN's step-wise predictive decisions to instruct the formation of automata states. Further, we propose a state composition method to enhance the context-awareness of the extracted model. Our in-depth evaluations on typical RNN tasks, including language model and classification, demonstrate the effectiveness and advantage of our method over the state-of-the-arts. The evaluation results show that our method can achieve accurate approximation of an RNN even on large-scale tasks.", "total_citations": {"2021": 3, "2022": 9, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yIkSIh5mphAC": {"external_link": "https://kangjie-chen.github.io/files/2021_AAMAS_DRL-Watermark.pdf", "authors": ["Kangjie Chen", "Shangwei Guo", "Tianwei Zhang", "Shuxin Li", "Yang Liu"], "publication_date": "2021/5/3", "book": "Proceedings of the 20th International Conference on Autonomous Agents and MultiAgent Systems", "pages": "314-322", "description": "Watermarking has become a popular and attractive technique to protect the Intellectual Property (IP) of Deep Learning (DL) models. However, very few studies explore the possibility of watermarking Deep Reinforcement Learning (DRL) models. Common approaches in the DL context embed backdoors into the protected model and use special samples to verify the model ownership. These solutions are easy to be detected, and can potentially affect the performance and behaviors of the target model. Such limitations make existing solutions less applicable to safety-and security-critical tasks and scenarios, where DRL has been widely used. In this work, we propose a novel watermarking scheme for DRL protection. Instead of using spatial watermarks as in DL models, we introduce temporal watermarks, which can reduce the potential impact and damage to the target model, while achieving ownership verification with high fidelity. Specifically,(1) we design a new damage metric to select sequential states for watermark generation;(2) we introduce a new reward function to efficiently alter the model\u2019s behaviors for watermark embedding;(3) we propose to utilize a predefined probability density function of actions over the watermark states as the verification evidence. Our method is general and can be applied to various DRL tasks with either deterministic or stochastic reinforcement learning algorithms. Extensive experimental results show that it can effectively preserve the functionality of DRL models and exhibit significant robustness against common model modifications, eg, fine-tuning and model compression.", "total_citations": {"2021": 5, "2022": 7, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:dJ-sGqsME_YC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3324884.3416564", "authors": ["Xiaoning Du", "Yi Li", "Xiaofei Xie", "Lei Ma", "Yang Liu", "Jianjun Zhao"], "publication_date": "2020/9/21", "conference": "2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "423-435", "publisher": "IEEE", "description": "State-of-the-art deep learning (DL) systems are vulnerable to adversarial examples, which hinders their potential adoption in safety-and security-critical scenarios. While some recent progress has been made in analyzing the robustness of feed-forward neural networks, the robustness analysis for stateful DL systems, such as recurrent neural networks (RNNs), still remains largely uncharted. In this paper, we propose Marble, a model-based approach for quantitative robustness analysis of real-world RNN-based DL systems. Marble builds a probabilistic model to compactly characterize the robustness of RNNs through abstraction. Furthermore, we propose an iterative refinement algorithm to derive a precise abstraction, which enables accurate quantification of the robustness measurement. We evaluate the effectiveness of Marble on both LSTM and GRU models trained separately with three popular natural language\u00a0\u2026", "total_citations": {"2020": 1, "2021": 4, "2022": 7, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:D-3shSm-n1oC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9079183/", "authors": ["Kun Cheng", "Yuebin Bai", "Yuan Zhou", "Yun Tang", "David Sanan", "Yang Liu"], "publication_date": "2020/4/27", "journal": "IEEE Transactions on Vehicular Technology", "volume": "69", "issue": "7", "pages": "7116-7130", "publisher": "IEEE", "description": "The Controller Area Network (CAN) has been widely used in the automotive and industrial automation for over two decades. However, due to the lack of security mechanisms, CAN is vulnerable to attacks. In this paper, we propose a novel protection scheme called CANeleon. It can defend CAN against a smart attacker who might inject malicious frames with legitimate frame IDs, which cannot be mitigated by existing countermeasures. Inspired by the idea of moving target defense technologies, CANeleon equips each legitimate CAN node with the ability to shift the spoofed frame ID. In this way, the IDs of malicious frames are exposed and can be further filtered by legitimate nodes. Moreover, CANeleon neither inserts new information to the frame, nor requires any modification to the CAN protocol, so it is in compliance with the existing standards. CANeleon is a decentralized mechanism guaranteeing that the\u00a0\u2026", "total_citations": {"2020": 1, "2021": 7, "2022": 3, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:adFjLtLvNj0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8672691/", "authors": ["Sen Chen", "Minhui Xue", "Lingling Fan", "Lei Ma", "Yang Liu", "Lihua Xu"], "publication_date": "2019/2/24", "conference": "2019 IEEE 1st International Workshop on Artificial Intelligence for Mobile (AI4Mobile)", "pages": "21-24", "publisher": "IEEE", "description": "Android malware, is one of the most serious threats to mobile security. Today, machine learning-based approach is one of the most promising approaches in detecting Android malware. However, our previous experiments show that sophisticated attackers can craft large-scale Android malware to pollute training data and pose an automated poisoning attack on machine learning-based malware detection systems (e.g., Drebin, Droidapiminer, Stormdroid and Mamadroid), and eventually mislead the detection tools. We further examine how machine learning classifiers can be mislead under four different attack models and significantly reduce detection accuracy. Apart from Android malware, to better protect mobile devices, we also discuss a general threat model of Android devices to investigate the capabilities of different attackers.", "total_citations": {"2019": 1, "2020": 3, "2021": 6, "2022": 6, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:QBSR9U3j2CEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7527492/", "authors": ["Sanjeev Das", "Hao Xiao", "Yang Liu", "Wei Zhang"], "publication_date": "2016/5/22", "conference": "2016 IEEE International Symposium on Circuits and Systems (ISCAS)", "pages": "1322-1325", "publisher": "IEEE", "description": "Malware detection is one central topic in cybersecurity, which ideally requires an accurate, efficient and robust (to malware variants) solution. In this work, we propose a hardwareassisted architecture to perform online malware detection with two phases. In the offline phase, we learn the attack model of malware in the form of Deterministic Finite Automaton (DFA). During the runtime phase, we implement a DFA-based detection approach in hardware to check whether a program's execution contains the malicious behavior specified in the DFA. We evaluate our method using real world data of 168 Linux malware samples and 370 benign applications. The results show that our DFA-based approach can recognize malware variants of same family with the potential to detect zero-day attacks. Implemented in hardware, our architecture offers a real time detection with low performance and resource overhead, and more\u00a0\u2026", "total_citations": {"2016": 1, "2017": 2, "2018": 5, "2019": 3, "2020": 0, "2021": 1, "2022": 3, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5OQWvpknaCIC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-48989-6_24", "authors": ["Zhe Hou", "David Sanan", "Alwen Tiu", "Yang Liu", "Koh Chuen Hoa"], "publication_date": "2016", "conference": "FM 2016: Formal Methods: 21st International Symposium, Limassol, Cyprus, November 9-11, 2016, Proceedings 21", "pages": "388-405", "publisher": "Springer International Publishing", "description": "The SPARCv8 instruction set architecture (ISA) has been used in various processors for workstations, embedded systems, and space missions. However, there are no publicly available formal models for the SPARCv8 ISA. In this work, we give the first formal model for the integer unit of SPARCv8 ISA in Isabelle/HOL. We capture the operational semantics of the instructions using monadic definitions. Our model is a detailed model, which covers many features specific to SPARC processors, such as delayed-write for control registers, windowed general registers, and more complex memory access. Our model is also general, as we retain an abstract layer of the model which allows it to be instantiated to support all SPARCv8 compliant processors. We extract executable code from our formalisation, giving us the first systematically verified executable semantics for the SPARCv8 ISA. We have tested our model\u00a0\u2026", "total_citations": {"2017": 1, "2018": 1, "2019": 3, "2020": 4, "2021": 4, "2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2PzkjEKH0twC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7371996/", "authors": ["Shang-Wei Lin", "Jun Sun", "Truong Khanh Nguyen", "Yang Liu", "Jin Song Dong"], "publication_date": "2015/11/9", "conference": "2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "65-74", "publisher": "IEEE", "description": "Model checking suffers from the state space explosion problem. Compositional verification techniques such as assume-guarantee reasoning (AGR) have been proposed to alleviate the problem. However, there are at least three challenges in applying AGR. Firstly, given a system M1 ? M2, how do we automatically construct and refine (in the presence of spurious counterexamples) an assumption A2, which must be an abstraction of M2? Previous approaches suggest to incrementally learn and modify the assumption through multiple invocations of a model checker, which could be often time consuming. Secondly, how do we keep the state space small when checking M1 ? A2 = f if multiple refinements of A2 are necessary? Lastly, in the presence of multiple parallel components, how do we partition the components? In this work, we propose interpolation-guided compositional verification. The idea is to tackle three\u00a0\u2026", "total_citations": {"2017": 3, "2018": 1, "2019": 4, "2020": 2, "2021": 3, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bQkGhl1z2hUC": {"external_link": "https://ora.ox.ac.uk/objects/uuid:c302e02d-e13b-4481-a40e-f5223d7e5101", "authors": ["Dongxia Wang", "Tim Muller", "Jie Zhang", "Yang Liu"], "publication_date": "2015/6/22", "conference": "Twenty-Fourth International Joint Conference on Artificial Intelligence", "description": "Unfair rating attacks happen in existing trust and reputation systems, lowering the quality of the systems. There exists a formal model that measures the maximum impact of independent attackers [Wang et al., 2015] \u2014 based on information theory. We improve on these results in multiple ways: (1) we alter the methodology to be able to reason about colluding attackers as well, and (2) we extend the method to be able to measure the strength of any attacks (rather than just the strongest attack). Using (1), we identify the strongest collusion attacks, helping construct robust trust system. Using (2), we identify the strength of (classes of) attacks that we found in the literature. Based on this, we help to overcome a shortcoming of current research into collusion-resistance \u2014 specific (types of) attacks are used in simulations, disallowing direct comparisons between analyses of systems.", "total_citations": {"2015": 1, "2016": 5, "2017": 1, "2018": 1, "2019": 4, "2020": 2, "2021": 2, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YlPif8NxrbYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2483760.2483779", "authors": ["Lin Gui", "Jun Sun", "Yang Liu", "Yuan Jie Si", "Jin Song Dong", "Xin Yu Wang"], "publication_date": "2013/7/15", "conference": "Proceedings of the 2013 International Symposium on Software Testing and Analysis", "pages": "101-111", "publisher": "ACM", "description": "Testing provides a probabilistic assurance of system correctness. In general, testing relies on the assumptions that the system under test is deterministic so that test cases can be sampled. However, a challenge arises when a system under test behaves non-deterministiclly in a dynamic operating environment because it will be unknown how to sample test cases.   In this work, we propose a method combining hypothesis testing and probabilistic model checking so as to provide the ``assurance\" and quantify the error bounds. The idea is to apply hypothesis testing to deterministic system components and use probabilistic model checking techniques to lift the results through non-determinism. Furthermore, if a requirement on the level of ``assurance\" is given, we apply probabilistic model checking techniques to push down the requirement through non-determinism to individual components so that they can be verified\u00a0\u2026", "total_citations": {"2013": 2, "2014": 7, "2015": 3, "2016": 2, "2017": 0, "2018": 1, "2019": 1, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:MaiMEk8tZqMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6655714/", "authors": ["G Satya Reddy", "Yuzhang Feng", "Yang Liu", "Jin Song Dong", "Sun Jun", "Rajaraman Kanagasabai"], "publication_date": "2013/6/28", "conference": "2013 IEEE Ninth World Congress on Services", "pages": "306-311", "publisher": "IEEE", "description": "Hadoop is a popular open source implementation of MapReduce, that has a number of prominent users including Yahoo!, Facebook, and Twitter. Though several works have focused on deploying algorithms on Hadoop MapReduce, research efforts into applying formal methods to prove the correctness of hadoop systems are limited. In this paper we propose a holistic approach to verify the correctness of hadoop systems using model checking techniques. We model Hadoop's parallel architecture to constraint it to valid start up ordering and identify and prove the benefits of data locality, deadlock-freeness and non-termination among others.", "total_citations": {"2015": 2, "2016": 1, "2017": 5, "2018": 5, "2019": 2, "2020": 0, "2021": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Bg7qf7VwUHIC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-31424-7_53", "authors": ["Songzheng Song", "Jun Sun", "Yang Liu", "Jin Dong"], "publication_date": "2012", "journal": "Computer Aided Verification", "pages": "705-711", "publisher": "Springer Berlin/Heidelberg", "description": "Real-life systems are usually hard to control, due to their complicated structures, quantitative time factors and even stochastic behaviors. In this work, we present a model checker to analyze hierarchical probabilistic real-time systems. A modeling language called PRTS is used to specify such systems, and automatic zone-abstraction approach, which is probability preserving, is used to generate finite state MDP. We have implemented PRTS in model checking framework PAT so that friendly user interface can be used to edit, simulate and verify PRTS models. Some experiments are conducted to show our tool\u2019s efficiency.", "total_citations": {"2013": 2, "2014": 2, "2015": 3, "2016": 2, "2017": 1, "2018": 2, "2019": 1, "2020": 0, "2021": 1, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:osi8XriVlOYC": {"external_link": "https://scholar.google.com/scholar?cluster=6458015186868667124&hl=en&oi=scholarr", "authors": ["Ruijun Gao", "Qing Guo", "Felix Juefei-Xu", "Hongkai Yu", "Xuhong Ren", "Wei Feng", "Song Wang"], "publication_date": "2020/9/19", "journal": "arXiv preprint arXiv:2009.09258", "total_citations": {"2020": 5, "2021": 9, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3NskZpgvI9IC": {"external_link": "https://www.researchgate.net/profile/Qing-Guo-17/publication/344334753_FakeRetouch_Evading_DeepFakes_Detection_via_the_Guidance_of_Deliberate_Noise/links/5f737ecc92851c14bc9ff595/FakeRetouch-Evading-DeepFakes-Detection-via-the-Guidance-of-Deliberate-Noise.pdf", "authors": ["Yihao Huang", "Felix Juefei-Xu", "Qing Guo", "Xiaofei Xie", "Lei Ma", "Weikai Miao", "Yang Liu", "Geguang Pu"], "publication_date": "2020/9/19", "journal": "arXiv preprint arXiv:2009.09213", "volume": "1", "issue": "2", "description": "The novelty and creativity of DeepFake generation techniques have attracted worldwide media attention. Many researchers focus on detecting fake images produced by these GAN-based image generation methods with fruitful results, indicating that the GAN-based image generation methods are not yet perfect. Many studies show that the upsampling procedure used in the decoder of GAN-based image generation methods inevitably introduce artifact patterns into fake images. In order to further improve the fidelity of DeepFake images, in this work, we propose a simple yet powerful framework to reduce the artifact patterns of fake images without hurting image quality. The method is based on an important observation that adding noise to a fake image can successfully reduce the artifact patterns in both spatial and frequency domains. Thus we use a combination of additive noise and deep image filtering to reconstruct the fake images, and we name our method FakeRetouch. The deep image filtering provides a specialized filter for each pixel in the noisy image, taking full advantages of deep learning. The deeply filtered images retain very high fidelity to their DeepFake counterparts. Moreover, we use the semantic information of the image to generate an adversarial guidance map to add noise intelligently. We conduct experiments on 3 state-of-the-art representative DeepFake detection methods and fake images are generated by 16 popular GAN-based DeepFake generation methods. Our technique significantly reduces the accuracy of these 3 fake image detection methods, 36.79% on average and up to 97.02% in the worst case. Our method aims at\u00a0\u2026", "total_citations": {"2020": 1, "2021": 6, "2022": 6, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:83UE6yvegO4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8634950/", "authors": ["Jakub Breier", "Xiaolu Hou", "Yang Liu"], "publication_date": "2019/2/5", "journal": "IEEE Transactions on Dependable and Secure Computing", "volume": "18", "issue": "3", "pages": "1065-1079", "publisher": "IEEE", "description": "Cryptographic implementations are often vulnerable against physical attacks, fault injection analysis being among the most popular techniques. On par with development of attacks, the area of countermeasures is advancing rapidly, utilizing both hardware- and software-based approaches. When it comes to software encoding countermeasures for fault protection and their evaluation, there are very few proposals so far, mostly focusing on single operations rather than cipher as a whole. In this paper we propose an evaluation framework that can be used for analyzing the effectivity of software encoding countermeasures against fault attacks. We first formalize the encoding schemes in software, helping us to define what properties are required when designing a fault protection. Based on these findings, we develop an evaluation metric that can be used universally to determine the robustness of a software encoding\u00a0\u2026", "total_citations": {"2019": 1, "2020": 3, "2021": 4, "2022": 6, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CrVLTnlDqZQC": {"external_link": "https://arxiv.org/abs/1806.05859", "authors": ["Jakub Breier", "Xiaolu Hou", "Dirmanto Jap", "Lei Ma", "Shivam Bhasin", "Yang Liu"], "publication_date": "2018/6/15", "journal": "arXiv preprint arXiv:1806.05859", "description": "As deep learning systems are widely adopted in safety- and security-critical applications, such as autonomous vehicles, banking systems, etc., malicious faults and attacks become a tremendous concern, which potentially could lead to catastrophic consequences. In this paper, we initiate the first study of leveraging physical fault injection attacks on Deep Neural Networks (DNNs), by using laser injection technique on embedded systems. In particular, our exploratory study targets four widely used activation functions in DNNs development, that are the general main building block of DNNs that creates non-linear behaviors -- ReLu, softmax, sigmoid, and tanh. Our results show that by targeting these functions, it is possible to achieve a misclassification by injecting faults into the hidden layer of the network. Such result can have practical implications for real-world applications, where faults can be introduced by simpler means (such as altering the supply voltage).", "total_citations": {"2018": 2, "2019": 4, "2020": 5, "2021": 2, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Mb21Z44dZ7IC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S0167404817302481", "authors": ["Sanjeev Das", "Bihuan Chen", "Mahintham Chandramohan", "Yang Liu", "Wei Zhang"], "publication_date": "2018/3/1", "journal": "Computers & Security", "volume": "73", "pages": "374-388", "publisher": "Elsevier Advanced Technology", "description": "Return-Oriented Programming (ROP) is one of the most common techniques to exploit software vulnerabilities. However, existing defense techniques can be defeated by attackers, or suffer from high performance overhead. In this paper, we propose a defense framework, named ROPSentry, to detect ROP attacks at runtime. It is built on the observation that ROP exploits usually trigger different hardware events than normal programs generated by compilers. Hence, we leverage hardware performance counters to track such hardware events and analyze behavioral patterns of ROP attacks. ROPSentry has two approaches. The ROP-only defense approach detects ROP attacks via capturing the patterns of ROP exploits, where we propose to sample the hardware performance counters at mispredicted return events instead of at every microinstruction for a low performance overhead. To further reduce performance\u00a0\u2026", "total_citations": {"2019": 4, "2020": 1, "2021": 1, "2022": 6, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KrOX6H5u0oYC": {"external_link": "https://arxiv.org/abs/1711.07451", "authors": ["Guozhu Meng", "Yinxing Xue", "Jing Kai Siow", "Ting Su", "Annamalai Narayanan", "Yang Liu"], "publication_date": "2017/11/20", "journal": "arXiv preprint arXiv:1711.07451", "description": "Data driven research on Android has gained a great momentum these years. The abundance of data facilitates knowledge learning, however, also increases the difficulty of data preprocessing. Therefore, it is non-trivial to prepare a demanding and accurate set of data for research. In this work, we put forward AndroVault, a framework for the Android research composing of data collection, knowledge representation and knowledge extraction. It has started with a long-running web crawler for data collection (both apps and description) since 2013, which guarantees the timeliness of data; With static analysis and dynamic analysis of the collected data, we compute a variety of attributes to characterize Android apps. After that, we employ a knowledge graph to connect all these apps by computing their correlation in terms of attributes; Last, we leverage multiple technologies such as logical inference, machine learning, and correlation analysis to extract facts (more accurate and demanding, either high level or not, data) that are beneficial for a specific research problem. With the produced data of high quality, we have successfully conducted many research works including malware detection, code generation, and Android testing. We would like to release our data to the research community in an authenticated manner, and encourage them to conduct productive research.", "total_citations": {"2018": 6, "2019": 1, "2020": 5, "2021": 1, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5FkVrPDuTQgC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7470454/", "authors": ["Yongwang Zhao", "David San\u00e1n", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2016/8", "journal": "IEEE Transactions on Industrial Informatics", "volume": "12", "issue": "4", "pages": "1321-1331", "publisher": "IEEE", "description": "Partitioning operating systems (POSs) have been widely applied in safety-critical domains from aerospace to automotive. In order to improve the safety and the certification process of POSs, the ARINC 653 standard has been developed and complied with by the mainstream POSs. Rigorous formalization of ARINC 653 can reveal hidden errors in this standard and provide a necessary foundation for formal verification of POSs and ARINC 653 applications. For the purpose of reusability and efficiency, a novel methodology by integrating ontology and refinement is proposed to formally specify and analyze POSs in this paper. An ontology of POSs is developed as an intermediate model between informal descriptions of ARINC 653 and the formal specification in Event-B. A semiautomatic translation from the ontology and ARINC 653 into Event-B is implemented, which leads to a complete Event-B specification for ARINC\u00a0\u2026", "total_citations": {"2017": 3, "2018": 1, "2019": 2, "2020": 3, "2021": 4, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9AucIJLffosC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-662-43813-8_4", "authors": ["Tim Muller", "Yang Liu", "Sjouke Mauw", "Jie Zhang"], "publication_date": "2014/7/7", "conference": "IFIP International Conference on Trust Management", "pages": "44-60", "publisher": "Springer Berlin Heidelberg", "description": "Trust systems assist in dealing with users who may betray one another. Cunning users (attackers) may attempt to hide the fact that they betray others, deceiving the system. Trust systems that are difficult to deceive are considered more robust. To formally reason about robustness, we formally model the abilities of an attacker. We prove that the attacker model is maximal, i.e. 1) the attacker can perform any feasible attack and 2) if a single attacker cannot perform an attack, then a group of attackers cannot perform that attack. Therefore, we can formulate robustness analogous to security.", "total_citations": {"2014": 3, "2015": 2, "2016": 4, "2017": 1, "2018": 0, "2019": 2, "2020": 2, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:nyUGVxR7BcAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6907504/", "authors": ["HeSuan Hu", "Chen Chen", "Rong Su", "Yang Liu", "MengChu Zhou"], "publication_date": "2014/5/31", "conference": "2014 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "4423-4429", "publisher": "IEEE", "description": "Due to the competition for limited resources by many concurrent processes in large scale automated manufacturing systems (AMS), one has to resolve a deadlock issue in order to reach their production goal without disruption and downtime. Monolithic resolution is a conventional approach for optimal or acceptable solutions, but suffers from computational difficulty. On the other hand, some decentralized methods are more powerful in finding approximate solutions, but most are application-dependent. By modeling AMS as Petri nets, we develop an innovative distributed control approach, which can create a trajectory leading to a desired destination and are adaptable to different kinds of constraints. Control strategies are applied to processes locally such that they can concurrently proceed efficiently. Global destinations are always reachable through the local observation upon processes without knowing external and\u00a0\u2026", "total_citations": {"2015": 2, "2016": 7, "2017": 4, "2018": 2, "2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YOwf2qJgpHMC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-24559-6_9", "authors": ["Tian Huat Tan", "Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2011/10/26", "conference": "International Conference on Formal Engineering Methods", "pages": "98-114", "publisher": "Springer, Berlin, Heidelberg", "description": "Orc is a computation orchestration language which is designed to specify computational services, such as distributed communication and data manipulation, in a concise and elegant way. Four concurrency primitives allow programmers to orchestrate site calls to achieve a goal, while managing timeouts, priorities, and failures. To guarantee the correctness of Orc model, effective verification support is desirable. Orc has a highly concurrent semantics which introduces the problem of state-explosion to search-based verification methods like model checking. In this paper, we present a new method, called Compositional Partial Order Reduction (CPOR), which aims to provide greater state-space reduction than classic partial order reduction methods in the context of hierarchical concurrent processes. Evaluation shows that CPOR is more effective in reducing the state space than classic partial order\u00a0\u2026", "total_citations": {"2011": 1, "2012": 1, "2013": 5, "2014": 1, "2015": 3, "2016": 2, "2017": 1, "2018": 0, "2019": 0, "2020": 0, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_inCrQx-FbQC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3371151", "authors": ["Wenjian He", "Sanjeev Das", "Wei Zhang", "Yang Liu"], "publication_date": "2020/2/7", "journal": "ACM Transactions on Embedded Computing Systems (TECS)", "volume": "19", "issue": "1", "pages": "1-22", "publisher": "ACM", "description": "Code-reuse attack is a concrete threat to computing systems because it can evade conventional security defenses. Control flow integrity (CFI) is proposed to repel this threat. However, former implementations of CFI suffer from two major drawbacks: complex offline processing on programs and high overheads at runtime. Therefore, it is impractical for performance-constrained devices to adopt the technology, leaving them vulnerable to exploitation. In this article, we develop a cross-layer approach named basic-block-boundary-based control flow integrity (BBB-CFI) to minimize the overheads of both offline analysis and runtime checking. Our approach employs basic block information inside the binary code and read-only data to enforce CFI. We identify a key binary-level property called basic block boundary, and based on it we propose the code-inspired method where short code sequences can endorse a control\u00a0\u2026", "total_citations": {"2021": 8, "2022": 6, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:TXgqPU86QykC": {"external_link": "https://eprint.iacr.org/2018/545", "authors": ["Xiaolu Hou", "Jakub Breier", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2019/5/9", "journal": "IACR Transactions on Cryptographic Hardware and Embedded Systems", "pages": "1-29", "description": "Differential Fault Analysis (DFA) is considered as the most popular fault analysis method. While there are techniques that provide a fault analysis automation on the cipher level to some degree, it can be shown that when it comes to software implementations, there are new vulnerabilities, which cannot be found by observing the cipher design specification. This work bridges the gap by providing a fully automated way to carry out DFA on assembly implementations of symmetric block ciphers. We use a customized data flow graph to represent the program and develop a novel fault analysis methodology to capture the program behavior under faults. We establish an effective description of DFA as constraints that are passed to an SMT solver. We create a tool that takes assembly code as input, analyzes the dependencies among instructions, automatically attacks vulnerable instructions using SMT solver and outputs the attack details that recover the last round key (and possibly the earlier keys). We support our design with evaluations on lightweight ciphers SIMON, SPECK, and PRIDE, and a current NIST standard, AES. By automated assembly analysis, we were able to find new efficient DFA attacks on SPECK and PRIDE, exploiting implementation specific vulnerabilities, and previously published DFA on SIMON and AES. Moreover, we present a novel DFA on multiplication operation that has never been shown for symmetric block ciphers before. Our experimental evaluation also shows reasonable execution times that are scalable to current cipher designs and can easily outclass the manual analysis. Moreover, we present a method to check the\u00a0\u2026", "total_citations": {"2020": 6, "2021": 2, "2022": 3, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:J2VLEJC5QowC": {"external_link": "https://www.sciencedirect.com/science/article/pii/S0167404818311301", "authors": ["Zhushou Tang", "Minhui Xue", "Guozhu Meng", "Chengguo Ying", "Yugeng Liu", "Yangyang Li", "Haojin Zhu", "Yang Liu"], "publication_date": "2019/1", "journal": "Computers & Security", "volume": "80", "pages": "257-272", "description": "Third-party library (TPL) detection in Android has been a hot topic to security researchers for a long time. A precise yet scalable detection of TPLs in applications can greatly facilitate other security activities such as TPL integrity checking, malware detection, and privacy leakage detection. Since TPLs of specific versions may exhibit their own security issues, the identification of TPL as well as its concrete version, can help assess the security of Android APPs. However in reality, existing approaches of TPL detection suffer from low efficiency for their detection algorithm to impracticable and low accuracy due to insufficient analysis data, inappropriate features, or the disturbance from code obfuscation, shrinkage, and optimization.In this paper, we present an automated approach, named PanGuard, to detect TPLs from an enormous number of Android APPs. We propose a novel combination of features including both\u00a0\u2026", "total_citations": {"2019": 2, "2020": 6, "2021": 2, "2022": 0, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aryKp6_dckwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7381821/", "authors": ["Yongwang Zhao", "Zhibin Yang", "David San\u00e1n", "Yang Liu"], "publication_date": "2015/11", "conference": "The 26th IEEE International Symposium on Software Reliability Engineering (ISSRE 2015)", "pages": "281-292", "description": "Standards play the key role in safety-critical systems. Errors in standards could mislead system developer's understanding and introduce bugs into system implementations. In this paper, we present an Event-B formalization and verification for the ARINC 653 standard, which provides a standardized interface between safety-critical real-time operating systems and application software, as well as a set of functionalities aimed to improve the safety and certification process of such safety-critical systems. The formalization is a complete model of ARINC 653, and provides a necessary foundation for the formal development and verification of ARINC 653 compliant operating systems and applications. Three hidden errors and three cases of incomplete specification were discovered from the verification using the Event-B formal reasoning approach.", "total_citations": {"2016": 2, "2017": 5, "2018": 3, "2019": 0, "2020": 0, "2021": 2, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JO0bfRJr_gQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7294244/", "authors": ["Yan Yang", "HeSuan Hu", "Yang Liu"], "publication_date": "2015/8/24", "conference": "2015 IEEE International Conference on Automation Science and Engineering (CASE)", "pages": "1090-1097", "publisher": "IEEE", "description": "Because they bewilder some processes to wait for some resources held by others but will never be released, deadlock issues pose adverse effect on the design and operation of automated manufacturing systems (AMSs). A variety of important Petri net-based methods have been developed to cope with deadlock problems in AMSs. For them, a big challenge is that either they demand structurally-defined and globally-restrained specifications or they cannot perform on-line diagnosis owing to their static and rigid supervisor topologies. Compared to these existing methods, this paper focuses on the development of an innovative distributed supervisor which can avoid deadlocks for AMSs with assembly operations without checking global information and designing topological supervisors. On the contrary, our supervisor is achieved in an online and dynamic way, being adaptive to many contingencies like resource\u00a0\u2026", "total_citations": {"2016": 4, "2017": 3, "2018": 4, "2019": 3, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8rj-XRKUtKYC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-11737-9_12", "authors": ["Lin Gui", "Jun Sun", "Songzheng Song", "Yang Liu", "Jin Song Dong"], "publication_date": "2014/11/3", "conference": "International Conference on Formal Engineering Methods", "pages": "171-186", "publisher": "Springer International Publishing", "description": "Markov decision processes (MDPs) are extensively used to model systems with both probabilistic and nondeterministic behavior. The problem of calculating the probability of reaching certain system states (hereafter reachability analysis) is central to the MDP-based system analysis. It is known that existing approaches on reachability analysis for MDPs are often inefficient when a given MDP contains a large number of states and loops, especially with the existence of multiple probability distributions. In this work, we propose a method to eliminate strongly connected components (SCCs) in an MDP using a divide-and-conquer algorithm, and actively remove redundant probability distributions in the MDP based on the convex property. With the removal of loops and parts of probability distributions, the probabilistic reachability analysis can be accelerated, as evidenced by our experiment results.", "total_citations": {"2014": 3, "2015": 2, "2016": 2, "2017": 1, "2018": 1, "2019": 0, "2020": 3, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:sfnaS5RM6jYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2491411.2494595", "authors": ["Shuang Liu", "Yang Liu", "Jun Sun", "Manchun Zheng", "Bimlesh Wadhwa", "Jin Song Dong"], "publication_date": "2013/8/18", "conference": "Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering", "pages": "623-626", "publisher": "ACM", "description": "UML diagrams are gaining increasing usage in Object-Oriented system designs. UML state machines are specifically used in modeling dynamic behaviors of classes. It has been widely agreed that verification of system designs at an early stage will dramatically reduce the development cost. Tool support for verification UML designs can also encourage consistent usage of UML diagrams throughout the software development procedure. In this work, we present a tool, named USMMC, which turns model checking of UML state machines into practice. USMMC is a self-contained toolkit, which provides editing, interactive simulation as well as powerful model checking support for UML state machines. The evaluation results show the effectiveness and scalability of our tool.", "total_citations": {"2013": 1, "2014": 2, "2015": 5, "2016": 1, "2017": 0, "2018": 1, "2019": 1, "2020": 1, "2021": 2, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Ak0FvsSvgGUC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-31131-4_6", "authors": ["Guan Liu", "Jun Sun", "Yang Liu", "Jin Dong"], "publication_date": "2012", "journal": "Application and Theory of Petri Nets", "pages": "92-107", "publisher": "Springer Berlin/Heidelberg", "description": "Classical workflow nets (WF-nets) are an important class of Petri nets that are widely used to model and analyze workflow systems. Soundness is a crucial property that guarantees these systems are deadlock-free and bounded. Aalst et al. proved that the soundness problem is decidable, and proposed (but not proved) that the soundness problem is EXPSPACE-hard. In this paper, we show that the satisfiability problem of Boolean expression is polynomial time reducible to the liveness problem of bounded WF-nets, and soundness and liveness are equivalent for bounded WF-nets. As a result, the soundness problem of bounded WF-nets is co-NP-hard. Workflow nets with reset arcs (reWF-nets) are an extension to WF-nets, which enhance the expressiveness of WF-nets. Aalst et al. proved that the soundness problem of reWF-nets is undecidable. In this paper, we show that for bounded reWF-nets, the\u00a0\u2026", "total_citations": {"2012": 1, "2013": 4, "2014": 2, "2015": 1, "2016": 3, "2017": 0, "2018": 1, "2019": 1, "2020": 0, "2021": 0, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:gKiMpY-AVTkC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-32729-2_2", "authors": ["Jianye Hao", "Songzheng Song", "Yang Liu", "Jun Sun", "Lin Gui", "Jin Dong", "Ho-fung Leung"], "publication_date": "2012", "journal": "PRIMA 2012: Principles and Practice of Multi-Agent Systems", "pages": "16-30", "publisher": "Springer Berlin/Heidelberg", "description": "Accurate analysis of the stochastic dynamics of multi-agent system is important but challenging. Probabilistic model checking, a formal technique for analysing a system which exhibits stochastic behaviors, can be a natural solution to analyse multi-agent systems. In this paper, we investigate this problem in the context of dispersion games focusing on two strategies: basic simple strategy (BSS) and extended simple strategies (ESS). We model the system using discrete-time Markov chain (DTMC) and reduce the state space of the models by applying counter abstraction technique. Two important properties of the system are considered: convergence and convergence rate. We show that these kinds of properties can be automatically analysed and verified using probabilistic model checking techniques. Better understanding of the dynamics of the strategies can be obtained compared with empirical evaluations\u00a0\u2026", "total_citations": {"2013": 3, "2014": 2, "2015": 3, "2016": 0, "2017": 2, "2018": 0, "2019": 0, "2020": 1, "2021": 1, "2022": 0, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kVDlchZkYg4C": {"external_link": "https://www.sciencedirect.com/science/article/pii/S0893608021003877", "authors": ["Chaozheng Wang", "Zhenhao Nong", "Cuiyun Gao", "Zongjie Li", "Jichuan Zeng", "Zhenchang Xing", "Yang Liu"], "publication_date": "2022/1/1", "journal": "Neural Networks", "volume": "145", "pages": "22-32", "publisher": "Pergamon", "description": "Code search is a common practice for developers during software implementation. The challenges of accurate code search mainly lie in the knowledge gap between source code and natural language (i.e., queries). Due to the limited code-query pairs and large code-description pairs available, the prior studies based on deep learning techniques focus on learning the semantic matching relation between source code and corresponding description texts for the task, and hypothesize that the semantic gap between descriptions and user queries is marginal. In this work, we found that the code search models trained on code-description pairs may not perform well on user queries, which indicates the semantic distance between queries and code descriptions. To mitigate the semantic distance for more effective code search, we propose QueCos, a Query-enriched Code search model. QueCos learns to generate\u00a0\u2026", "total_citations": {"2022": 5, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UIW7YHcmbUEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9642059/", "authors": ["Chao Ren", "Xiaoning Du", "Yan Xu", "Qun Song", "Yang Liu", "Rui Tan"], "publication_date": "2021/12/8", "journal": "IEEE Transactions on Smart Grid", "volume": "13", "issue": "2", "pages": "1622-1632", "publisher": "IEEE", "description": "Based on machine learning (ML) technique, the data-driven power system stability assessment has received significant research interests in recent years. Yet, the ML-based models may be vulnerable to the adversarial examples, which are very close to the original input but can lead to a different (wrong) assessment result. Taking short-term voltage stability (STVS) assessment problem as the case study, this paper firstly analyzes the vulnerability of the ML-based models under both the white-box and the black-box attack scenarios, where adversarial examples are generated to falsify the STVS assessment model into the wrong outputs without noticeable changes of the input values. Then, an empirical index is proposed to quantitatively measure the robustness of ML-based models under adversarial examples. After that, an adversarial training-based mitigation strategy is proposed to enhance the ML-based model\u00a0\u2026", "total_citations": {"2022": 6, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:jtusTj6o6osC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3474085.3475170", "authors": ["Qing Guo", "Xiaoguang Li", "Felix Juefei-Xu", "Hongkai Yu", "Yang Liu", "Song Wang"], "publication_date": "2021/10/17", "book": "Proceedings of the 29th ACM International Conference on Multimedia", "pages": "386-394", "description": "Image inpainting aims to restore the missing regions of corrupted images and make the recovery result identical to the originally complete image, which is different from the common generative task emphasizing the naturalness or realism of generated images. Nevertheless, existing works usually regard it as a pure generation problem and employ cutting-edge deep generative techniques to address it. The generative networks can fill the main missing parts with realistic contents but usually distort the local structures or introduce obvious artifacts. In this paper, for the first time, we formulate image inpainting as a mix of two problems, i.e., predictive filtering and deep generation. Predictive filtering is good at preserving local structures and removing artifacts but falls short to complete the large missing regions. The deep generative network can fill the numerous missing pixels based on the understanding of the whole\u00a0\u2026", "total_citations": {"2022": 4, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:tCoNjB6AT50C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9575536/", "authors": ["Yun Tang", "Yuan Zhou", "Yang Liu", "Jun Sun", "Gang Wang"], "publication_date": "2021/7/11", "conference": "2021 IEEE Intelligent Vehicles Symposium (IV)", "pages": "179-185", "publisher": "IEEE", "description": "Collision avoidance is one of the crucial functions of autonomous driving systems (ADSs) to guarantee the safety of autonomous vehicles (AVs). It requires extensive testing before an AV is deployed to public roads. Most of the current ADS testing methods generate test cases either from real traffic data or manually designed for some specific scenarios. There is little work on systematic methods to generate test cases from a complete map where an AV operates. Systematic testing on such a map is challenging due to the enormous scenarios. In this paper, we propose a collision-avoidance testing method for ADSs running on a map, which aims to reduce the scenario space while maintaining scenario diversity. The method consists of test case classification and test case generation. First, we build the topology structure of a map, based on which we classify possible scenarios into different classes. Second, we divide\u00a0\u2026", "total_citations": {"2021": 3, "2022": 5, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:sq_mVe84DbIC": {"external_link": "https://proceedings.mlr.press/v139/xie21b.html", "authors": ["Xiaofei Xie", "Wenbo Guo", "Lei Ma", "Wei Le", "Jian Wang", "Lingjun Zhou", "Yang Liu", "Xinyu Xing"], "publication_date": "2021/7/1", "conference": "International Conference on Machine Learning", "pages": "11383-11392", "publisher": "PMLR", "description": "Deep neural networks are vulnerable to adversarial attacks. Due to their black-box nature, it is rather challenging to interpret and properly repair these incorrect behaviors. This paper focuses on interpreting and repairing the incorrect behaviors of Recurrent Neural Networks (RNNs). We propose a lightweight model-based approach (RNNRepair) to help understand and repair incorrect behaviors of an RNN. Specifically, we build an influence model to characterize the stateful and statistical behaviors of an RNN over all the training data and to perform the influence analysis for the errors. Compared with the existing techniques on influence function, our method can efficiently estimate the influence of existing or newly added training samples for a given prediction at both sample level and segmentation level. Our empirical evaluation shows that the proposed influence model is able to extract accurate and understandable features. Based on the influence model, our proposed technique could effectively infer the influential instances from not only an entire testing sequence but also a segment within that sequence. Moreover, with the sample-level and segment-level influence relations, RNNRepair could further remediate two types of incorrect predictions at the sample level and segment level.", "total_citations": {"2021": 1, "2022": 6, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4b-LE5UluQcC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9425910/", "authors": ["Yang Xiao", "Zhengzi Xu", "Weiwei Zhang", "Chendong Yu", "Longquan Liu", "Wei Zou", "Zimu Yuan", "Yang Liu", "Aihua Piao", "Wei Huo"], "publication_date": "2021/3/9", "conference": "2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)", "pages": "213-224", "publisher": "IEEE", "description": "Binary level code clone detection techniques have been used to identify 1-day vulnerabilities in software. It collects functions with known vulnerabilities and searches for similar functions in the target system. However, existing approaches are limited to detect the same vulnerabilities in different binaries. They can hardly find new recurring vulnerabilities, which share similar logic. Moreover, they only focus on improving the accuracy of binary function matching algorithms while overlooking the presence of security patches, which results in high false-positive rates and requires significant effort to verify the results.To this end, we propose VIVA, a binary level vulnerability and patch semantic summarization and matching tool for accurate recurring vulnerability detection. It uses novel binary program slicing techniques with the aid of pseudo-code trace refinement to generate partial vulnerability and patch signatures, which\u00a0\u2026", "total_citations": {"2020": 1, "2021": 0, "2022": 6, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hL6j_VNiN9gC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8615675/", "authors": ["Wenjian He", "Wei Zhang", "Sanjeev Das", "Yang Liu"], "publication_date": "2018/10/7", "conference": "2018 IEEE 36th International Conference on Computer Design (ICCD)", "pages": "108-114", "publisher": "IEEE", "description": "Software Guard Extension (SGX) is a new security feature that has been released in recent Intel commodity processors. It is designed to provide a user program with a strongly shielded environment against other components in the system, including the OS, firmware and hardware peripherals. With SGX, developers can securely deploy critical applications on untrusted remote platforms without the concern of information leakage. However, researchers have found several attacks against SGX, suggesting blind reliance on SGX is inadvisable, and promoting the need for a comprehensive study on the security property of SGX. In this paper, we discover a new attack vector SGXlinger to disclose information inside the protected program. Our attack monitors the interrupt latency of the SGX-protected program, and it is the first time that the interrupt latency is leveraged as a side-channel. We develop a framework to\u00a0\u2026", "total_citations": {"2019": 1, "2020": 5, "2021": 4, "2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:AdUz3-SiDfgC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2786805.2786817", "authors": ["Jun Sun", "Hao Xiao", "Yang Liu", "Shang-Wei Lin", "Shengchao Qin"], "publication_date": "2015/8/30", "conference": "Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering", "pages": "698-709", "publisher": "ACM", "description": "A (Java) class provides a service to its clients (i.e., programs which use the class). The service must satisfy certain specifications. Different specifications might be expected at different levels of abstraction depending on the client's objective. In order to effectively contrast the class against its specifications, whether manually or automatically, one essential step is to automatically construct an abstraction of the given class at a proper level of abstraction. The abstraction should be correct (i.e., over-approximating) and accurate (i.e., with few spurious traces). We present an automatic approach, which combines testing, learning, and validation, to constructing an abstraction. Our approach is designed such that a large part of the abstraction is generated based on testing and learning so as to minimize the use of heavy-weight techniques like symbolic execution. The abstraction is generated through a process of abstraction\u00a0\u2026", "total_citations": {"2015": 1, "2016": 1, "2017": 3, "2018": 1, "2019": 4, "2020": 0, "2021": 2, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0lma3NU_mqEC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-19249-9_15", "authors": ["Xiaoning Du", "Yang Liu", "Alwen Tiu"], "publication_date": "2015/6/24", "conference": "International Symposium on Formal Methods", "pages": "231-247", "publisher": "Springer International Publishing", "description": "Linear temporal logic (LTL) has been widely used to specify runtime policies. Traditionally this use of LTL is to capture the qualitative aspects of the monitored systems, but recent developments in metric LTL and its extensions with aggregate operators allow some quantitative policies to be specified. Our interest in LTL-based policy languages is driven by applications in runtime Android malware detection, which requires the monitoring algorithm to be independent of the length of the system event traces so that its performance does not degrade as the traces grow. We propose a policy language based on a past-time variant of LTL, extended with an aggregate operator called the counting quantifier to specify a policy based on the number of times some sub-policies are satisfied in the past. We show that a broad class of policies, but not all policies, specified with our language can be monitored in a trace\u00a0\u2026", "total_citations": {"2017": 1, "2018": 0, "2019": 4, "2020": 3, "2021": 2, "2022": 3, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:auQHJw8QJBgC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6903354/", "authors": ["Sanjeev Das", "Wei Zhang", "Yang Liu"], "publication_date": "2014/7/9", "conference": "2014 IEEE Computer Society Annual Symposium on VLSI", "pages": "166-171", "publisher": "IEEE", "description": "Trusted Platform Module (TPM) has gained its popularity in computing systems as a hardware security approach. TPM provides the boot time security by verifying the platform integrity including hardware and software. However, once the software is loaded, TPM can no longer protect the software execution. In this work, we propose a dynamic TPM design, which performs control flow checking to protect the program from runtime attacks. The control flow checker is integrated at the commit stage of the processor pipeline. The control flow of program is verified to defend the attacks such as stack smashing using buffer overflow and code reuse. We implement the proposed dynamic TPM design in FPGA to achieve high performance, low cost and flexibility for easy functionality upgrade based on FPGA. In our design, neither the source code nor the Instruction Set Architecture (ISA) needs to be changed. The benchmark\u00a0\u2026", "total_citations": {"2015": 1, "2016": 4, "2017": 2, "2018": 3, "2019": 1, "2020": 1, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aEyKTaVlRPYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9865980/", "authors": ["Yam Sharon", "David Berend", "Yang Liu", "Asaf Shabtai", "Yuval Elovici"], "publication_date": "2022/8/24", "journal": "IEEE Transactions on Information Forensics and Security", "volume": "17", "pages": "3225-3237", "publisher": "IEEE", "description": "Network intrusion attacks are a known threat. To detect such attacks, network intrusion detection systems (NIDSs) have been developed and deployed. These systems apply machine learning models to high-dimensional vectors of features extracted from network traffic to detect intrusions. Advances in NIDSs have made it challenging for attackers, who must execute attacks without being detected by these systems. Prior research on bypassing NIDSs has mainly focused on perturbing the features extracted from the attack traffic to fool the detection system, however, this may jeopardize the attack\u2019s functionality. In this work, we present TANTRA, a novel end-to-end Timing-based Adversarial Network Traffic Reshaping Attack that can bypass a variety of NIDSs. Our evasion attack utilizes a long short-term memory (LSTM) deep neural network (DNN) which is trained to learn the time differences between the target network\u00a0\u2026", "total_citations": {"2021": 3, "2022": 3, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kiFE3DPpsncC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9822974/", "authors": ["Guangke Chen", "Zhe Zhao", "Fu Song", "Sen Chen", "Lingling Fan", "Yang Liu"], "publication_date": "2022/7/8", "journal": "IEEE Transactions on Dependable and Secure Computing", "publisher": "IEEE", "description": "Recent work has illuminated the vulnerability of speaker recognition systems (SRSs) against adversarial attacks, raising significant security concerns in deploying SRSs. However, they considered only a few settings (e.g., some combinations of source and target speakers), leaving many interesting and important settings in real-world attack scenarios alone. In this work, we present AS2T , the first attack in this domain which covers all the settings, thus allows the adversary to craft adversarial voices using arbitrary source and target speakers for any of three main recognition tasks. Since none of the existing loss functions can be applied to all the settings, we explore many candidate loss functions for each setting including the existing and newly designed ones. We thoroughly evaluate their efficacy and find that some existing loss functions are suboptimal. Then, to improve the robustness of AS2T towards practical over\u00a0\u2026", "total_citations": {"2022": 6, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:XzWLPxS1ir4C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3510003.3510133", "authors": ["Yi Liu", "Yuekang Li", "Gelei Deng", "Yang Liu", "Ruiyuan Wan", "Runchao Wu", "Dandan Ji", "Shiheng Xu", "Minli Bao"], "publication_date": "2022/5/21", "book": "Proceedings of the 44th International Conference on Software Engineering", "pages": "1406-1417", "description": "RESTful APIs are arguably the most popular endpoints for accessing Web services. Blackbox testing is one of the emerging techniques for ensuring the reliability of RESTful APIs. The major challenge in testing RESTful APIs is the need for correct sequences of API operation calls for in-depth testing. To build meaningful operation call sequences, researchers have proposed techniques to learn and utilize the API dependencies based on OpenAPI specifications. However, these techniques either lack the overall awareness of how all the APIs are connected or the flexibility of adaptively fixing the learned knowledge. In this paper, we propose Morest, a model-based RESTful API testing technique that builds and maintains a dynamically updating RESTful-service Property Graph (RPG) to model the behaviors of RESTful-services and guide the call sequence generation. We empirically evaluated Morest and the results\u00a0\u2026", "total_citations": {"2022": 7, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Lbh3VFZM3akC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3511887", "authors": ["Huangzhao Zhang", "Zhiyi Fu", "Ge Li", "Lei Ma", "Zhehao Zhao", "Hua\u2019an Yang", "Yizhe Sun", "Yang Liu", "Zhi Jin"], "publication_date": "2022/4/9", "journal": "ACM Transactions on Software Engineering and Methodology (TOSEM)", "volume": "31", "issue": "3", "pages": "1-40", "publisher": "ACM", "description": "Deep learning (DL) has recently been widely applied to diverse source code processing tasks in the software engineering (SE) community, which achieves competitive performance (e.g., accuracy). However, the robustness, which requires the model to produce consistent decisions given minorly perturbed code inputs, still lacks systematic investigation as an important quality indicator. This article initiates an early step and proposes a framework CARROT for robustness detection, measurement, and enhancement of DL models for source code processing. We first propose an optimization-based attack technique CARROTA to generate valid adversarial source code examples effectively and efficiently. Based on this, we define the robustness metrics and propose robustness measurement toolkit CARROTM, which employs the worst-case performance approximation under the allowable perturbations. We further\u00a0\u2026", "total_citations": {"2022": 2, "2023": 11}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aDdGf5um_jkC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3488244", "authors": ["Yu Zhao", "Ting Su", "Yang Liu", "Wei Zheng", "Xiaoxue Wu", "Ramakanth Kavuluru", "William GJ Halfond", "Tingting Yu"], "publication_date": "2022/3/7", "journal": "ACM Transactions on Software Engineering and Methodology (TOSEM)", "volume": "31", "issue": "3", "pages": "1-33", "publisher": "ACM", "description": "The large demand of mobile devices creates significant concerns about the quality of mobile applications (apps). Developers heavily rely on bug reports in issue tracking systems to reproduce failures (e.g., crashes). However, the process of crash reproduction is often manually done by developers, making the resolution of bugs inefficient, especially given that bug reports are often written in natural language. To improve the productivity of developers in resolving bug reports, in this paper, we introduce a novel approach, called ReCDroid+, that can automatically reproduce crashes from bug reports for Android apps. ReCDroid+ uses a combination of natural language processing (NLP), deep learning, and dynamic GUI exploration to synthesize event sequences with the goal of reproducing the reported crash. We have evaluated ReCDroid+ on 66 original bug reports from 37 Android apps. The results show that\u00a0\u2026", "total_citations": {"2022": 3, "2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KOc9rAu6-V4C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3471621.3471867", "authors": ["Gelei Deng", "Yuan Zhou", "Yuan Xu", "Tianwei Zhang", "Yang Liu"], "publication_date": "2021/10/6", "book": "Proceedings of the 24th International Symposium on Research in Attacks, Intrusions and Defenses", "pages": "17-32", "description": "Multi-Robot Systems (MRSs) show significant advantages to deal with complex tasks efficiently. However, the system complexity inevitably enlarges the attack surface and adds difficulty in guaranteeing the security and safety of MRSs. In this paper, we present an in-depth investigation about the Byzantine threats in MRSs, where some robot is untrusted. We design a practical methodology to identify potential Byzantine risks in a given MRS workload built from the Robot Operating System (ROS). It consists of three novel steps (requirement specification using signal temporal logic, attack surface determination via data-flow analysis, attack identification using requirement-driven fuzzing) to thoroughly assess MRS workloads. We use this fuzzing method to inspect five typical MRS workloads from past works and the ROS platform, and identify three novel kinds of attacks that can be launched with five attack strategies. We\u00a0\u2026", "total_citations": {"2021": 2, "2022": 4, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aKos2Y7kUz0C": {"external_link": "https://scholar.google.com/scholar?cluster=15407131709676533953&hl=en&oi=scholarr", "authors": ["Shangwei Guo", "Tianwei Zhang", "Han Qiu", "Yi Zeng", "Tao Xiang", "Yang Liu"], "publication_date": "2020/9/18", "journal": "arXiv preprint arXiv:2009.08697", "total_citations": {"2020": 1, "2021": 6, "2022": 5, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2mus-XyGPC0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9261013/", "authors": ["Xiaolu Hou", "Jakub Breier", "Dirmanto Jap", "Lei Ma", "Shivam Bhasin", "Yang Liu"], "publication_date": "2020/7/20", "conference": "2020 IEEE International Symposium on the Physical and Failure Analysis of Integrated Circuits (IPFA)", "pages": "1-6", "publisher": "IEEE", "description": "Deep learning is becoming a basis of decision making systems in many application domains, such as autonomous vehicles, health systems, etc., where the risk of misclassification can lead to serious consequences. It is necessary to know to which extent are Deep Neural Networks (DNNs) robust against various types of adversarial conditions. In this paper, we experimentally evaluate DNNs implemented in embedded device by using laser fault injection, a physical attack technique that is mostly used in security and reliability communities to test robustness of various systems. We show practical results on four activation functions, ReLu, softmax, sigmoid, and tanh. Our results point out the misclassification possibilities for DNNs achieved by injecting faults into the hidden layers of the network. We evaluate DNNs by using several different attack strategies to show which are the most efficient in terms of misclassification\u00a0\u2026", "total_citations": {"2021": 3, "2022": 6, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:gFcjaLVeiroC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8952565/", "authors": ["Xiaoning Du", "Xiaofei Xie", "Yi Li", "Lei Ma", "Yang Liu", "Jianjun Zhao"], "publication_date": "2019/11/11", "conference": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1062-1065", "publisher": "IEEE", "description": "Recurrent neural network (RNN) has achieved great success in processing sequential inputs for applications such as automatic speech recognition, natural language processing and machine translation. However, quality and reliability issues of RNNs make them vulnerable to adversarial attacks and hinder their deployment in real-world applications. In this paper, we propose a quantitative analysis framework - DeepStellar - to pave the way for effective quality and security analysis of software systems powered by RNNs. DeepStellar is generic to handle various RNN architectures, including LSTM and GRU, scalable to work on industrial-grade RNN models, and extensible to develop customized analyzers and tools. We demonstrated that, with DeepStellar, users are able to design efficient test generation tools, and develop effective adversarial sample detectors. We tested the developed applications on three real\u00a0\u2026", "total_citations": {"2019": 1, "2020": 4, "2021": 3, "2022": 4, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:l1jknz_x7mgC": {"external_link": "https://scholar.google.com/scholar?cluster=9036480971927878377&hl=en&oi=scholarr", "authors": ["Annamalai Narayanan", "Mahinthan Chandramohan", "Rajasekar Venkatesan", "Lihui Chen", "Yang Liu", "Shantanu Jaiswal"], "publication_date": "2017", "journal": "arXiv preprint arxiv:1707.05005", "total_citations": {"2019": 2, "2020": 5, "2021": 0, "2022": 4, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vJdfVD8-6ZYC": {"external_link": "https://link.springer.com/article/10.1007/s10270-014-0411-7", "authors": ["Songzheng Song", "Jiexin Zhang", "Yang Liu", "Mikhail Auguston", "Jun Sun", "Jin Song Dong", "Tieming Chen"], "publication_date": "2016/5/1", "journal": "Software & Systems Modeling", "volume": "15", "issue": "2", "pages": "453-471", "publisher": "Springer Berlin Heidelberg", "description": "The analysis of software architecture plays an important role in understanding the system structures and facilitate proper implementation of user requirements. Despite its importance in the software engineering practice, the lack of formal description and verification support in this domain hinders the development of quality architectural models. To tackle this problem, in this work, we develop an approach for modeling and verifying software architectures specified using Monterey Phoenix (MP) architecture description language. MP is capable of modeling system and environment behaviors based on event traces, as well as supporting different architecture composition operations and views. First, we formalize the syntax and operational semantics for MP; therefore, formal verification of MP models is feasible. Second, we extend MP to support shared variables and stochastic characteristics, which not only\u00a0\u2026", "total_citations": {"2015": 1, "2016": 0, "2017": 3, "2018": 3, "2019": 1, "2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:dhFuZR0502QC": {"external_link": "https://link.springer.com/article/10.1007/s11704-012-2903-3", "authors": ["Anh Tuan Luu", "Jun Sun", "Yang Liu", "Jin Song Dong", "Xiaohong Li", "Thanh Tho Quan"], "publication_date": "2012/2/1", "journal": "Frontiers of Computer Science", "volume": "6", "issue": "1", "pages": "57-75", "publisher": "SP Higher Education Press", "description": "Security protocols play more and more important roles with wide use in many applications nowadays. Currently, there are many tools for specifying and verifying security protocols such as Casper/FDR, ProVerif, or AVISPA. In these tools, the intruder\u2019s ability, which either needs to be specified explicitly or set by default, is not flexible in some circumstances. Moreover, whereas most of the existing tools focus on secrecy and authentication properties, few supports privacy properties like anonymity, receipt freeness, and coercion resistance, which are crucial in many applications such as in electronic voting systems or anonymous online transactions. In this paper, we introduce a framework for specifying security protocols in the labeled transition system (LTS) semantics model, which embeds the knowledge of the participants and parameterizes the ability of an attacker. Using this model, we give the formal\u00a0\u2026", "total_citations": {"2013": 3, "2014": 3, "2015": 3, "2016": 3, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:C7HQDqNFSbYC": {"external_link": "https://arxiv.org/abs/2109.01766", "authors": ["Guangke Chen", "Zhe Zhao", "Fu Song", "Sen Chen", "Lingling Fan", "Yang Liu"], "publication_date": "2021/9/4", "journal": "arXiv preprint arXiv:2109.01766", "description": "Adversarial attacks have been expanded to speaker recognition (SR). However, existing attacks are often assessed using different SR models, recognition tasks and datasets, and only few adversarial defenses borrowed from computer vision are considered. Yet,these defenses have not been thoroughly evaluated against adaptive attacks. Thus, there is still a lack of quantitative understanding about the strengths and limitations of adversarial attacks and defenses. More effective defenses are also required for securing SR systems. To bridge this gap, we present SEC4SR, the first platform enabling researchers to systematically and comprehensively evaluate adversarial attacks and defenses in SR. SEC4SR incorporates 4 white-box and 2 black-box attacks, 24 defenses including our novel feature-level transformations. It also contains techniques for mounting adaptive attacks. Using SEC4SR, we conduct thus far the largest-scale empirical study on adversarial attacks and defenses in SR, involving 23 defenses, 15 attacks and 4 attack settings. Our study provides lots of useful findings that may advance future research: such as (1) all the transformations slightly degrade accuracy on benign examples and their effectiveness vary with attacks; (2) most transformations become less effective under adaptive attacks, but some transformations become more effective; (3) few transformations combined with adversarial training yield stronger defenses over some but not all attacks, while our feature-level transformation combined with adversarial training yields the strongest defense over all the attacks. Extensive experiments demonstrate capabilities and\u00a0\u2026", "total_citations": {"2021": 1, "2022": 9, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bNEIKWRbVi8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9411718/", "authors": ["Alvin Chan", "Lei Ma", "Felix Juefei-Xu", "Yew-Soon Ong", "Xiaofei Xie", "Minhui Xue", "Yang Liu"], "publication_date": "2021/4/22", "journal": "IEEE Transactions on Neural Networks and Learning Systems", "volume": "33", "issue": "11", "pages": "6976-6982", "publisher": "IEEE", "description": "The ability to read, reason, and infer lies at the heart of neural reasoning architectures. After all, the ability to perform logical reasoning over language remains a coveted goal of Artificial Intelligence. To this end, models such as the Turing-complete differentiable neural computer (DNC) boast of real logical reasoning capabilities, along with the ability to reason beyond simple surface-level matching. In this brief, we propose the first probe into DNC\u2019s logical reasoning capabilities with a focus on text-based question answering (QA). More concretely, we propose a conceptually simple but effective adversarial attack based on metamorphic relations. Our proposed adversarial attack reduces DNCs\u2019 state-of-the-art accuracy from 100% to 1.5% in the worst case, exposing weaknesses and susceptibilities in modern neural reasoning architectures. We further empirically explore possibilities to defend against such attacks and\u00a0\u2026", "total_citations": {"2020": 1, "2021": 1, "2022": 7, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yHoQYHXJRqAC": {"external_link": "https://link.springer.com/article/10.1186/s42400-018-0006-7", "authors": ["Guozhu Meng", "Ruitao Feng", "Guangdong Bai", "Kai Chen", "Yang Liu"], "publication_date": "2018/12", "journal": "Cybersecurity", "volume": "1", "issue": "1", "pages": "1-17", "publisher": "SpringerOpen", "description": "A precise representation for attacks can benefit the detection of malware in both accuracy and efficiency. However, it is still far from expectation to describe attacks precisely on the Android platform. In addition, new features on Android, such as communication mechanisms, introduce new challenges and difficulties for attack detection. In this paper, we propose abstract attack models to precisely capture the semantics of various Android attacks, which include the corresponding targets, involved behaviors as well as their execution dependency. Meanwhile, we construct a novel graph-based model called the inter-component communication graph (ICCG) to describe the internal control flows and inter-component communications of applications. The models take into account more communication channel with a maximized preservation of their program logics. With the guidance of the attack models, we propose\u00a0\u2026", "total_citations": {"2018": 1, "2019": 1, "2020": 5, "2021": 2, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:uSZH581ylUkC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3275219.3275225", "authors": ["Lingyun Situ", "Linzhang Wang", "Yang Liu", "Bing Mao", "Xuandong Li"], "publication_date": "2018/9/16", "conference": "Proceedings of the Tenth Asia-Pacific Symposium on Internetware", "pages": "5", "publisher": "ACM", "description": "It is challenging to have a general solution to precisely detect arbitrary vulnerabilities. Thus security research has focused on detecting specific types of vulnerabilities. Missing checks for untrusted inputs used in security-sensitive operations are one of the major causes of various serious vulnerabilities. Efficiently detecting missing checks is essential for identifying insufficient attack protections and prognosing potential vulnerabilities. This paper proposes a systematic static approach to detect missing checks for manipulable data used in security-sensitive operations in C/C++ programs. We first locate customized security-sensitive operations with lightweight static analysis; then judge assailability of sensitive data used in security-sensitive operations via static taint analysis; finally, assess the existence and risk degree of missing checks using static analysis. We have implemented the approach into an automated and\u00a0\u2026", "total_citations": {"2019": 4, "2020": 4, "2021": 1, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RXC-vbXDMdwC": {"external_link": "https://arxiv.org/abs/1804.01295", "authors": ["Jiao Jiao", "Shuanglong Kan", "Shang-Wei Lin", "David San\u00e1n", "Yang Liu", "Jun Sun"], "publication_date": "2018/4/4", "journal": "arXiv preprint arXiv:1804.01295", "description": "Bitcoin has attracted everyone's attention and interest recently. Ethereum (ETH), a second generation cryptocurrency, extends Bitcoin's design by offering a Turing-complete programming language called Solidity to develop smart contracts. Smart contracts allow creditable execution of contracts on EVM (Ethereum Virtual Machine) without third parties. Developing correct smart contracts is challenging due to its decentralized computation nature. Buggy smart contracts may lead to huge financial loss. Furthermore, smart contracts are very hard, if not impossible, to patch once they are deployed. Thus, there is a recent surge of interest on analyzing/verifying smart contracts. While existing work focuses on EVM opcode, we argue that it is equally important to understand and define the semantics of Solidity since programmers program and reason about smart contracts at the level of source code. In this work, we develop the structural operational semantics for Solidity, which allows us to identify multiple design issues which underlines many problematic smart contracts. Furthermore, our semantics is executable in the K framework, which allows us to verify/falsify contracts automatically.", "total_citations": {"2019": 5, "2020": 4, "2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:viPVbuMW504C": {"external_link": null, "authors": ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu", "Zhendong Su"], "publication_date": "2018", "journal": "ACM 40th International Conference on Software Engineering (ICSE 2018)", "volume": "10", "issue": "3180155.3180222", "total_citations": {"2017": 1, "2018": 1, "2019": 0, "2020": 4, "2021": 3, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UwpDZDXJMDUC": {"external_link": "https://link.springer.com/article/10.1007/s10009-015-0373-2", "authors": ["Kiran Adhikari", "James Street", "Chao Wang", "Yang Liu", "Shaojie Zhang"], "publication_date": "2016/8/1", "journal": "International Journal on Software Tools for Technology Transfer", "volume": "18", "issue": "4", "pages": "393-407", "publisher": "Springer Berlin Heidelberg", "description": "The recent years have seen increasingly widespread use of highly concurrent data structures in both multi-core and distributed computing environments, thereby escalating the priority for verifying their correctness. Quasi linearizability is a quantitative variation of the standard linearizability correctness condition to allow more implementation freedom for performance optimization. However, ensuring that the implementation satisfies the quantitative aspect of this new correctness condition is often an arduous task. In this paper, we propose the first automated method for formally verifying quasi linearizability of the implementation model of a concurrent data structure with respect to its sequential specification. The method is based on checking a relaxed version of the refinement relation between the implementation model and the specification model through explicit state model checking. Our method can directly\u00a0\u2026", "total_citations": {"2015": 2, "2016": 2, "2017": 1, "2018": 1, "2019": 1, "2020": 1, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JzGFD3-rS6kC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-11737-9_19", "authors": ["Li Li", "Hong Hu", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2014/11/3", "conference": "International Conference on Formal Engineering Methods", "pages": "284-299", "publisher": "Springer International Publishing", "description": "An increasing number of \u201dsmart\u201d embedded devices are employed in our living environment nowadays. Unlike traditional computer systems, these devices are often physically accessible to the attackers. It is therefore almost impossible to guarantee that they are un-compromised, i.e., that indeed the devices are executing the intended software. In such a context, software-based attestation is deemed as a promising solution to validate their software integrity. It guarantees that the software running on the embedded devices are un-compromised without any hardware support. However, designing software-based attestation protocols are shown to be error-prone. In this work, we develop a framework for design and analysis of software-based attestation protocols. We first propose a generic attestation scheme that captures most existing software-based attestation protocols. After formalizing the security criteria for\u00a0\u2026", "total_citations": {"2015": 2, "2016": 4, "2017": 0, "2018": 1, "2019": 2, "2020": 1, "2021": 1, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Xxrp-jDxsD4C": {"external_link": "https://link.springer.com/article/10.1007/s00165-013-0280-9", "authors": ["Jin Song Dong", "Yang Liu", "Jun Sun", "Xian Zhang"], "publication_date": "2014/7/1", "journal": "Formal Aspects of Computing", "volume": "26", "issue": "4", "pages": "729-759", "publisher": "Springer London", "description": "Recently, a promising programming model called Orc has been proposed to support a structured way of orchestrating distributed Web Services. Orc is intuitive because it offers concise constructors to manage concurrent communication, time-outs, priorities, failure of Web Services or communication and so forth. The semantics of Orc is precisely defined. However, there is no automatic verification tool available to verify critical properties against Orc programs. Our goal is to verify the orchestration programs (written in Orc language) which invoke web services to achieve certain goals. To investigate this problem and build useful tools, we explore in two directions. Firstly, we define a Timed Automata semantics for the Orc language, which we prove is semantically equivalent to the operational semantics of Orc. Consequently, Timed Automata models are systematically constructed from Orc programs. The practical\u00a0\u2026", "total_citations": {"2013": 1, "2014": 0, "2015": 5, "2016": 1, "2017": 3, "2018": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1r-w4gtu6w8C": {"external_link": "https://link.springer.com/article/10.1007/s10703-013-0197-1", "authors": ["Yi Li", "Jin Song Dong", "Jing Sun", "Yang Liu", "Jun Sun"], "publication_date": "2014/4/1", "journal": "Formal Methods in System Design", "volume": "44", "issue": "2", "pages": "176-202", "publisher": "Springer US", "description": "Model checking provides a way to automatically explore the state space of a finite state system based on desired properties, whereas planning is to produce a sequence of actions that leads from the initial state to the target goal states. Previous research in this field proposed a number of approaches for connecting model checking with planning problem solving. In this paper, we investigate the feasibility of using an established model checking framework, Process Analysis Toolkit (PAT), as a planning solution provider for upper layer applications. To achieve this, we first carry out a number of experiments on different model checking tools in order to compare their performance and capabilities on planning problem solving. Our experimental results suggest that solving planning problems using model checkers is not only possible but also practical. We then propose a formal semantic mapping from the standard\u00a0\u2026", "total_citations": {"2014": 2, "2015": 1, "2016": 2, "2017": 2, "2018": 0, "2019": 2, "2020": 0, "2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Aul-kAQHnToC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-35873-9_30", "authors": ["Manchun Zheng", "David San\u00e1n", "Jun Sun", "Yang Liu", "Jin Song Dong", "Yu Gu"], "publication_date": "2013/1/20", "conference": "International Workshop on Verification, Model Checking, and Abstract Interpretation", "pages": "515-535", "publisher": "Springer, Berlin, Heidelberg", "description": "Wireless sensor networks may be used to conduct critical tasks like fire detection or surveillance monitoring. It is thus important to guarantee the correctness of such systems by systematically analyzing their behaviors. Formal verification of wireless sensor networks is an extremely challenging task as the state space of sensor networks is huge, e.g., due to interleaving of sensors and intra-sensor interrupts. In this work, we develop a method to reduce the state space significantly so that state space exploration methods can be applied to a much smaller state space without missing a counterexample. Our method explores the nature of networked NesC programs and uses a novel two-level partial order reduction approach to reduce interleaving among sensors and intra-sensor interrupts. We define systematic rules for identifying dependence at sensor and network levels so that partial order reduction can be\u00a0\u2026", "total_citations": {"2013": 3, "2014": 4, "2015": 1, "2016": 1, "2017": 1, "2018": 0, "2019": 0, "2020": 1, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LnJLeQ70pnUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3533767.3534414", "authors": ["Yaowen Zheng", "Yuekang Li", "Cen Zhang", "Hongsong Zhu", "Yang Liu", "Limin Sun"], "publication_date": "2022/7/18", "book": "Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "417-428", "description": "Greybox fuzzing has become one of the most effective vulnerability discovery techniques. However, greybox fuzzing techniques cannot be directly applied to applications in IoT devices. The main reason is that executing these applications highly relies on specific system environments and hardware. To execute the applications in Linux-based IoT devices, most existing fuzzing techniques use full-system emulation for the purpose of maximizing compatibility. However, compared with user-mode emulation, full-system emulation suffersfrom great overhead. Therefore, some previous works, such as Firm-AFL, propose to combine full-system emulation and user-mode emulation to speed up the fuzzing process. Despite the attempts of trying to shift the application towards user-mode emulation, no existing technique supports to execute these applications fully in the user-mode emulation.   To address this issue, we\u00a0\u2026", "total_citations": {"2023": 11}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:p6f6DfXMsGMC": {"external_link": "https://link.springer.com/article/10.1007/s10664-022-10131-8", "authors": ["Kaifeng Huang", "Bihuan Chen", "Congying Xu", "Ying Wang", "Bowen Shi", "Xin Peng", "Yijian Wu", "Yang Liu"], "publication_date": "2022/7", "journal": "Empirical Software Engineering", "volume": "27", "issue": "4", "pages": "1-41", "publisher": "Springer US", "description": "Third-party libraries are a key building block in software development as they allow developers to reuse common functionalities instead of reinventing the wheel. However, third-party libraries and client projects are developed and continuously evolving in an asynchronous way. As a result, outdated third-party libraries might be commonly used in client projects, while developers are unaware of the potential risk (e.g., security bugs) in usages. Outdated third-party libraries might be updated in client projects in a delayed way, while developers are less aware of the potential risk (e.g., API incompatibilities) in updates. Developers of third-party libraries may be unaware of how their third-party libraries are used or updated in client projects. Therefore, a quantitative and holistic study on usages, updates and risks of third-party libraries in open-source projects can provide concrete evidence on these problems, and practical\u00a0\u2026", "total_citations": {"2022": 2, "2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KUekCDWCRvQC": {"external_link": "https://arxiv.org/abs/2009.09205", "authors": ["Liming Zhai", "Felix Juefei-Xu", "Qing Guo", "Xiaofei Xie", "Lei Ma", "Wei Feng", "Shengchao Qin", "Yang Liu"], "publication_date": "2020/9/19", "journal": "arXiv preprint arXiv:2009.09205", "description": "Rain often poses inevitable threats to deep neural network (DNN) based perception systems, and a comprehensive investigation of the potential risks of the rain to DNNs is of great importance. However, it is rather difficult to collect or synthesize rainy images that can represent all rain situations that would possibly occur in the real world. To this end, in this paper, we start from a new perspective and propose to combine two totally different studies, i.e., rainy image synthesis and adversarial attack. We first present an adversarial rain attack, with which we could simulate various rain situations with the guidance of deployed DNNs and reveal the potential threat factors that can be brought by rain. In particular, we design a factor-aware rain generation that synthesizes rain streaks according to the camera exposure process and models the learnable rain factors for adversarial attack. With this generator, we perform the adversarial rain attack against the image classification and object detection. To defend the DNNs from the negative rain effect, we also present a defensive deraining strategy, for which we design an adversarial rain augmentation that uses mixed adversarial rain layers to enhance deraining models for downstream DNN perception. Our large-scale evaluation on various datasets demonstrates that our synthesized rainy images with realistic appearances not only exhibit strong adversarial capability against DNNs, but also boost the deraining models for defensive purposes, building the foundation for further rain-robust perception studies.", "total_citations": {"2022": 6, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:E6rqZ6_0n1EC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3358960.3379130", "authors": ["Yutong Zhao", "Lu Xiao", "Xiao Wang", "Lei Sun", "Bihuan Chen", "Yang Liu", "Andre B Bondi"], "publication_date": "2020/4/20", "book": "Proceedings of the ACM/SPEC International Conference on Performance Engineering", "pages": "181-192", "description": "Empirical experience regarding how real-life performance issues are caused and resolved can provide valuable insights for practitioners to effectively and efficiently prevent, detect, and fix performance issues. Prior work shows that most performance issues have their roots in poor architectural decisions. This paper contributes a large scale empirical study of 192 real-life performance issues, with an emphasis on software design. First, this paper contributes a holistic view of eight common root causes and typical resolutions that recur in different projects, and surveyed existing literature, in particular, tools, that can detect and fix each type of performance issue. Second, this study is first-of-its-kind to investigate performance issues from a design perspective. In the 192 issues, 33% required design-level optimization, i.e. simultaneously revising a group of related source files for resolving the issues. We reveal four design\u00a0\u2026", "total_citations": {"2020": 1, "2021": 2, "2022": 6, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_sLlIXX7spQC": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/5439", "authors": ["Jianwen Sun", "Yan Zheng", "Jianye Hao", "Zhaopeng Meng", "Yang Liu"], "publication_date": "2020/4/3", "journal": "Proceedings of the AAAI Conference on Artificial Intelligence", "volume": "34", "issue": "01", "pages": "922-929", "description": "With the increasing popularity of electric vehicles, distributed energy generation and storage facilities in smart grid systems, an efficient Demand-Side Management (DSM) is urgent for energy savings and peak loads reduction. Traditional DSM works focusing on optimizing the energy activities for a single household can not scale up to large-scale home energy management problems. Multi-agent Deep Reinforcement Learning (MA-DRL) shows a potential way to solve the problem of scalability, where modern homes interact together to reduce energy consumers consumption while striking a balance between energy cost and peak loads reduction. However, it is difficult to solve such an environment with the non-stationarity, and existing MA-DRL approaches cannot effectively give incentives for expected group behavior. In this paper, we propose a collective MA-DRL algorithm with continuous action space to provide fine-grained control on a large scale microgrid. To mitigate the non-stationarity of the microgrid environment, a novel predictive model is proposed to measure the collective market behavior. Besides, a collective behavior entropy is introduced to reduce the high peak loads incurred by the collective behaviors of all householders in the smart grid. Empirical results show that our approach significantly outperforms the state-of-the-art methods regarding power cost reduction and daily peak loads optimization.", "total_citations": {"2020": 2, "2021": 5, "2022": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=200&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:jgTXuCzW-kcC": {"external_link": "https://scholar.google.com/scholar?cluster=11681322186917058267&hl=en&oi=scholarr", "authors": ["Sen Chen", "Guozhu Meng", "Ting Su", "Lingling Fan", "Minhui Xue", "Yinxing Xue", "Yang Liu", "Lihua Xu"], "publication_date": "2018/5/14", "journal": "arXiv preprint arXiv:1805.05236", "total_citations": {"2018": 1, "2019": 7, "2020": 2, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:iHaZ0gpiSgoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7892044/", "authors": ["Rong Wang", "Zuohua Ding", "Ning Gui", "Yang Liu"], "publication_date": "2017/6", "journal": "IEEE Transactions on Reliability", "volume": "66", "issue": "2", "pages": "425-439", "publisher": "IEEE", "description": "Concurrency bug detection is a time-consuming activity in the debugging process for concurrent programs. Existing techniques mainly focus on detecting data race bugs with pattern analysis; however, the number of interleaving patterns could be huge, only the most suspicious write-read pattern is given, and an oracle is needed, which is not available in the operational phase. This paper proposes a program-invariant-based technique to detect a class of concurrent program bugs. By unit testing of the components of a concurrent program, we obtain a set of program invariants, which can be used as an oracle to obtain \u201cbad\u201d invariants when the program is online. By using the function call graph of the components and applying a reduction technique to the invariants, we find the candidates of suspicious functions and rank them. From the interactions among components, we analyze the causes to the concurrency bugs\u00a0\u2026", "total_citations": {"2018": 2, "2019": 4, "2020": 3, "2021": 1, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:OYCXtYc4maoC": {"external_link": "https://arxiv.org/abs/1701.01535", "authors": ["Yongwang Zhao", "David San\u00e1n", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2017/1/6", "journal": "arXiv preprint arXiv:1701.01535", "description": "Separation kernels provide temporal/spatial separation and controlled information flow to their hosted applications. They are introduced to decouple the analysis of applications in partitions from the analysis of the kernel itself. More than 20 implementations of separation kernels have been developed and widely applied in critical domains, e.g., avionics/aerospace, military/defense, and medical devices. Formal methods are mandated by the security/safety certification of separation kernels and have been carried out since this concept emerged. However, this field lacks a survey to systematically study, compare, and analyze related work. On the other hand, high-assurance separation kernels by formal methods still face big challenges. In this paper, an analytical framework is first proposed to clarify the functionalities, implementations, properties and standards, and formal methods application of separation kernels. Based on the proposed analytical framework, a taxonomy is designed according to formal methods application, functionalities, and properties of separation kernels. Research works in the literature are then categorized and overviewed by the taxonomy. In accordance with the analytical framework, a comprehensive analysis and discussion of related work are presented. Finally, four challenges and their possible technical directions for future research are identified, e.g. specification bottleneck, multicore and concurrency, and automation of full formal verification.", "total_citations": {"2018": 3, "2019": 0, "2020": 2, "2021": 3, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hx4mni8B3JkC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-06410-9_46", "authors": ["Yan Liu", "Lin Gui", "Yang Liu"], "publication_date": "2014/5/12", "conference": "International Symposium on Formal Methods", "pages": "688-702", "publisher": "Springer, Cham", "description": "The proliferation of ageing population creates heavy burdens to all industrialised societies. Smart systems equipped with ambient intelligence technologies, also known as Ambient Assisted Living (AAL) Systems are in great needs to improve the elders\u2019 independent living and alleviate the pressure on caregivers/family members. In practice, these systems are expected to meet a certain reliability requirement in order to guarantee the usefulness. However, this is challenging due to the facts that AAL systems come with complex behaviours, dynamic environments and unreliable communications. In this work, we report our experience on analysing reliability of a smart healthcare system named AMUPADH for elderly people with dementia, which is deployed in a Singapore-based nursing home. Using Markov Decision Process (MDP) as the reliability model, we perform reliability analysis in three aspects. Firstly\u00a0\u2026", "total_citations": {"2014": 4, "2015": 1, "2016": 1, "2017": 0, "2018": 2, "2019": 1, "2020": 1, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:QxtoOqDH1aQC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-41202-8_22", "authors": ["Jianan Hao", "Yang Liu", "Wentong Cai", "Guangdong Bai", "Jun Sun"], "publication_date": "2013/10/29", "conference": "International Conference on Formal Engineering Methods", "pages": "329-346", "publisher": "Springer Berlin Heidelberg", "description": "Virtualization is widely used for critical services like Cloud computing. It is desirable to formally verify virtualization systems. However, the complexity of the virtualization system makes the formal analysis a difficult task, e.g., sophisticated programs to manipulate low-level technologies, paged memory management, memory mapped I/O and trusted computing. In this paper, we propose a formal framework, vTRUST, to formally describe virtualization systems with a carefully designed abstraction. vTRUST includes a library to model configurable hardware components and technologies commonly used in virtualization. The system designer can thus verify virtualization systems on critical properties (e.g., confidentiality, verifiability, isolation and PCR consistency) with respect to certain adversary models. We demonstrate the effectiveness of vTRUST by automatically verifying a real-world Cloud implementation with\u00a0\u2026", "total_citations": {"2015": 4, "2016": 1, "2017": 1, "2018": 2, "2019": 0, "2020": 0, "2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:gVv57TyPmFsC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-34281-3_28", "authors": ["Truong Khanh Nguyen", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2012", "conference": "International Conference on Formal Engineering Methods", "pages": "398-413", "description": "Stateful Timed CSP has been recently proposed to model (and verify) hierarchical real-time systems. It is an expressive modeling language which combines data structure/operations, complicated control flows (modeled using compositional process operators adopted from Timed CSP), and real-time requirements like deadline and within. It has been shown that Stateful Timed CSP is equivalent to closed timed automata with silent transitions, which implies that the timing constraints of Stateful Timed CSP can be captured using explicit tick events, through digitization. In order to tackle the state space explosion problem, we develop a BDD-based symbolic model checking approach to verify Stateful Timed CSP models. Due to the rich language features, BDD-based system encoding and verification is highly nontrivial. In this work, we show how to systematically encode Stateful Timed CSP models in BDD. Our\u00a0\u2026", "total_citations": {"2013": 4, "2014": 1, "2015": 1, "2016": 0, "2017": 3, "2018": 0, "2019": 0, "2020": 0, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KlAtU1dfN6UC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6100143/", "authors": ["Truong Khanh Nguyen", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2011/11", "conference": "The 26th International Conference on Automated Software Engineering (ASE 2011)", "pages": "633-636", "description": "BDD-based symbolic model checking is capable of verifying systems with a large number of states. In this work, we report an extensible framework to facilitate symbolic encoding and checking of hierarchical systems. Firstly, a novel library of symbolic encoding functions for compositional operators (e.g., parallel composition, sequential composition, choice operator, etc.) are developed so that users can apply symbolic model checking techniques to hierarchical systems with little knowledge of symbolic encoding techniques (like BDD or CUDD). Secondly, as the library is language-independent, we build an extensible framework with various symbolic model checking algorithms so that the library can be easily applied to encode and verify different modeling languages. Lastly, the applicability and scalability of our framework are demonstrated by applying the framework in the development of symbolic model checkers\u00a0\u2026", "total_citations": {"2011": 1, "2012": 0, "2013": 4, "2014": 2, "2015": 1, "2016": 0, "2017": 1, "2018": 1, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:VaXvl8Fpj5cC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-21437-0_32", "authors": ["Shao Zhang", "Jun Sun", "Jun Pang", "Yang Liu", "Jin Dong"], "publication_date": "2011", "journal": "FM 2011: Formal Methods", "pages": "432-447", "publisher": "Springer Berlin/Heidelberg", "description": "Model checking has established itself as an effective system analysis method, as it is capable of proving/dis-proving properties automatically. Its application to practical systems is however limited by state space explosion. Among effective state reduction techniques are symmetry reduction and partial order reduction. Global fairness often plays a vital role in designing self-stabilizing population protocols. It is known that combining fairness and symmetry reduction is nontrivial. In this work, we first show that global fairness, unlike weak/strong fairness, can be combined with symmetry reduction. We extend the PAT model checker with the technique and demonstrate its usability by verifying recently proposed population protocols. Second, we show that partial order reduction is not property-preserving with global fairness.", "total_citations": {"2011": 3, "2012": 1, "2013": 5, "2014": 1, "2015": 0, "2016": 0, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Se3iqnhoufwC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/1882291.1882350", "authors": ["Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2010/11/7", "conference": "Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering", "pages": "365-366", "publisher": "ACM", "description": "Specification and verification of real-time systems are important research topics which have practical implications. In this work, we present a self-contained toolkit to analyze real-time systems, which supports system modeling, animated simulation and automatic verification (based on advanced model checking techniques like dynamic zone abstraction). In this tool, we adopt an event-based modeling language for describing real-time systems with hierarchical structure. Experiments show that our tool has compatible performance with the state-of-the-art verifiers, and complement them with additional capabilities like LTL model checking, timed refinement checking.", "total_citations": {"2011": 1, "2012": 2, "2013": 1, "2014": 2, "2015": 0, "2016": 1, "2017": 1, "2018": 1, "2019": 0, "2020": 0, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:cqul0IHDQ48C": {"external_link": "https://arxiv.org/abs/2305.12138", "authors": ["Wei Ma", "Shangqing Liu", "Wenhan Wang", "Qiang Hu", "Ye Liu", "Cen Zhang", "Liming Nie", "Yang Liu"], "publication_date": "2023/5/20", "journal": "arXiv preprint arXiv:2305.12138", "description": "ChatGPT demonstrates immense potential to transform software engineering (SE) by exhibiting outstanding performance in tasks such as code and document generation. However, the high reliability and risk control requirements of SE make the lack of interpretability for ChatGPT a concern. To address this issue, we carried out a study evaluating ChatGPT's capabilities and limitations in SE. We broke down the abilities needed for AI models to tackle SE tasks into three categories: 1) syntax understanding, 2) static behavior understanding, and 3) dynamic behavior understanding. Our investigation focused on ChatGPT's ability to comprehend code syntax and semantic structures, including abstract syntax trees (AST), control flow graphs (CFG), and call graphs (CG). We assessed ChatGPT's performance on cross-language tasks involving C, Java, Python, and Solidity. Our findings revealed that while ChatGPT excels at understanding code syntax (AST), it struggles with comprehending code semantics, particularly dynamic semantics. We conclude that ChatGPT possesses capabilities akin to an Abstract Syntax Tree (AST) parser, demonstrating initial competencies in static code analysis. Additionally, our study highlights that ChatGPT is susceptible to hallucination when interpreting code semantic structures and fabricating non-existent facts. These results underscore the need to explore methods for verifying the correctness of ChatGPT's outputs to ensure its dependability in SE. More importantly, our study provide an iniital answer why the generated codes from LLMs are usually synatx correct but vulnerabale.", "total_citations": {"2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:wRp7bqO99tsC": {"external_link": "https://arxiv.org/abs/2301.09072", "authors": ["Shangqing Liu", "Bozhi Wu", "Xiaofei Xie", "Guozhu Meng", "Yang Liu"], "publication_date": "2023/1/22", "journal": "arXiv preprint arXiv:2301.09072", "description": "Large-scale pre-trained models such as CodeBERT, GraphCodeBERT have earned widespread attention from both academia and industry. Attributed to the superior ability in code representation, they have been further applied in multiple downstream tasks such as clone detection, code search and code translation. However, it is also observed that these state-of-the-art pre-trained models are susceptible to adversarial attacks. The performance of these pre-trained models drops significantly with simple perturbations such as renaming variable names. This weakness may be inherited by their downstream models and thereby amplified at an unprecedented scale. To this end, we propose an approach namely ContraBERT that aims to improve the robustness of pre-trained models via contrastive learning. Specifically, we design nine kinds of simple and complex data augmentation operators on the programming language (PL) and natural language (NL) data to construct different variants. Furthermore, we continue to train the existing pre-trained models by masked language modeling (MLM) and contrastive pre-training task on the original samples with their augmented variants to enhance the robustness of the model. The extensive experiments demonstrate that ContraBERT can effectively improve the robustness of the existing pre-trained models. Further study also confirms that these robustness-enhanced models provide improvements as compared to original models over four popular downstream tasks.", "total_citations": {"2023": 10}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bu5pTcyXo34C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3579642", "authors": ["Shuncheng Tang", "Zhenya Zhang", "Yi Zhang", "Jixiang Zhou", "Yan Guo", "Shuang Liu", "Shengjian Guo", "Yan-Fu Li", "Lei Ma", "Yinxing Xue", "Yang Liu"], "publication_date": "2023", "journal": "ACM Transactions on Software Engineering and Methodology", "publisher": "ACM", "description": "Automated Driving Systems (ADS) have made great achievements in recent years thanks to the efforts from both academia and industry. A typical ADS is composed of multiple modules, including sensing, perception, planning, and control, which brings together the latest advances in different domains. Despite these achievements, safety assurance of ADS is of great significance, since unsafe behavior of ADS can bring catastrophic consequences. Testing has been recognized as an important system validation approach that aims to expose unsafe system behavior; however, in the context of ADS, it is extremely challenging to devise effective testing techniques, due to the high complexity and multidisciplinarity of the systems. There has been great much literature that focuses on the testing of ADS, and a number of surveys have also emerged to summarize the technical advances. Most of the surveys focus on the\u00a0\u2026", "total_citations": {"2022": 1, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:SxVRRePJDnEC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3551349.3560422", "authors": ["Xueyang Li", "Shangqing Liu", "Ruitao Feng", "Guozhu Meng", "Xiaofei Xie", "Kai Chen", "Yang Liu"], "publication_date": "2022/10/10", "book": "Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering", "pages": "1-13", "description": "Automatically fixing compilation errors can greatly raise the productivity of software development, by guiding the novice or AI programmers to write and debug code. Recently, learning-based program repair has gained extensive attention and became the state-of-the-art in practice. But it still leaves plenty of space for improvement. In this paper, we propose an end-to-end solution\u00a0TransRepair to locate the error lines and create the correct substitute for a C program simultaneously. Superior to the counterpart, our approach takes into account the context of erroneous code and diagnostic compilation feedback. Then we devise a Transformer-based neural network to learn the ways of repair from the erroneous code as well as its context and the diagnostic feedback. To increase the effectiveness of TransRepair, we summarize 5 types and 74 fine-grained sub-types of compilations errors from two real-world program\u00a0\u2026", "total_citations": {"2022": 1, "2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ntg98fmFLVcC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9736604/", "authors": ["Sen Chen", "Lingling Fan", "Chunyang Chen", "Yang Liu"], "publication_date": "2022/3/16", "journal": "IEEE Transactions on Software Engineering", "volume": "49", "issue": "2", "pages": "667-683", "publisher": "IEEE", "description": "Before developing a new mobile app, the development team usually endeavors painstaking efforts to review many existing apps with similar purposes. The review process is crucial in the sense that it reduces market risks and provides inspirations for app development. However, manual exploration of hundreds of existing apps by different roles (e.g., product manager, UI/UX designer, developer, and tester) can be ineffective. For example, it is difficult to completely explore all the functionalities of the app from different aspects including design, implementation, and testing in a short period of time. However, existing reverse engineering tools only provide basic features such as AndroidManifest.xml and Java source files for users. Following the conception of storyboard in movie production, we propose a system, named StoryDistiller, to automatically generate the storyboards for Android apps with rich features through\u00a0\u2026", "total_citations": {"2022": 3, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JMEA1obkRKoC": {"external_link": "http://openaccess.thecvf.com/content/CVPR2022/html/Gao_Can_You_Spot_the_Chameleon_Adversarially_Camouflaging_Images_From_Co-Salient_CVPR_2022_paper.html", "authors": ["Ruijun Gao", "Qing Guo", "Felix Juefei-Xu", "Hongkai Yu", "Huazhu Fu", "Wei Feng", "Yang Liu", "Song Wang"], "publication_date": "2022", "conference": "Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition", "pages": "2150-2159", "description": "Co-salient object detection (CoSOD) has recently achieved significant progress and played a key role in retrieval-related tasks. However, it inevitably poses an entirely new safety and security issue, ie, highly personal and sensitive content can potentially be extracting by powerful CoSOD methods. In this paper, we address this problem from the perspective of adversarial attacks and identify a novel task: adversarial co-saliency attack. Specially, given an image selected from a group of images containing some common and salient objects, we aim to generate an adversarial version that can mislead CoSOD methods to predict incorrect co-salient regions. Note that, compared with general white-box adversarial attacks for classification, this new task faces two additional challenges:(1) low success rate due to the diverse appearance of images in the group;(2) low transferability across CoSOD methods due to the considerable difference between CoSOD pipelines. To address these challenges, we propose the very first black-box joint adversarial exposure and noise attack (Jadena), where we jointly and locally tune the exposure and additive perturbations of the image according to a newly designed high-feature-level contrast-sensitive loss function. Our method, without any information on the state-of-the-art CoSOD methods, leads to significant performance degradation on various co-saliency detection datasets and makes the co-salient objects undetectable. This can have strong practical benefits in properly securing the large number of personal photos currently shared on the Internet. Moreover, our method is potential to be utilized as a metric for\u00a0\u2026", "total_citations": {"2022": 3, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:wy5MF_2MSNEC": {"external_link": "http://openaccess.thecvf.com/content/WACV2022/html/Cao_Fair_and_Accurate_Age_Prediction_Using_Distribution_Aware_Data_Curation_WACV_2022_paper.html", "authors": ["Yushi Cao", "David Berend", "Palina Tolmach", "Guy Amit", "Moshe Levy", "Yang Liu", "Asaf Shabtai", "Yuval Elovici"], "publication_date": "2022", "conference": "Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision", "pages": "3551-3561", "description": "Deep learning-based facial recognition systems have experienced increased media attention due to exhibiting unfair behavior. Large enterprises, such as IBM, shut down their facial recognition and age prediction systems as a consequence. Age prediction is an especially difficult application with the issue of fairness remaining an open research problem (eg predicting age for different ethnicity equally accurate). One of the main causes of unfair behavior in age prediction methods lies in the distribution and diversity of the training data. In this work, we present two novel approaches for dataset curation and data augmentation in order to increase fairness through balanced feature curation and increase diversity through distribution aware augmentation. To achieve this, we introduce out-of-distribution detection to the facial recognition domain which is used to select the data most relevant to the deep neural network's (DNN) task when balancing the data among age, ethnicity, and gender. Our approach shows promising results. Our best-trained DNN model outperformed all academic and industrial baselines in terms of fairness by up to 4.92 times and also enhanced the DNN's ability to generalise outperforming Amazon AWS and Microsoft Azure public cloud systems by 31.88% and 10.95%, respectively.", "total_citations": {"2022": 4, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:pIp0rujYkN4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9678735/", "authors": ["Yun Tang", "Yuan Zhou", "Tianwei Zhang", "Fenghua Wu", "Yang Liu", "Gang Wang"], "publication_date": "2021/11/15", "conference": "2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1342-1346", "publisher": "IEEE", "description": "Autonomous Driving Systems (ADSs), which replace humans to drive vehicles, are complex software systems deployed in autonomous vehicles (AVs). Since the execution of ADSs highly relies on maps, it is essential to perform global map-based testing for ADSs to guarantee their correctness and AVs\u2019 safety in different situations. Existing methods focus more on specific scenarios rather than global testing throughout the map. Testing on a global map is challenging since the complex lane connections in a map can generate enormous scenarios. In this work, we propose ATLAS, an approach to ADSs\u2019 collision avoidance testing using map topology-based scenario classification. The core insight of ATLAS is to generate diverse testing scenarios by classifying junction lanes according to their topology-based interaction patterns. First, ATLAS divides the junction lanes into different classes such that an ADS can execute\u00a0\u2026", "total_citations": {"2021": 1, "2022": 4, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rPSSLjQITZsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9515999/", "authors": ["Shangwei Guo", "Tianwei Zhang", "Guowen Xu", "Han Yu", "Tao Xiang", "Yang Liu"], "publication_date": "2021/8/18", "journal": "IEEE Transactions on Circuits and Systems for Video Technology", "volume": "32", "issue": "6", "pages": "4016-4027", "publisher": "IEEE", "description": "Image classification is a fundamental artificial intelligence task that labels images into one of some predefined classes. However, training complex image classification models requires a large amount of computation resources and data in order to reach state-of-the-art performance. This demand drives the growth of distributed deep learning, where multiple agents cooperatively train global models with their individual datasets. Among such learning systems, decentralized learning is particularly attractive, as it can improve the efficiency and fault tolerance by eliminating the centralized parameter server, which could be the single point of failure or performance bottleneck. Although the agents do not need to disclose their training image samples, they exchange parameters with each other at each iteration, which can put them at the risk of data privacy leakage. Past works demonstrated the possibility of recovering\u00a0\u2026", "total_citations": {"2021": 1, "2022": 4, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1In3SbHwanAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8952279/", "authors": ["Xiaofei Xie", "Hongxu Chen", "Yi Li", "Lei Ma", "Yang Liu", "Jianjun Zhao"], "publication_date": "2019/11/11", "conference": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1162-1165", "publisher": "IEEE", "description": "Deep neural network (DNN) has been widely applied to safety-critical scenarios such as autonomous vehicle, security surveillance, and cyber-physical control systems. Yet, the incorrect behaviors of DNNs can lead to severe accidents and tremendous losses due to hidden defects. In this paper, we present DeepHunter, a general-purpose fuzzing framework for detecting defects of DNNs. DeepHunter is inspired by traditional grey-box fuzzing and aims to increase the overall test coverage by applying adaptive heuristics according to runtime feedback. Specifically, DeepHunter provides a series of seed selection strategies, metamorphic mutation strategies, and testing criteria customized to DNN testing; all these components support multiple built-in configurations which are easy to extend. We evaluated DeepHunter on two popular datasets and the results demonstrate the effectiveness of DeepHunter in achieving\u00a0\u2026", "total_citations": {"2020": 1, "2021": 3, "2022": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9kZNi-u_WhAC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3275219.3275231", "authors": ["Yu Wang", "Fengjuan Gao", "Lingyun Situ", "Lingzhang Wang", "Bihuan Chen", "Yang Liu", "Jianhua Zhao", "Xuandong Li"], "publication_date": "2018/9/16", "book": "Proceedings of the 10th Asia-Pacific Symposium on Internetware", "pages": "1-10", "description": "Dangling pointers have become an important class of software bugs that can lead to use-after-free and double-free vulnerabilities. So far, only a few approaches have been proposed to protect against dangling pointers, while most of them suffer from high overhead. In this paper, we propose a lightweight approach, named DangDone, to eliminate dangling pointers at compile time. Built upon the root cause of a dangling pointer, i.e., a pointer and its aliases are not nullified but the memory area they point to is deallocated, DangDone realizes the protection by inserting an intermediate pointer between the pointers (i.e., a pointer and its aliases) and the memory area they point to. Hence, nullifying the intermediate pointer will nullify the pointer and its aliases, which mitigates the vulnerabilities caused by dangling pointers. Experimental results have demonstrated that DangDone can protect target programs (i.e., the\u00a0\u2026", "total_citations": {"2019": 1, "2020": 4, "2021": 3, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:n5u26LFhhPsC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3106237.3106260", "authors": ["Xiaofei Xie", "Bihuan Chen", "Liang Zou", "Shang-Wei Lin", "Yang Liu", "Xiaohong Li"], "publication_date": "2017/8/21", "conference": "Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering", "pages": "84-94", "publisher": "ACM", "description": "Loop termination is an important problem for proving the correctness of a system and ensuring that the system always reacts. Existing loop termination analysis techniques mainly depend on the synthesis of ranking functions, which is often expensive. In this paper, we present a novel approach, named Loopster, which performs an efficient static analysis to decide the termination for loops based on path termination analysis and path dependency reasoning. Loopster adopts a divide-and-conquer approach: (1) we extract individual paths from a target multi-path loop and analyze the termination of each path, (2) analyze the dependencies between each two paths, and then (3) determine the overall termination of the target loop based on the relations among paths. We evaluate Loopster by applying it on the loop termination competition benchmark and three real-world projects. The results show that Loopster is effective\u00a0\u2026", "total_citations": {"2017": 1, "2018": 0, "2019": 1, "2020": 2, "2021": 3, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:uDl620nrkPcC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7517402/", "authors": ["Bihuan Chen", "Xin Peng", "Yang Liu", "Songzheng Song", "Jiahuan Zheng", "Wenyun Zhao"], "publication_date": "2016/7/20", "journal": "IEEE Transactions on Services Computing", "publisher": "IEEE", "description": "Software systems are increasingly required to autonomously adapt their architectural structures and/or behaviors to runtime environmental changes. However, existing architecture-based self-adaptation approaches mostly focus on structural adaptations within a predefined space of architectural alternatives (e.g., switching between two alternative services) while merely considering quality constraints (e.g., reliability and performance). In this paper, we propose a new architecture-based self-adaptation approach, which performs behavioral adaptations with automatically generated alternatives and supports relaxed functional constraints from the perspective of business value. Specifically, we propose a technique to automatically generate behavioral alternatives of a software system from the currently-employed architectural behavioral specification. We employ business value to comprehensively evaluate the\u00a0\u2026", "total_citations": {"2017": 1, "2018": 1, "2019": 3, "2020": 0, "2021": 1, "2022": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JZsVLox4iN8C": {"external_link": "http://www.jair.org/index.php/jair/article/view/11032", "authors": ["Ak\u0131n G\u00fcnay", "Yang Liu", "Jie Zhang"], "publication_date": "2016", "journal": "Journal of Artificial Intelligence Research", "volume": "57", "pages": "465-508", "description": "Social commitment protocols regulate interactions of agents in multiagent systems. Several methods have been developed to analyze properties of commitment protocols. However, analysis of an agent's behavior in a commitment protocol, which should take into account the agent's goals and beliefs, has received less attention. In this paper we present ProMoca framework to address this issue. Firstly, we develop an expressive formal language to model agents with respect to their commitments. Our language provides dedicated elements to define commitment protocols, and model agents in terms of their goals, behaviors, and beliefs. Furthermore, our language provides probabilistic and non-deterministic elements to model uncertainty in agents' beliefs. Secondly, we identify two essential properties of an agent with respect to a commitment protocol, namely compliance and goal satisfaction. We formalize these properties using a probabilistic variant of linear temporal logic. Thirdly, we adapt a probabilistic model checking algorithm to automatically analyze compliance and goal satisfaction properties. Finally, we present empirical results about efficiency and scalability of ProMoca.", "total_citations": {"2018": 3, "2019": 2, "2020": 3, "2021": 1, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bXvxhPDrUX0C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-41202-8_15", "authors": ["Ling Shi", "Yongxin Zhao", "Yang Liu", "Jun Sun", "Jin Song Dong", "Shengchao Qin"], "publication_date": "2013/10/29", "conference": "International Conference on Formal Engineering Methods", "pages": "215-230", "publisher": "Springer Berlin Heidelberg", "description": "CSP# (Communicating Sequential Programs) is a modelling language designed for specifying concurrent systems by integrating CSP-like compositional operators with sequential programs updating shared variables. In this paper, we define an observation-oriented denotational semantics in an open environment for the CSP# language based on the UTP framework. To deal with shared variables, we lift traditional event-based traces into hybrid traces which consist of event-state pairs for recording process behaviours. We also define refinement to check process equivalence and present a set of algebraic laws which are established based on our denotational semantics. Our approach thus provides a rigorous means for reasoning about the correctness of CSP# process behaviours. We further derive a closed semantics by focusing on special types of hybrid traces; this closed semantics can be linked with\u00a0\u2026", "total_citations": {"2014": 4, "2015": 2, "2016": 1, "2017": 0, "2018": 2, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:fbc8zXXH2BUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6462720/", "authors": ["Jiexin Zhang", "Yang Liu", "Mikhail Auguston", "Jun Sun", "Jin Song Dong"], "publication_date": "2012", "conference": "Software Engineering Conference (APSEC), 2012 19th Asia-Pacific 1", "pages": "644-653", "description": "Modeling and analyzing software architectures are useful for helping to understand the system structures and facilitate proper implementation of user requirements. Despite its importance in the software engineering practice, the lack of formal description and verification support hinders the development of quality architectural models. In this work, we develop an approach for modeling and verifying software architectures specified using Monterey Phoenix (MP) architecture description language. Firstly, we formalize the syntax and operational semantics for MP. This language is capable of modeling system and environment behaviors based on event traces, as well as supporting different architecture composition operations and views. Secondly, a dedicated model checker for MP is developed based on PAT verification framework. Finally, several case studies are presented to evaluate the usability and effectiveness of\u00a0\u2026", "total_citations": {"2012": 1, "2013": 1, "2014": 1, "2015": 0, "2016": 1, "2017": 4, "2018": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KIG7iI7jH74C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3518994", "authors": ["Sihan Xu", "Ya Gao", "Lingling Fan", "Zheli Liu", "Yang Liu", "Hua Ji"], "publication_date": "2023/2/13", "journal": "ACM Transactions on Software Engineering and Methodology", "volume": "32", "issue": "1", "pages": "1-28", "publisher": "ACM", "description": "Open-source software (OSS) licenses dictate the conditions, which should be followed to reuse, distribute, and modify software. Apart from widely-used licenses such as the MIT License, developers are also allowed to customize their own licenses (called custom license), whose descriptions are more flexible. The presence of such various licenses imposes challenges to understand licenses and their compatibility. To avoid financial and legal risks, it is essential to ensure license compatibility when integrating third-party packages or reusing code accompanied with licenses. In this work, we propose LiDetector, an effective tool that extracts and interprets OSS licenses (including both official licenses and custom licenses), and detects license incompatibility among these licenses. Specifically, LiDetector introduces a learning-based method to automatically identify meaningful license terms from an arbitrary license, and\u00a0\u2026", "total_citations": {"2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RTQXeVVbsVUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3503161.3547757", "authors": ["Liming Zhai", "Qing Guo", "Xiaofei Xie", "Lei Ma", "Yi Estelle Wang", "Yang Liu"], "publication_date": "2022/10/10", "book": "Proceedings of the 30th ACM International Conference on Multimedia", "pages": "5303-5313", "description": "Face de-identification (De-ID) removes face identity information in face images to avoid personal privacy leakage. Existing face De-ID breaks the raw identity by cutting out the face regions and recovering the corrupted regions via deep generators, which inevitably affect the generation quality and cannot control generation results according to subsequent intelligent tasks (eg., facial expression recognition). In this work, for the first attempt, we think the face De-ID from the perspective of attribute editing and propose an attribute-aware anonymization network (A3GAN) by formulating face De-ID as a joint task of semantic suppression and controllable attribute injection. Intuitively, the semantic suppression removes the identity-sensitive information in embeddings while the controllable attribute injection automatically edits the raw face along the attributes that benefit De-ID. To this end, we first design a multi-scale semantic\u00a0\u2026", "total_citations": {"2023": 9}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:r90dRYkPj7EC": {"external_link": null, "authors": ["Xiaoxuan Lou", "Shangwei Guo", "Tianwei Zhang", "Yinqian Zhang", "Yang Liu"], "publication_date": "2021/2/6", "journal": "arXiv preprint arXiv:2102.03523", "total_citations": {"2021": 4, "2022": 3, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:08Fspu5RUkwC": {"external_link": "https://scholar.google.com/scholar?cluster=16818394010772502229&hl=en&oi=scholarr", "authors": ["Haijun Wang", "Yi Li", "Shang-Wei Lin", "Lei Ma", "Yang Liu"], "publication_date": "2019", "pages": "1-4", "publisher": "IEEE", "total_citations": {"2020": 1, "2021": 1, "2022": 2, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1fM7sLBYaPUC": {"external_link": "https://link.springer.com/article/10.1007/s00165-018-0453-7", "authors": ["Ling Shi", "Yongxin Zhao", "Yang Liu", "Jun Sun", "Jin Song Dong", "Shengchao Qin"], "publication_date": "2018/8/1", "journal": "Formal Aspects of Computing", "volume": "30", "issue": "3-4", "pages": "351-380", "publisher": "Springer Verlag", "description": "CSP# (communicating sequential programs) is a modelling language designed for specifying concurrent systems by integrating CSP-like compositional operators with sequential programs updating shared variables. In this work, we define an observation-oriented denotational semantics in an open environment for the CSP# language based on the UTP framework. To deal with shared variables, we lift traditional event-based traces into mixed traces which consist of state-event pairs for recording process behaviours. To capture all possible concurrency behaviours between action/channel-based communications and global shared variables, we construct a comprehensive set of rules on merging traces from processes which run in parallel/interleaving. We also define refinement to check process equivalence and present a set of algebraic laws which are established based on our denotational semantics. We\u00a0\u2026", "total_citations": {"2018": 2, "2019": 2, "2020": 1, "2021": 1, "2022": 0, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:QbuKDewGlxwC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-06410-9_30", "authors": ["Yang Liu", "Yi Xu", "Shao Jie Zhang", "Chengzheng Sun"], "publication_date": "2014/5/12", "conference": "International Symposium on Formal Methods", "pages": "432-448", "publisher": "Springer, Cham", "description": "Operational Transformation (OT) is a technology to provide consistency maintenance and concurrency control in real-time collaborative editing systems. The correctness of OT is critical due to its foundation role in supporting a wide range of real world applications. In this work, we formally model the OT-based collaborative editing systems and establish their correctness, w.r.t. convergence and intention preservation, using a set of well-defined transformation conditions and properties. We then use model checking to verify the transformation properties for basic data and operational models. To the best of our knowledge, this is the first work to conduct a complete verification of OT including control algorithms and transformation functions. Our evaluation confirmed the correctness of existing OT systems and transformation functions with important discoveries.", "total_citations": {"2016": 1, "2017": 2, "2018": 3, "2019": 1, "2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:zdjWy_NXXwUC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-38613-8_12", "authors": ["Songzheng Song", "Lin Gui", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2013/6/10", "conference": "International Conference on Integrated Formal Methods", "pages": "162-176", "publisher": "Springer Berlin Heidelberg", "description": "Discrete Time Markov Chains (DTMCs) are widely used to model probabilistic systems in many domains, such as biology, network and communication protocols. There are two main approaches for probability reachability analysis of DTMCs, i.e., solving linear equations or using value iteration. However, both approaches have drawbacks. On one hand, solving linear equations can generate accurate results, but it can be only applied to relatively small models. On the other hand, value iteration is more scalable, but often suffers from slow convergence. Furthermore, it is unclear how to parallelize (i.e., taking advantage of multi-cores or distributed computers) these two approaches. In this work, we propose a divide-and-conquer approach to eliminate loops in DTMC and hereby speed up probabilistic reachability analysis. A DTMC is separated into several partitions according to our proposed cutting criteria\u00a0\u2026", "total_citations": {"2013": 1, "2014": 4, "2015": 3, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2ywjKiB__4kC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6606751/", "authors": ["Jin Song Dong", "Jun Sun", "Yang Liu"], "publication_date": "2013/5/18", "conference": "2013 35th International Conference on Software Engineering (ICSE)", "pages": "1481-1483", "publisher": "IEEE", "description": "Model checking has established as an effective method for automatic system analysis and verification. It is making its way into many domains and methodologies. Applying model checking techniques to a new domain (which probably has its own dedicated modeling language) is, however, far from trivial. Translation-based approach works by translating domain specific languages into input languages of a model checker. Because the model checker is not designed for the domain (or equivalently, the language), translation-based approach is often ad hoc. Ideally, it is desirable to have an optimized model checker for each application domain. Implementing one with reasonable efficiency, however, requires years of dedicated efforts. In this tutorial, we will briefly survey a variety of model checking techniques. Then we will show how to develop a model checker for a language combining real-time and probabilistic\u00a0\u2026", "total_citations": {"2014": 3, "2015": 3, "2016": 0, "2017": 0, "2018": 1, "2019": 1, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lvd772isFD0C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-34281-3_27", "authors": ["Ling Shi", "Yang Liu", "Jun Sun", "Jin Song Dong", "Gustavo Carvalho"], "publication_date": "2012/11", "conference": "The 14th International Conference on Formal Engineering Methods (ICFEM 2012)", "pages": "381-397", "description": "Communicating Sequential Processes (CSP) has been widely applied to modeling and analyzing concurrent systems. There have been considerable efforts on enhancing CSP by taking data and other system aspects into account. For instance, CSP M  combines CSP with a functional programming language whereas CSP# integrates high-level CSP-like process operators with low-level procedure code. Little work has been done to systematically compare these CSP extensions, which may have subtle and substantial differences. In this paper, we compare CSP M  and CSP# not only on their syntax, but also operational semantics as well as their supporting tools such as FDR, ProB, and PAT. We conduct extensive experiments to compare the performance of these tools in different settings. Our comparison can be used to guide users to choose the appropriate CSP\u00a0\u2026", "total_citations": {"2013": 1, "2014": 1, "2015": 2, "2016": 0, "2017": 1, "2018": 3, "2019": 0, "2020": 0, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vDZJ-YLwNdEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6299219/", "authors": ["Yi Li", "Jing Sun", "Jin Song Dong", "Yang Liu", "Jun Sun"], "publication_date": "2012/7/18", "conference": "2012 IEEE 17th International Conference on Engineering of Complex Computer Systems", "pages": "240-249", "publisher": "IEEE", "description": "Model checking provides a way to automatically verify hardware and software systems, whereas the goal of planning is to produce a sequence of actions that leads from the initial state to the desired goal state. Recently research indicates that there is a strong connection between model checking and planning problem solving. In this paper, we investigate the feasibility of using a newly developed model checking framework, Process Analysis Toolkit (PAT), to serve as a planning solution provider for upper layer applications. We first carried out a number of experiments on different planning tools in order to compare their performance and capabilities. Our experimental results showed that the performance of the PAT model checker is comparable to that of state-of-art planners for certain categories of problems. We further propose a set of translation rules for mapping from a commonly used planning notation - PDDL\u00a0\u2026", "total_citations": {"2013": 1, "2014": 1, "2015": 0, "2016": 0, "2017": 3, "2018": 0, "2019": 0, "2020": 0, "2021": 1, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:tH6gc1N1XXoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6227085/", "authors": ["Songzheng Song", "Jianye Hao", "Yang Liu", "Jun Sun", "Ho-Fung Leung", "Jin Song Dong"], "publication_date": "2012/6/2", "conference": "Proceedings of the 2012 International Conference on Software Engineering", "pages": "1337-1340", "publisher": "IEEE Press", "description": "Multi-agent systems, which are composed of autonomous agents, have been successfully employed as a modeling paradigm in many scenarios. However, it is challenging to guarantee the correctness of their behaviors due to the complex nature of the autonomous agents, especially when they have stochastic characteristics. In this work, we propose to apply probabilistic model checking to analyze multi-agent systems. A modeling language called PMA is defined to specify such kind of systems, and LTL property and logic of knowledge combined with probabilistic requirements are supported to analyze system behaviors. Initial evaluation indicates the effectiveness of our current progress; meanwhile some challenges and possible solutions are discussed as our ongoing work.", "total_citations": {"2012": 1, "2013": 2, "2014": 1, "2015": 1, "2016": 0, "2017": 1, "2018": 2, "2019": 0, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UUAsIpEgjrcC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3551349.3556956", "authors": ["Lyuye Zhang", "Chengwei Liu", "Zhengzi Xu", "Sen Chen", "Lingling Fan", "Bihuan Chen", "Yang Liu"], "publication_date": "2022/10/10", "book": "37th IEEE/ACM International Conference on Automated Software Engineering", "pages": "1-12", "description": "To enhance the compatibility in the version control of Java Third-party Libraries (TPLs), Maven adopts Semantic Versioning (SemVer) to standardize the underlying meaning of versions, but users could still confront abnormal execution and crash after upgrades even if compilation and linkage succeed. It is caused by semantic breaking (SemB) issues, such that APIs directly used by users have identical signatures but inconsistent semantics across upgrades. To strengthen compliance with SemVer rules, developers and users should be alerted of such issues. Unfortunately, it is challenging to detect them statically, because semantic changes in the internal methods of APIs are difficult to capture. Dynamic testing can confirmingly uncover some, but it is limited by inadequate coverage.  To detect SemB issues over compatible upgrades (Patch and Minor) by SemVer rules, we conduct an empirical study on 180 SemB\u00a0\u2026", "total_citations": {"2023": 8}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:FlNF6OXwGF0C": {"external_link": "https://arxiv.org/abs/2208.08100", "authors": ["Shangqing Liu", "Yanzhou Li", "Xiaofei Xie", "Yang Liu"], "publication_date": "2022/8/17", "journal": "arXiv preprint arXiv:2208.08100", "description": "GitHub commits, which record the code changes with natural language messages for description, play a critical role for software developers to comprehend the software evolution. To promote the development of the open-source software community, we collect a commit benchmark including over 7.99 million commits across 7 programming languages. Based on this benchmark, we present CommitBART, a large pre-trained encoder-decoder Transformer model for GitHub commits. The model is pre-trained by three categories (i.e., denoising objectives, cross-modal generation and contrastive learning) for six pre-training tasks to learn commit fragment representations. Furthermore, we unify a ``commit intelligence'' framework with one understanding task and three generation tasks for commits. The comprehensive experiments on these tasks demonstrate that CommitBARTsignificantly outperforms previous pre-trained works for code. Further analysis also reveals each pre-training task enhances the model performance.", "total_citations": {"2022": 2, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Ba4ZglSFa04C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3510003.3510627", "authors": ["Can Yang", "Zhengzi Xu", "Hongxu Chen", "Yang Liu", "Xiaorui Gong", "Baoxu Liu"], "publication_date": "2022/5/21", "book": "Proceedings of the 44th International Conference on Software Engineering", "pages": "1393-1405", "description": "With the rapid growth of software, using third-party libraries (TPLs) has become increasingly popular. The prosperity of the library usage has provided the software engineers with a handful of methods to facilitate and boost the program development. Unfortunately, it also poses great challenges as it becomes much more difficult to manage the large volume of libraries. Researches and studies have been proposed to detect and understand the TPLs in the software. However, most existing approaches rely on syntactic features, which are not robust when these features are changed or deliberately hidden by the adversarial parties. Moreover, these approaches typically model each of the imported libraries as a whole, therefore, cannot be applied to scenarios where the host software only partially uses the library code segments. To detect both fully and partially imported TPLs at the semantic level, we propose ModX, a\u00a0\u2026", "total_citations": {"2022": 1, "2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RpHLKABnwqoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9726806/", "authors": ["Ju Jia", "Meng Luo", "Siqi Ma", "Lina Wang", "Yang Liu"], "publication_date": "2022/3/3", "journal": "IEEE Transactions on Knowledge and Data Engineering", "volume": "35", "issue": "6", "pages": "5665-5679", "publisher": "IEEE", "description": "Image steganalysis is a technique to detect whether an image contains hidden information. Although the existing cross-domain steganalysis methods have been presented to narrow the distribution gap between different domains, it is still challenging to effectively capture the transferable steganalysis representations under the condition of severe distribution shifts. To address this issue, we propose a novel consensus-clustering-based automatic distribution matching scheme, called CADM, which can automatically and accurately match inconsistent distributions in cross-domain steganalysis scenarios. First, the original steganalysis features are clustered by the spatially constrained fuzzy   -means (SCFCM) algorithm with controllable parameters to fully perceive and mine inherent structural relationships. Subsequently, the cluster consensus knowledge is derived from the perspective of intra-domain and inter-domain\u00a0\u2026", "total_citations": {"2022": 4, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8cTaIddhMp4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9551847/", "authors": ["Xian Zhan", "Tianming Liu", "Yepang Liu", "Yang Liu", "Li Li", "Haoyu Wang", "Xiapu Luo"], "publication_date": "2021/9/28", "journal": "IEEE Transactions on Software Engineering", "volume": "48", "issue": "11", "pages": "4249-4273", "publisher": "IEEE", "description": "Third-party libraries (TPLs) have become a significant part of the Android ecosystem. Developers can employ various TPLs to facilitate their app development. Unfortunately, the popularity of TPLs also brings new security issues. For example, TPLs may carry malicious or vulnerable code, which can infect popular apps to pose threats to mobile users. Furthermore, TPL detection is essential for downstream tasks, such as vulnerabilities and malware detection. Thus, various tools have been developed to identify TPLs. However, no existing work has studied these TPL detection tools in detail, and different tools focus on different applications and techniques with performance differences. A comprehensive understanding of these tools will help us make better use of them. To this end, we conduct a comprehensive empirical study to fill the gap by evaluating and comparing all publicly available TPL detection tools based\u00a0\u2026", "total_citations": {"2022": 4, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Cv-mv52rCCkC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9376205/", "authors": ["Ruitao Feng", "Jing Qiang Lim", "Sen Chen", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2020/10/28", "conference": "2020 25th International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "63-72", "publisher": "IEEE", "description": "With the proliferation of Android malware, the demand for an effective and efficient malware detection system is on the rise. The existing device-end learning based solutions tend to extract limited syntax features, such as permissions and API calls, to meet a certain time constraint of mobile devices. However, unlike sequence-based features, syntax features lack the semantics which can represent the potential malicious behaviors and further result in more robust model with high accuracy for malware detection. In this paper, we propose an efficient Android malware detection system, named SeqMobile, which adopts behavior-based sequence features and leverages customized deep neural networks on mobile devices instead of the server end. Different from the traditional sequence-based approaches on server end, to meet the performance demand on mobile devices, SeqMobile accepts three effective performance\u00a0\u2026", "total_citations": {"2020": 1, "2021": 3, "2022": 3, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3_iODIlCio4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9197564/", "authors": ["Yixing Luo", "Yijun Yu", "Zhi Jin", "Yao Li", "Zuohua Ding", "Yuan Zhou", "Yang Liu"], "publication_date": "2020/5/31", "conference": "2020 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "1169-1175", "publisher": "IEEE", "description": "During flights, an unmanned aerial vehicle (UAV) may not be allowed to move across certain areas due to soft constraints such as privacy restrictions. Current methods on self-adaption focus mostly on motion planning such that the trajectory does not trespass predetermined restricted areas. When the environment is cluttered with uncertain obstacles, however, these motion planning algorithms are not flexible enough to find a trajectory that satisfies additional privacy-preserving requirements within a tight time budget during the flights. In this paper, we propose a privacy risk aware motion planning method through the reconfiguration of privacy-sensitive sensors. It minimises environmental impact by re-configuring the sensor during flight, while still guaranteeing the safety and energy hard constraints such as collision avoidance and timeliness. First, we formulate a model for assessing privacy risks of dynamically\u00a0\u2026", "total_citations": {"2022": 5, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:7LPp1NROPxwC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-95582-7_31", "authors": ["Fuyuan Zhang", "Yongwang Zhao", "David San\u00e1n", "Yang Liu", "Alwen Tiu", "Shang-Wei Lin", "Jun Sun"], "publication_date": "2018/7/15", "conference": "International Symposium on Formal Methods", "pages": "523-541", "publisher": "Springer, Cham", "description": "Scalable and automatic formal verification for concurrent systems is always demanding. In this paper, we propose a verification framework to support automated compositional reasoning for concurrent programs with shared variables. Our framework models concurrent programs as succinct automata and supports the verification of multiple important properties. Safety verification and simulations of succinct automata are parallel compositional, and safety properties of succinct automata are preserved under refinements. We generate succinct automata from infinite state concurrent programs in an automated manner. Furthermore, we propose the first automated approach to checking rely-guarantee based simulations between infinite state concurrent programs. We have prototyped our algorithms and applied our tool to the verification of multiple refinements.", "total_citations": {"2018": 1, "2019": 0, "2020": 3, "2021": 1, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:sWz8iI0ruhYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8410568/", "authors": ["Chenyu Wang", "Bihuan Chen", "Yang Liu", "Hongjun Wu"], "publication_date": "2018/7/12", "journal": "IEEE Transactions on Information Forensics and Security", "volume": "14", "issue": "3", "pages": "693-708", "publisher": "IEEE", "description": "Vtable reuse attack, as a novel type of code reuse attacks, is introduced to bypass most binary-level control flow integrity enforcement and vtable integrity enforcement. So far, two binary-level defenses (TypeArmor and vfGuard) are proposed to defend against vtable reuse attacks. Both techniques use semantic information as the control flow integrity enforcement policy, i.e., TypeArmor and vfGuard utilize argument register count and dispatch offset at virtual callsite as the signature to check the validity of target functions, respectively. In this paper, we propose layered object-oriented programming (LOOP), an advanced vtable reuse attack, to show that the coarse-grained control flow integrity strategies are still vulnerable to vtable reuse attacks. In LOOP, we introduce argument expansion gadgets and transfer gadgets to, respectively, bypass TypeArmor and vfGuard. We generalize the characteristics of both gadgets\u00a0\u2026", "total_citations": {"2020": 2, "2021": 3, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:fveVehIkgekC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-19249-9_22", "authors": ["Li Li", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2015/6/24", "conference": "International Symposium on Formal Methods", "pages": "342-359", "publisher": "Springer International Publishing", "description": "Quantitative timing is often explicitly used in systems for better security, e.g., the credentials for automatic website logon often has limited lifetime. Verifying timing relevant security protocols in these systems is very challenging as timing adds another dimension of complexity compared with the untimed protocol verification. In our previous work, we proposed an approach to check the correctness of the timed authentication in security protocols with fixed timing constraints. However, a more difficult question persists, i.e., given a particular protocol design, whether the protocol has security flaws in its design or it can be configured secure with proper parameter values? In this work, we answer this question by proposing a parameterized verification framework, where the quantitative parameters in the protocols can be intuitively specified as well as automatically analyzed. Given a security protocol, our verification\u00a0\u2026", "total_citations": {"2015": 2, "2016": 1, "2017": 1, "2018": 1, "2019": 1, "2020": 1, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-fj4grS0xi0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6908008/", "authors": ["Ting Wang", "Jun Sun", "Xinyu Wang", "Yang Liu", "Yuanjie Si", "Jin Song Dong", "Xiaohu Yang", "Xiaohong Li"], "publication_date": "2014/9/23", "journal": "IEEE Transactions on Software Engineering", "volume": "41", "issue": "1", "pages": "3-18", "publisher": "IEEE", "description": "Zeno runs, where infinitely many actions occur within finite time, may arise in Timed Automata models. Zeno runs are not feasible in reality and must be pruned during system verification. Thus it is necessary to check whether a run is Zeno or not so as to avoid presenting Zeno runs as counterexamples during model checking. Existing approaches on non-Zenoness checking include either introducing an additional clock in the Timed Automata models or additional accepting states in the zone graphs. In addition, there are approaches proposed for alternative timed modeling languages, which could be generalized to Timed Automata. In this work, we investigate the problem of non-Zenoness checking in the context of model checking LTL properties, not only evaluating and comparing existing approaches but also proposing a new method. To have a systematic evaluation, we develop a software toolkit to support\u00a0\u2026", "total_citations": {"2015": 1, "2016": 0, "2017": 3, "2018": 1, "2019": 0, "2020": 0, "2021": 1, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:MIg0yeAD4ggC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-39799-8_70", "authors": ["\u00c9tienne Andr\u00e9", "Yang Liu", "Jun Sun", "Jin Song Dong", "Shang-Wei Lin"], "publication_date": "2013/7/13", "conference": "International Conference on Computer Aided Verification", "pages": "984-989", "publisher": "Springer Berlin Heidelberg", "description": "Real-time systems are often hard to control, due to their complicated structures, quantitative time factors and even unknown delays. We present here PSyHCoS, a tool for analyzing parametric real-time systems specified using the hierarchical modeling language PSTCSP. PSyHCoS supports several algorithms for parameter synthesis and model checking, as well as state space reduction techniques. Its architecture favors reusability in terms of syntax, semantics, and algorithms. It comes with a friendly user interface that can be used to edit, simulate and verify PSTCSP models. Experiments show its efficiency and applicability.", "total_citations": {"2014": 2, "2015": 1, "2016": 0, "2017": 0, "2018": 2, "2019": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_kc_bZDykSQC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2070942.2071013", "authors": ["Manchun Zheng", "Jun Sun", "David San\u00e1n", "Yang Liu", "Jin Song Dong", "Yu Gu"], "publication_date": "2011/11/1", "book": "Proceedings of the 9th ACM Conference on Embedded Networked Sensor Systems", "pages": "407-408", "description": "In this demonstration, a systematically domain-specific model checker, NesC@PAT, is presented. The tool takes NesC programs as input, and automatically verifies WSNs against properties specified in the form of deadlock freeness, state reachability or linear temporal logic formulas. We will show that NesC@PAT is able to find errors caused by rarely unexpected scenarios, which are difficult to be detected by general simulating or debugging.", "total_citations": {"2013": 5, "2014": 2, "2015": 0, "2016": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:zBYNw3HCx4kC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5521573/", "authors": ["Ling Shi", "Yan Liu"], "publication_date": "2010/6/9", "conference": "2010 Fourth International Conference on Secure Software Integration and Reliability Improvement Companion", "pages": "143-149", "publisher": "IEEE", "description": "In this paper, we investigate the modeling and verification of real time systems using a case study on transmission protocol, CSMA/CD. Modeling and verification of real time systems is hot research topic which has practical implications. Such systems are considered as mission critical, as its correctness within timed constraints are of great importance. Through modeling and verifying CSMA/CD protocol using timed extension of CSP (TCSP) modeling techniques in PAT, we propose a formal model for CSMA/CD protocol and verify its critical properties like deadlock-freeness, divergence-freeness and collision detection in a given bounded delay. The integrated reduction techniques in PAT help in carrying out the verification with reasonable speed and results.", "total_citations": {"2012": 1, "2013": 1, "2014": 2, "2015": 0, "2016": 0, "2017": 2, "2018": 0, "2019": 0, "2020": 1, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:SLTdnKVCdHAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10190511/", "authors": ["Yuan Xu", "Xingshuo Han", "Gelei Deng", "Jiwei Li", "Yang Liu", "Tianwei Zhang"], "publication_date": "2023/7/3", "conference": "2023 IEEE 8th European Symposium on Security and Privacy (EuroS&P)", "pages": "1082-1100", "publisher": "IEEE", "description": "Robotic Vehicles (RVs) have gained great popularity over the past few years. Meanwhile, they are also demonstrated to be vulnerable to sensor spoofing attacks. Although a wealth of research works have presented various attacks, some key questions remain unanswered: are these existing works complete enough to cover all the sensor spoofing threats? If not, how many attacks are not explored, and how difficult is it to realize them?This paper answers the above questions by comprehensively systematizing the knowledge of sensor spoofing attacks against RVs. Our contributions are threefold. (1) We identify seven common attack paths in an RV system pipeline. We categorize and assess existing spoofing attacks from the perspectives of spoofer property, operation, victim characteristic and attack goal. Based on this systematization, we identify 4 interesting insights about spoofing attack designs. (2) We propose a\u00a0\u2026", "total_citations": {"2022": 2, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qwlfnX_dBN8C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3551349.3559524", "authors": ["Sen Chen", "Yuxin Zhang", "Lingling Fan", "Jiaming Li", "Yang Liu"], "publication_date": "2022/10/10", "book": "37th IEEE/ACM International Conference on Automated Software Engineering", "pages": "1-5", "description": "To reduce the attack surface from app source code, massive tools focus on detecting security vulnerabilities in Android apps. However, some obvious weaknesses have been highlighted in the previous studies. For example, (1) most of the available tools such as AndroBugs, MobSF, Qark, and Super use pattern-based methods to detect security vulnerabilities. Although they are effective in detecting some types of vulnerabilities, a large number of false positives would be introduced, which inevitably increases the patching overhead for app developers. (2) Similarly, static taint analysis tools such as FlowDroid and IccTA present hundreds of vulnerability candidates of data leakage instead of confirmed vulnerabilities. (3) Last but not least, a relatively complete vulnerability taxonomy is missing, which would introduce a lot of false negatives. In this paper, based on our prior knowledge in this research domain, we\u00a0\u2026", "total_citations": {"2022": 1, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:A8NefVh_EAoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3551349.3560432", "authors": ["Wei Tang", "Zhengzi Xu", "Chengwei Liu", "Jiahui Wu", "Shouguo Yang", "Yi Li", "Ping Luo", "Yang Liu"], "publication_date": "2022/10/10", "book": "Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering", "pages": "1-12", "description": "Third-party libraries (TPLs) are frequently reused in software to reduce development cost and the time to market. However, external library dependencies may introduce vulnerabilities into host applications. The issue of library dependency has received considerable critical attention. Many package managers, such as Maven, Pip, and NPM, are proposed to manage TPLs. Moreover, a significant amount of effort has been put into studying dependencies in language ecosystems like Java, Python, and JavaScript except C/C++. Due to the lack of a unified package manager for C/C++, existing research has only few understanding of TPL dependencies in the C/C++ ecosystem, especially at large scale.  Towards understanding TPL dependencies in the C/C++ ecosystem, we collect existing TPL databases, package management tools, and dependency detection tools, summarize the dependency patterns of C/C\u00a0\u2026", "total_citations": {"2022": 1, "2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rUiCm8s56TIC": {"external_link": "https://www.mdpi.com/2079-8954/10/1/19", "authors": ["Yang Liu", "Ziyu Zhou", "Yongsheng Yang", "Yan Ma"], "publication_date": "2022/2/16", "journal": "Systems", "volume": "10", "issue": "1", "pages": "19", "publisher": "MDPI", "description": "Port supply chains play a very important role in the process of economic globalization. Lack of trust of the mechanism is the main factor in restricting the development of port supply chains. Blockchains have great potential to solve the trust problem among all participants using port supply chains, which can reduce costs and improve efficiency. As the bridge between blockchains and port supply chains, smart contracts reconstruct the business process of blockchain-empowered port supply chains. In this article, we present an architecture of a consortium blockchain-empowered port supply chain system, and propose a system verification framework for the smart contracts of port supply chains with probabilistic behaviors. The smart contracts are modeled as DTMCs (Discrete-Time Markov Chains), which are automatically transformed through the BPMN (Business Process Model and Notation) description of the smart contracts. The requirements are specified by PCTL (Probabilistic Computation Tree Logic). Moreover, we implement the customs clearance process of the Shanghai Yangshan Port based on blockchain Hyperledger Fabric, and reconstruct the clearance process with smart contracts. We use it to demonstrate the effectiveness of this framework, and identify the smart contracts that do not meet the expected needs of users.", "total_citations": {"2022": 4, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RELVpAr6_7wC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3436808", "authors": ["David Sanan", "Yongwang Zhao", "Shang-Wei Lin", "Liu Yang"], "publication_date": "2021/2/9", "journal": "ACM Transactions on Programming Languages and Systems (TOPLAS)", "volume": "43", "issue": "1", "pages": "1-46", "publisher": "ACM", "description": "To make feasible and scalable the verification of large and complex concurrent systems, it is necessary the use of compositional techniques even at the highest abstraction layers. When focusing on the lowest software abstraction layers, such as the implementation or the machine code, the high level of detail of those layers makes the direct verification of properties very difficult and expensive. It is therefore essential to use techniques allowing to simplify the verification on these layers. One technique to tackle this challenge is top-down verification where by means of simulation properties verified on top layers (representing abstract specifications of a system) are propagated down to the lowest layers (that are an implementation of the top layers). There is no need to say that simulation of concurrent systems implies a greater level of complexity, and having compositional techniques to check simulation between layers\u00a0\u2026", "total_citations": {"2022": 2, "2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:SAguW2jnL4UC": {"external_link": "https://www.mdpi.com/2227-7390/9/11/1164", "authors": ["Xiao Tan", "Yuan Zhou", "Zuohua Ding", "Yang Liu"], "publication_date": "2021/1", "journal": "Mathematics", "volume": "9", "issue": "11", "pages": "1164", "publisher": "Multidisciplinary Digital Publishing Institute", "description": "Artificial neural network (ANN) inherently cannot explain in a comprehensible form how a given decision or output is generated, which limits its extensive use. Fuzzy rules are an intuitive and reasonable representation to be used for explanation, model checking, and system integration. However, different methods may extract different rules from the same ANN. Which one can deliver good quality such that the ANN can be accurately described by the extracted fuzzy rules? In this paper, we perform an empirical study on three different rule extraction methods. The first method extracts fuzzy rules from a fuzzy neural network, while the second and third ones are originally designed to extract crisp rules, which can be transformed into fuzzy rules directly, from a well-trained ANN. In detail, in the second method, the behavior of a neuron is approximated by (continuous) Boolean functions with respect to its direct input neurons, whereas in the third method, the relationship between a neuron and its direct input neurons is described by a decision tree. We evaluate the three methods on discrete, continuous, and hybrid data sets by comparing the rules generated from sample data directly. The results show that the first method cannot generate proper fuzzy rules on the three kinds of data sets, the second one can generate accurate rules on discrete data, while the third one can generate fuzzy rules for all data sets but cannot always guarantee the accuracy, especially for data sets with poor separability. Hence, our work illustrates that, given an ANN, one should carefully select a method, sometimes even needs to design new methods for explanations.", "total_citations": {"2023": 7}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UuaQgmrAG1sC": {"external_link": "https://arxiv.org/abs/2011.05218", "authors": ["Ruitao Feng", "Jing Qiang Lim", "Sen Chen", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2020/11/10", "journal": "arXiv preprint arXiv:2011.05218", "description": "With the proliferation of Android malware, the demand for an effective and efficient malware detection system is on the rise. The existing device-end learning based solutions tend to extract limited syntax features (e.g., permissions and API calls) to meet a certain time constraint of mobile devices. However, syntax features lack the semantics which can represent the potential malicious behaviors and further result in more robust model with high accuracy for malware detection. In this paper, we propose an efficient Android malware detection system, named SeqMobile, which adopts behavior-based sequence features and leverages customized deep neural networks on mobile devices instead of the server. Different from the traditional sequence-based approaches on server, to meet the performance demand, SeqMobile accepts three effective performance optimization methods to reduce the time cost. To evaluate the effectiveness and efficiency of our system, we conduct experiments from the following aspects 1) the detection accuracy of different recurrent neural networks; 2) the feature extraction performance on different mobile devices, 3) the detection accuracy and prediction time cost of different sequence lengths. The results unveil that SeqMobile can effectively detect malware with high accuracy. Moreover, our performance optimization methods have proven to improve the performance of training and prediction by at least twofold. Additionally, to discover the potential performance optimization from the SOTA TensorFlow model optimization toolkit for our approach, we also provide an evaluation on the toolkit, which can serve as a guidance for\u00a0\u2026", "total_citations": {"2021": 5, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:TLwS_1sUIYkC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8882768/", "authors": ["Bai Xue", "Yang Liu", "Lei Ma", "Xiyue Zhang", "Meng Sun", "Xiaofei Xie"], "publication_date": "2019/11/10", "conference": "2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "180-189", "publisher": "IEEE", "description": "Given a family of independent and identically distributed samples extracted from the input region and their corresponding outputs, in this paper we propose a method to under-approximate the set of safe inputs that lead the black-box system to respect a given safety specification. Our method falls within the framework of probably approximately correct (PAC) learning. The computed under-approximation comes with statistical soundness provided by the underlying PAC learning process. Such a set, which we call a PAC under-approximation, is obtained by computing a PAC model of the black-box system with respect to the specified safety specification. In our method, the PAC model is computed based on the scenario approach, which encodes as a linear program. The linear program is constructed based on the given family of input samples and their corresponding outputs. The size of the linear program does not\u00a0\u2026", "total_citations": {"2020": 4, "2021": 1, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ca9ekAySLm4C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-030-30942-8_11", "authors": ["Yongwang Zhao", "David San\u00e1n", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2019/10/7", "conference": "International Symposium on Formal Methods", "pages": "161-178", "publisher": "Springer, Cham", "description": "Reactive systems are composed of a well defined set of event handlers by which the system responds to environment stimulus. In concurrent environments, event handlers can interact with the execution of other handlers such as hardware interruptions in preemptive systems, or other instances of the reactive system in multicore architectures. The rely-guarantee technique is a suitable approach for the specification and verification of reactive systems. However, the languages in existing rely-guarantee implementations are designed only for \u201cpure programs\u201d, simulating reactive systems makes the program and rely-guarantee conditions unnecessary complicated. In this paper, we decouple the system reactions and programs using a rely-guarantee interface, and develop PiCore, a parametric rely-guarantee framework for concurrent reactive systems. PiCore has a two-level inference system to reason on events and\u00a0\u2026", "total_citations": {"2020": 1, "2021": 1, "2022": 1, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YW9K3tL-BTUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8802799/", "authors": ["Yutong Zhao", "Lu Xiao", "Wang Xiao", "Bihuan Chen", "Yang Liu"], "publication_date": "2019/5/25", "conference": "2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)", "pages": "316-317", "publisher": "IEEE", "description": "Performance is an important quality attribute of software systems. This paper categorizes and investigates 225 real-life performance issues in two separate groups: 1) localized issues (60%) that can be fixed by simple, localized code fixes and 2) architectural issues (40%) that require changes to a group of architecturally related files. This paper improves the understanding of causes and solutions to performance issues, specially for architectural performance issues. First, we summarized six typical root causes to performance problems that apply to both localized and architectural issues. In particular, 19% of architectural issues are associated with multiple causes. Second, we summarized four general types of architectural solutions to performance issues: 1) introducing new design elements; 2) changing design dependencies; 3) updating connected files; 4) updating independent files.", "total_citations": {"2020": 1, "2021": 2, "2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5buzqZzMjwkC": {"external_link": "https://scholar.google.com/scholar?cluster=338306885954570698&hl=en&oi=scholarr", "authors": ["Guangke Chen", "Sen Chen", "Lingling Fan", "Xiaoning Du", "Zhe Zhao", "Fu Song", "Yang Liu"], "publication_date": "2019", "journal": "Adversarial attacks on speaker recognition systems. CoRR abs/1911.01840", "total_citations": {"2020": 1, "2021": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ZWXmI6zqLYMC": {"external_link": "https://scholar.google.com/scholar?cluster=17802308728761923836&hl=en&oi=scholarr", "authors": ["Xiaoning Du", "Bihuan Chen", "Yuekang Li", "Jianmin Guo", "Yaqin Zhou", "Yang Liu", "Yu Jiang"], "publication_date": "2019", "pages": "60-71", "publisher": "IEEE", "total_citations": {"2020": 1, "2021": 3, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JQG40wivBEIC": {"external_link": "https://scholar.google.com/scholar?cluster=13801056641475205339&hl=en&oi=scholarr", "authors": ["Shuanglong Kan", "David San\u00e1n", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2018/4/17", "journal": "arXiv preprint arXiv:1804.07608", "total_citations": {"2018": 1, "2019": 1, "2020": 2, "2021": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9sMhslCZ7ZMC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-66107-0_19", "authors": ["Zh\u00e9 H\u00f3u", "David San\u00e1n", "Alwen Tiu", "Yang Liu"], "publication_date": "2017/9/26", "conference": "International Conference on Interactive Theorem Proving", "pages": "285-303", "publisher": "Springer, Cham", "description": "This paper presents tactics for reasoning about the assertions of separation logic. We formalise our proof methods in Isabelle/HOL based on Klein et al.\u2019s separation algebra library. Our methods can also be used in other separation logic frameworks that are instances of the separation algebra of Calcagno et al. The first method, , is based on an embedding of a labelled sequent calculus for abstract separation logic (ASL) by H\u00f3u et al. The second method, , is a refinement of separata with specialised proof search strategies to deal with separating conjunction and magic wand. We also extend our tactics to handle pointers in the heap model, giving a third method . Our tactics can automatically prove many complex formulae. Finally, we give two case studies on the application of our tactics.", "total_citations": {"2017": 1, "2018": 2, "2019": 1, "2020": 1, "2021": 0, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:i_QFVEgXGzMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8256131/", "authors": ["Xiaojun Wang", "Hesuan Hu", "Yuan Zhou", "Yang Liu"], "publication_date": "2017/8/20", "conference": "2017 13th IEEE Conference on Automation Science and Engineering (CASE)", "pages": "370-375", "publisher": "IEEE", "description": "The problem of automated manufacturing systems (AMSs) deadlock has received considerable attention recently. Most researchers have assumed that allocated resources do never fail. However, this is not the case in practice since some resources may fail unexpectedly. In our previous work, we just presumed unreliable resources and developed supervisory algorithms to ensure robust deadlock-free operation in the event of resource failure. In this paper, the failure includes not only failed resources but also failed products. For a product, it can have a temporary storage in a buffer when the product does not necessarily need to progress or an unreliable resource is not expectably well behaved. We propose a deadlock avoidance algorithm and a robust supervisory algorithm in the paradigm of buffer-supported system of sequential systems with shared resources and recovery (B-S 4 R 2 ). The proposed algorithms\u00a0\u2026", "total_citations": {"2018": 1, "2019": 3, "2020": 2, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EwQYaEtUpKwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7139732/", "authors": ["HeSuan Hu", "Yan Yang", "Yang Liu", "Chen Chen"], "publication_date": "2015/5/26", "conference": "2015 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "3826-3832", "publisher": "IEEE", "description": "Colored Petri nets are widely used to model Automated Manufacturing Systems thanks to their compactness to describe complex networked systems. Compared to general Petri nets, they allow many folding techniques so as to condense the system model. With them, many control synthesis problems are reduced to the solution of matrix operations. Supervisory control techniques can be realized in a computationally efficient way. In this work, these matrices are further distinguished by independent and dependent ones. A method is proposed to identify these independent ones while removing those dependent ones. As a result, a supervisor can be significantly simplified. In practice, this implies the significant reduction of cost, increase of reliability, and improvement of performance. Examples are presented to illustrate the effectiveness and efficiency of this method.", "total_citations": {"2018": 5, "2019": 0, "2020": 0, "2021": 0, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:D52hNgOu9GcC": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/9437", "authors": ["Ak\u0131n G\u00fcnay", "Song Songzheng", "Yang Liu", "Jie Zhang"], "publication_date": "2015/2/18", "conference": "Twenty-Ninth AAAI Conference on Artificial Intelligence", "description": "Commitment protocols provide an effective formalism for the regulation of agent interaction. Although existing work mainly focus on the design-time development of static commitment protocols, recent studies propose methods to create them dynamically at run-time with respect to the goals of the agents. These methods require agents to verify new commitment protocols taking their goals, and beliefs about the other agents\u2019 behavior into account. Accordingly, in this paper, we first propose a probabilistic model to formally capture commitment protocols according to agents\u2019 beliefs. Secondly, we identify a set of important properties for the verification of a new commitment protocol from an agent\u2019s perspective and formalize these properties in our model. Thirdly, we develop probabilistic model checking algorithms with advanced reduction for efficient verification of these properties. Finally, we implement these algorithms as a tool and evaluate the proposed properties over different commitment protocols.", "total_citations": {"2015": 1, "2016": 2, "2017": 1, "2018": 1, "2019": 0, "2020": 1, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:TniZHWc1JwoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6923113/", "authors": ["Li Li", "Jun Pang", "Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2014/8/4", "conference": "2014 19th International Conference on Engineering of Complex Computer Systems", "pages": "11-18", "publisher": "IEEE", "description": "In this paper, we describe our analysis of a recently proposed electric vehicle charing protocol. The protocol builds on complicated cryptographic primitives such as commitment, zero-knowledge proofs, BBS+ signature and etc. Moreover, interesting properties such as secrecy, authentication, anonymity, and location privacy are claimed on this protocol. It thus presents a challenge for formal verification, as existing tools for security protocol analysis lack support for all the required features. In our analysis, we employ and combine the strength of two state-of-the-art symbolic verifiers, Tamarin and Prove if, to check all important properties of the protocol.", "total_citations": {"2015": 2, "2016": 0, "2017": 1, "2018": 0, "2019": 1, "2020": 1, "2021": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lu5AzqVF4qYC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-02444-8_38", "authors": ["Kun Ji", "Yang Liu", "Shang-Wei Lin", "Jun Sun", "Jin Song Dong", "Truong Khanh Nguyen"], "publication_date": "2013", "conference": "Automated Technology for Verification and Analysis: 11th International Symposium, ATVA 2013, Hanoi, Vietnam, October 15-18, 2013. Proceedings", "pages": "474-477", "publisher": "Springer International Publishing", "description": "This paper presents CELL, a comprehensive and extensible framework for compositional verification of concurrent and real-time systems based on commonly used semantic models. For each semantic model, CELL offers three libraries, i.e., compositional verification paradigms, learning algorithms and model checking methods to support various state-of-the-art compositional verification approaches. With well-defined APIs, the framework could be applied to build customized model checkers. In addition, each library could be used independently for verification and program analysis purposes. We have built three model checkers with CELL. The experimental results show that the performance of these model checkers can offer similar or often better performance compared to the state-of-the-art verification tools.", "total_citations": {"2013": 2, "2014": 1, "2015": 0, "2016": 0, "2017": 2, "2018": 0, "2019": 0, "2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:AYInfyleIOsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6479815/", "authors": ["Yi Li", "Jing Sun", "Jin Song Dong", "Yang Liu", "Jun Sun"], "publication_date": "2012/10/1", "conference": "2012 35th Annual IEEE Software Engineering Workshop", "pages": "177-186", "publisher": "IEEE", "description": "Model checking provides a way to automatically verify hardware and software systems, whereas the goal of planning is to produce a sequence of actions that leads from the initial state to the desired goal states. Recently research indicates that there is a strong connection between model checking and planning problem solving. In this paper, we investigate the feasibility of using different model checking tools and techniques for solving classic planning problems. To achieve this, we carried out a number of experiments on different planning domains in order to compare the performance and capabilities of various tools. Our experimental results indicate that the performance of some model checkers is comparable to that of state-of-theart planners for certain categories of problems. In particular, a new planning module with specifically designed searching algorithm is implemented on top of the established model\u00a0\u2026", "total_citations": {"2017": 1, "2018": 2, "2019": 1, "2020": 2, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:tuHXwOkdijsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5502859/", "authors": ["Yuzhang Feng", "Yang Liu", "Yuan-Fang Li", "Daqing Zhang"], "publication_date": "2010/6/9", "conference": "2010 Fourth International Conference on Secure Software Integration and Reliability Improvement", "pages": "33-42", "publisher": "IEEE", "description": "The current Semantic Web ontology language has been designed to be both expressive for specifying complex concepts and decidable for automated reasoning. In recent years, the Semantic Web Rules Language has been proposed to add more expressiveness to the family of ontology languages. However the inclusion of rules has created new challenges of not only verifying the consistency of an ontology, but also checking for anomalies of a set of rules by itself. Currently automated tool support for reasoning about ontologies with rules is relatively limited compared to those for standard ontology reasoning. This paper addresses these challenges by defining notions of rule anomalies and proposing a method of discovering such anomalies by using the constraint logic programming technique and the state-of-the-art Semantic Web reasoners.", "total_citations": {"2010": 1, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 2, "2016": 1, "2017": 1, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:LkGwnXOMwfcC": {"external_link": "https://www.researchgate.net/profile/Randa-Al-Dallah/publication/221390983_A_Payload_Optimization_Technique_for_Multimedia_Visual_Cryptographye/links/58286c8c08ae950ace6fa6dc/A-Payload-Optimization-Technique-for-Multimedia-Visual-Cryptographye.pdf#page=431", "authors": ["Shao Jie Zhang", "Yang Liu", "Jun Sun", "Jin Song Dong", "W Chen", "YA Liu"], "publication_date": "2009", "journal": "SEKE\u201909", "pages": "406-411", "description": "Concurrent algorithms are notoriously difficult to design correctly, and high performance algorithms that make little or no use of locks even more so. In this paper, we describe a formal verification of a recent concurrent data structure Scalable NonZero Indicators. The algorithm supports incrementing, decrementing, and querying the shared counter in an efficient and linearizable way without blocking. The algorithm is highly non-trivial and it is challenging to prove the correctness. We have proved that the algorithm satisfies linearizability, by showing a trace refinement relation from the concrete implementation to its abstract specification. These models are specified in CSP and verified automatically using the model checking toolkit PAT.", "total_citations": {"2009": 2, "2010": 2, "2011": 0, "2012": 0, "2013": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:VoowTMkWmDwC": {"external_link": "https://arxiv.org/abs/2307.08715", "authors": ["Gelei Deng", "Yi Liu", "Yuekang Li", "Kailong Wang", "Ying Zhang", "Zefeng Li", "Haoyu Wang", "Tianwei Zhang", "Yang Liu"], "publication_date": "2023/7/16", "journal": "arXiv preprint arXiv:2307.08715", "description": "Large Language Models (LLMs) have revolutionized Artificial Intelligence (AI) services due to their exceptional proficiency in understanding and generating human-like text. LLM chatbots, in particular, have seen widespread adoption, transforming human-machine interactions. However, these LLM chatbots are susceptible to \"jailbreak\" attacks, where malicious users manipulate prompts to elicit inappropriate or sensitive responses, contravening service policies. Despite existing attempts to mitigate such threats, our research reveals a substantial gap in our understanding of these vulnerabilities, largely due to the undisclosed defensive measures implemented by LLM service providers. In this paper, we present Jailbreaker, a comprehensive framework that offers an in-depth understanding of jailbreak attacks and countermeasures. Our work makes a dual contribution. First, we propose an innovative methodology inspired by time-based SQL injection techniques to reverse-engineer the defensive strategies of prominent LLM chatbots, such as ChatGPT, Bard, and Bing Chat. This time-sensitive approach uncovers intricate details about these services' defenses, facilitating a proof-of-concept attack that successfully bypasses their mechanisms. Second, we introduce an automatic generation method for jailbreak prompts. Leveraging a fine-tuned LLM, we validate the potential of automated jailbreak generation across various commercial LLM chatbots. Our method achieves a promising average success rate of 21.58%, significantly outperforming the effectiveness of existing techniques. We have responsibly disclosed our findings to the concerned service\u00a0\u2026", "total_citations": {"2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yIh087D13zsC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3579821", "authors": ["\u00c9tienne Andr\u00e9", "Shuang Liu", "Yang Liu", "Christine Choppy", "Jun Sun", "Jin Song Dong"], "publication_date": "2023", "source": "ACM Computing Surveys", "publisher": "ACM", "description": "The Unified Modeling Language (UML) is a standard for modeling dynamic systems. UML behavioral state machines are used for modeling the dynamic behavior of object-oriented designs. The UML specification, maintained by the Object Management Group (OMG), is documented in natural language (in contrast to formal language). The inherent ambiguity of natural languages may introduce inconsistencies in the resulting state machine model. Formalizing UML state machine specification aims at solving the ambiguity problem and at providing a uniform view to software designers and developers. Such a formalization also aims at providing a foundation for automatic verification of UML state machine models, which can help to find software design vulnerabilities at an early stage and reduce the development cost. We provide here a comprehensive survey of existing work from\u00a01997 to\u00a02021 related to formalizing\u00a0\u2026", "total_citations": {"2023": 6}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:c3oc_9pK2TEC": {"external_link": "https://link.springer.com/article/10.1007/s10817-020-09579-4", "authors": ["Zh\u00e9 H\u00f3u", "David Sanan", "Alwen Tiu", "Yang Liu", "Koh Chuen Hoa", "Jin Song Dong"], "publication_date": "2021/4", "journal": "Journal of Automated Reasoning", "volume": "65", "issue": "4", "pages": "569-598", "publisher": "Springer Netherlands", "description": "The SPARC instruction set architecture (ISA) has been used in various processors in workstations, embedded systems, and in mission-critical industries such as aviation and space engineering. Hence, it is important to provide formal frameworks that facilitate the verification of hardware and software that run on or interface with these processors. In this work, we give the first formal model for multi-core SPARC ISA and Total Store Ordering (TSO) memory model in Isabelle/HOL. We present two levels of modelling for the ISA: The low-level ISA model, which is executable, covers many features specific to SPARC processors, such as delayed-write for control registers, windowed general registers, and more complex memory access. We have tested our model extensively against a LEON3 simulation board, the test covers both single-step executions and sequential execution of programs. We also prove some\u00a0\u2026", "total_citations": {"2021": 1, "2022": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:7fE6T6CK6bcC": {"external_link": "https://arxiv.org/abs/2009.09213", "authors": ["Yihao Huang", "Felix Juefei-Xu", "Qing Guo", "Lei Ma", "Xiaofei Xie", "Weikai Miao", "Yang Liu", "Geguang Pu"], "publication_date": "2021", "journal": "arXiv preprint arXiv:2009.09213", "description": "The current high-fidelity generation and high-precision detection of DeepFake images are at an arms race. We believe that producing DeepFakes that are highly realistic and ``detection evasive'' can serve the ultimate goal of improving future generation DeepFake detection capabilities. In this paper, we propose a simple yet powerful pipeline to reduce the artifact patterns of fake images without hurting image quality by performing implicit spatial-domain notch filtering. We first demonstrate that frequency-domain notch filtering, although famously shown to be effective in removing periodic noise in the spatial domain, is infeasible for our task at hand due to manual designs required for the notch filters. We, therefore, resort to a learning-based approach to reproduce the notch filtering effects, but solely in the spatial domain. We adopt a combination of adding overwhelming spatial noise for breaking the periodic noise pattern and deep image filtering to reconstruct the noise-free fake images, and we name our method DeepNotch. Deep image filtering provides a specialized filter for each pixel in the noisy image, producing filtered images with high fidelity compared to their DeepFake counterparts. Moreover, we also use the semantic information of the image to generate an adversarial guidance map to add noise intelligently. Our large-scale evaluation on 3 representative state-of-the-art DeepFake detection methods (tested on 16 types of DeepFakes) has demonstrated that our technique significantly reduces the accuracy of these 3 fake image detection methods, 36.79% on average and up to 97.02% in the best case.", "total_citations": {"2022": 5, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CmeMDzcFUg4C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3324884.3416552", "authors": ["Lili Quan", "Qianyu Guo", "Hongxu Chen", "Xiaofei Xie", "Xiaohong Li", "Yang Liu", "Jing Hu"], "publication_date": "2020/9/21", "conference": "2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "524-535", "publisher": "IEEE", "description": "The security assurance of SSL/TLS critically depends on the correct validation of X.509 certificates. Therefore, it is important to check whether a certificate is correctly validated by the SSL/TLS implementations. Although differential testing has been proven to be effective in finding semantic bugs, it still suffers from the following limitations: (1) The syntax of test cases cannot be correctly guaranteed. (2) Current test cases are not diverse enough to cover more implementation behaviours. This paper tackles these problems by introducing SADT, a novel syntax-aware differential testing framework for evaluating the certificate validation process in SSL/TLS implementations. We first propose a tree-based mutation strategy to ensure that the generated certificates are syntactically correct, and then diversify the certificates by sharing interesting test cases among all target SSL/TLS implementations. Such generated certificates\u00a0\u2026", "total_citations": {"2021": 1, "2022": 2, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qxGx9raSUrEC": {"external_link": "https://arxiv.org/abs/2003.09561", "authors": ["Sijia Geng", "Yuekang Li", "Yunlan Du", "Jun Xu", "Yang Liu", "Bing Mao"], "publication_date": "2020/3/21", "journal": "arXiv preprint arXiv:2003.09561", "description": "Recently, various techniques (e.g., fuzzing) have been developed for vulnerability detection. To evaluate those techniques, the community has been developing benchmarks of artificial vulnerabilities because of a shortage of ground-truth. However, people have concerns that such vulnerabilities cannot represent reality and may lead to unreliable and misleading results. Unfortunately, there lacks research on handling such concerns. In this work, to understand how close these benchmarks mirror reality, we perform an empirical study on three artificial vulnerability benchmarks - LAVA-M, Rode0day and CGC (2669 bugs) and various real-world memory-corruption vulnerabilities (80 CVEs). Furthermore, we propose a model to depict the properties of memory-corruption vulnerabilities. Following this model, we conduct intensive experiments and data analyses. Our analytic results reveal that while artificial benchmarks attempt to approach the real world, they still significantly differ from reality. Based on the findings, we propose a set of strategies to improve the quality of artificial benchmarks.", "total_citations": {"2020": 1, "2021": 0, "2022": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_9cyEV96HHsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8728907/", "authors": ["Ruitao Feng", "Guozhu Meng", "Xiaofei Xie", "Ting Su", "Yang Liu", "Shang-Wei Lin"], "publication_date": "2019/4/22", "conference": "2019 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)", "pages": "285-290", "publisher": "IEEE", "description": "Performance issues of Android apps can tangibly degrade user experience. However, it is challenging for Android developers, especially a novice to develop high-performance apps. It is primarily attributed to the lack of consolidated and abundant programmatic guides for performance optimization. To address this challenge, we propose a data-based approach to obtain performance optimization practices from historical code changes. We first elicit performance-aware Android APIs of which invocations could affect app performance to a large extent, identify historical code changes that produce impact on app performance, and further determine whether they are optimization practices. We have implemented this approach with a tool \\tool and evaluated its effectiveness in 2 open source well-maintained projects. The experimental results found 83 changes relevant to performance optimization. Last, we summarize and\u00a0\u2026", "total_citations": {"2021": 4, "2022": 0, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:xO3Y8ErbwlsC": {"external_link": "https://arxiv.org/abs/1811.05187", "authors": ["Qianyu Guo", "Xiaofei Xie", "Lei Ma", "Qiang Hu", "Ruitao Feng", "Li Li", "Yang Liu", "Jianjun Zhao", "Xiaohong Li"], "publication_date": "2018/11/13", "journal": "arXiv preprint arXiv:1811.05187", "description": "Deep learning (DL) has recently achieved tremendous success in a variety of cutting-edge applications, e.g., image recognition, speech and natural language processing, and autonomous driving. Besides the available big data and hardware evolution, DL frameworks and platforms play a key role to catalyze the research, development, and deployment of DL intelligent solutions. However, the difference in computation paradigm, architecture design and implementation of existing DL frameworks and platforms brings challenges for DL software development, deployment, maintenance, and migration. Up to the present, it still lacks a comprehensive study on how current diverse DL frameworks and platforms influence the DL software development process. In this paper, we initiate the first step towards the investigation on how existing state-of-the-art DL frameworks (i.e., TensorFlow, Theano, and Torch) and platforms (i.e., server/desktop, web, and mobile) support the DL software development activities. We perform an in-depth and comparative evaluation on metrics such as learning accuracy, DL model size, robustness, and performance, on state-of-the-art DL frameworks across platforms using two popular datasets MNIST and CIFAR-10. Our study reveals that existing DL frameworks still suffer from compatibility issues, which becomes even more severe when it comes to different platforms. We pinpoint the current challenges and opportunities towards developing high quality and compatible DL systems. To ignite further investigation along this direction to address urgent industrial demands of intelligent solutions, we make all of our assembled feasible\u00a0\u2026", "total_citations": {"2020": 3, "2021": 2, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:co-xmOEWlm8C": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/10125", "authors": ["Dongxia Wang", "Tim Muller", "Jie Zhang", "Yang Liu"], "publication_date": "2016/3/3", "conference": "Thirtieth AAAI Conference on Artificial Intelligence", "description": "In trust systems, unfair rating attacks\u2014where advisors provide ratings dishonestly\u2014influence the accuracy of trust evaluation. A secure trust system should function properly under all possible unfair rating attacks; including dynamic attacks. In the literature, camouflage attacks are the most studied dynamic attacks. But an open question is whether more harmful dynamic attacks exist. We propose random processes to model and measure dynamic attacks. The harm of an attack is influenced by a user's ability to learn from the past. We consider three types of users: blind users, aware users, and general users. We found for all the three types, camouflage attacks are far from the most harmful. We identified the most harmful attacks, under which we found the ratings may still be useful to users.", "total_citations": {"2015": 1, "2016": 2, "2017": 0, "2018": 0, "2019": 1, "2020": 0, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:zIozKTkozWIC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7109180/", "authors": ["Songzheng Song", "Jianye Hao", "Yang Liu", "Jun Sun", "Ho-Fung Leung", "Jie Zhang"], "publication_date": "2015/5/15", "journal": "IEEE Transactions on Human-Machine Systems", "volume": "46", "issue": "2", "pages": "197-208", "publisher": "IEEE", "description": "Automated negotiations play an important role in various domains modeled as multiagent systems, where agents represent human users and adopt different negotiation strategies. Generally, given a multiagent system, a negotiation strategy should be robust in the sense that most agents in the system have the incentive to choose it rather than other strategies. Empirical game-theoretic (EGT) analysis is a game-theoretic analysis approach to investigate the robustness of different strategies based on a set of empirical results. In this study, we propose that model-checking techniques can be adopted to improve EGT analysis for negotiation strategies. The dynamics of strategy profiles can be modeled as a labeled transition system using the counter abstraction technique. We define single-agent best deviation to represent the strategy deviations during negotiation, which focuses on each agent's best deviation benefit\u00a0\u2026", "total_citations": {"2015": 1, "2016": 1, "2017": 3, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:fTLh7q_iUBEC": {"external_link": "https://ifaamas.org/Proceedings/aamas2015/aamas/p563.pdf", "authors": ["Tim Muller", "Yang Liu", "Jie Zhang"], "publication_date": "2015/5/4", "conference": "Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems", "pages": "563-572", "publisher": "International Foundation for Autonomous Agents and Multiagent Systems", "description": "Recommendations are widely used in recommender systems, reputation systems, and trust-based security systems. Some existing reputation systems and trust-based security systems use the flawed notion of endogenous discounting. Endogenous discounting is the idea that claims deviating from prior expectations should be ignored or discounted, which introduces confirmation bias. To show the fallacy of endogenous discounting, we construct a semantic meta-model that captures the key notions surrounding recommendations. We prove that any model covered by the meta-model can be formulated in a divide-and-conquer fashion. We show how divideand-conquer clashes with endogenous discounting. Lastly, we discuss the implications on existing work that applies endogenous discounting, and provide suggestions for future work.", "total_citations": {"2017": 1, "2018": 1, "2019": 2, "2020": 1, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:NKe3Q23MlFgC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-11737-9_20", "authors": ["Li Li", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2014/11/3", "conference": "International Conference on Formal Engineering Methods", "pages": "300-315", "publisher": "Springer, Cham", "description": "Quantitative timing is often relevant to the security of systems, like web applications, cyber-physical systems, etc. Verifying timed security protocols is however challenging as both arbitrary attacking behaviors and quantitative timing may lead to undecidability. In this work, we develop a service framework to support intuitive modeling of the timed protocol, as well as automatic verification with an unbounded number of sessions. The partial soundness and completeness of our verification algorithms are formally defined and proved. We implement our method into a tool called TAuth and the experiment results show that our approach is efficient and effective in both finding security flaws and giving proofs.", "total_citations": {"2015": 4, "2016": 1, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CYCz2uKfkRAC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2534169.2491693", "authors": ["Yang Liu", "Jiahe Liu", "Ting Liu", "Xiaohong Guan", "Yanan Sun"], "publication_date": "2013/8/12", "conference": "ACM SIGCOMM Computer Communication Review", "volume": "43", "issue": "4", "pages": "479-480", "publisher": "ACM", "description": "Numerous smart devices are deployed in smart grid for state measurement, decision-making and remote control. The security issues of smart devices attract more and more attention. In our work, the communication protocol, storage mechanism and authentication of smart devices are analyzed and a toolbox is developed to evaluate the security risks of smart devices. In this demo, our toolbox is applied to scan 3 smart meters/power monitor systems. A potential risk list is generated and the vulnerabilities are further verified.", "total_citations": {"2014": 2, "2015": 1, "2016": 1, "2017": 0, "2018": 1, "2019": 0, "2020": 0, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:nVrZBo8bIpAC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-34281-3_17", "authors": ["Shang-Wei Lin", "Yang Liu", "Pao-Ann Hsiung", "Jun Sun", "Jin Song Dong"], "publication_date": "2012", "conference": "International Conference on Formal Engineering Methods", "pages": "214-229", "description": "With the demand for new and complicated features, embedded systems are becoming more and more difficult to design and verify. Even if the design of a system is verified, how to guarantee the consistency between the design and its implementation remains a big issue. As a solution, we propose a framework that can help a system designer to model his or her embedded system using a high-level modeling language, verify the design of the system, and automatically generate executable software codes whose behavior semantics are consistent with that of the high-level model. We use two case studies to demonstrate the effectiveness of our framework.", "total_citations": {"2013": 1, "2014": 2, "2015": 2, "2016": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:QIV2ME_5wuYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5502856/", "authors": ["Shao Jie Zhang", "Yang Liu"], "publication_date": "2010/6/9", "conference": "2010 Fourth International Conference on Secure Software Integration and Reliability Improvement", "pages": "43-52", "publisher": "IEEE", "description": "Concurrent objects are notoriously difficult to design correctly, and high performance algorithms that make little or no use of locks even more so. In this paper, we present a formal verification of a lazy concurrent list-based set using model checking techniques. The algorithm supports insertion, removal, and membership testing of a list entry under optimistic locking scheme. The algorithm has nonfixed linearization points and is highly non-trivial. We have proved that the algorithm satisfies linearizability, by showing a trace refinement relation from the concrete implementation to its abstract specification. These models are specified in CSP# and verified automatically using our home grown model checker PAT.", "total_citations": {"2012": 1, "2013": 2, "2014": 1, "2015": 0, "2016": 1, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9xDRhSErrBIC": {"external_link": "https://scholar.google.com/scholar?cluster=11945160352093755005&hl=en&oi=scholarr", "authors": ["JY Hao", "SZ Song", "Y Liu", "J Sun", "JS Dong", "HF Leung"], "total_citations": {"2012": 1, "2013": 1, "2014": 1, "2015": 0, "2016": 0, "2017": 0, "2018": 1, "2019": 1, "2020": 0, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rMJ1_5uPwdAC": {"external_link": "https://arxiv.org/abs/2306.08350", "authors": ["Yanzhou Li", "Shangqing Liu", "Kangjie Chen", "Xiaofei Xie", "Tianwei Zhang", "Yang Liu"], "publication_date": "2023/6/14", "journal": "arXiv preprint arXiv:2306.08350", "description": "Backdoor attacks for neural code models have gained considerable attention due to the advancement of code intelligence. However, most existing works insert triggers into task-specific data for code-related downstream tasks, thereby limiting the scope of attacks. Moreover, the majority of attacks for pre-trained models are designed for understanding tasks. In this paper, we propose task-agnostic backdoor attacks for code pre-trained models. Our backdoored model is pre-trained with two learning strategies (i.e., Poisoned Seq2Seq learning and token representation learning) to support the multi-target attack of downstream code understanding and generation tasks. During the deployment phase, the implanted backdoors in the victim models can be activated by the designed triggers to achieve the targeted attack. We evaluate our approach on two code understanding tasks and three code generation tasks over seven datasets. Extensive experiments demonstrate that our approach can effectively and stealthily attack code-related downstream tasks.", "total_citations": {"2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:z_Yq-I-xR0AC": {"external_link": "https://arxiv.org/abs/2301.08434", "authors": ["Lyuye Zhang", "Chengwei Liu", "Zhengzi Xu", "Sen Chen", "Lingling Fan", "Lida Zhao", "Jiahui Wu", "Yang Liu"], "publication_date": "2023/1/20", "journal": "arXiv preprint arXiv:2301.08434", "description": "With the increasing disclosure of vulnerabilities in open-source software, software composition analysis (SCA) has been widely applied to reveal third-party libraries and the associated vulnerabilities in software projects. Beyond the revelation, SCA tools adopt various remediation strategies to fix vulnerabilities, the quality of which varies substantially. However, ineffective remediation could induce side effects, such as compilation failures, which impede acceptance by users. According to our studies, existing SCA tools could not correctly handle the concerns of users regarding the compatibility of remediated projects. To this end, we propose Compatible Remediation of Third-party libraries (CORAL) for Maven projects to fix vulnerabilities without breaking the projects. The evaluation proved that CORAL not only fixed 87.56% of vulnerabilities which outperformed other tools (best 75.32%) and achieved a 98.67% successful compilation rate and a 92.96% successful unit test rate. Furthermore, we found that 78.45% of vulnerabilities in popular Maven projects could be fixed without breaking the compilation, and the rest of the vulnerabilities (21.55%) could either be fixed by upgrades that break the compilations or even be impossible to fix by upgrading.", "total_citations": {"2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:f36TrmluGJsC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3548606.3560681", "authors": ["Gelei Deng", "Guowen Xu", "Yuan Zhou", "Tianwei Zhang", "Yang Liu"], "publication_date": "2022/11/7", "book": "Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security", "pages": "739-753", "description": "Robot Operating System (ROS) has been the mainstream platform for research and development of robotic applications. This platform is well-known for lacking security features and efficiency for distributed robotic computations. To address these issues, ROS2 is recently developed by utilizing the Data Distribution Service (DDS) to provide security support. Integrated with DDS, ROS2 is expected to establish the basis for trustworthy robotic ecosystems.   In this paper, we systematically study the security of the current ROS2 implementation from three perspectives. By abstracting the key functions from the ROS2 native implementation, we first formally describe the ROS2 system communication workflow and model it using a concurrent modeling language. Second, we verify the model with some key security properties through a model checker, and successfully identify four security vulnerabilities in ROS2's native\u00a0\u2026", "total_citations": {"2023": 5}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3I1Fh14WnZcC": {"external_link": "https://arxiv.org/abs/2201.06070", "authors": ["Liangru Sun", "Felix Juefei-Xu", "Yihao Huang", "Qing Guo", "Jiayi Zhu", "Jincao Feng", "Yang Liu", "Geguang Pu"], "publication_date": "2022/1/16", "journal": "arXiv preprint arXiv:2201.06070", "description": "Most researchers have tried to enhance the robustness of deep neural networks (DNNs) by revealing and repairing the vulnerability of DNNs with specialized adversarial examples. Parts of the attack examples have imperceptible perturbations restricted by Lp norm. However, due to their high-frequency property, the adversarial examples usually have poor transferability and can be defensed by denoising methods. To avoid the defects, some works make the perturbations unrestricted to gain better robustness and transferability. However, these examples usually look unnatural and alert the guards. To generate unrestricted adversarial examples with high image quality and good transferability, in this paper, we propose Adversarial Lightness Attack (ALA), a white-box unrestricted adversarial attack that focuses on modifying the lightness of the images. The shape and color of the samples, which are crucial to human perception, are barely influenced. To obtain adversarial examples with high image quality, we craft a naturalness-aware regularization. To achieve stronger transferability, we propose random initialization and non-stop attack strategy in the attack procedure. We verify the effectiveness of ALA on two popular datasets for different tasks (i.e., ImageNet for image classification and Places-365 for scene recognition). The experiments show that the generated adversarial examples have both strong transferability and high image quality. Besides, the adversarial examples can also help to improve the standard trained ResNet50 on defending lightness corruption.", "total_citations": {"2022": 1, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:t3sMychFT9UC": {"external_link": "https://arxiv.org/abs/2112.02240", "authors": ["Congying Xu", "Bihuan Chen", "Chenhao Lu", "Kaifeng Huang", "Xin Peng", "Yang Liu"], "publication_date": "2021/12/4", "journal": "arXiv preprint arXiv:2112.02240", "description": "Open source software (OSS) vulnerability management has become an open problem. Vulnerability databases provide valuable data that is needed to address OSS vulnerabilities. However, there arises a growing concern about the information quality of vulnerability databases. In particular, it is unclear how the quality of patches in existing vulnerability databases is. Further, existing manual or heuristic-based approaches for patch identification are either too expensive or too specific to be applied to all OSS vulnerabilities. To address these problems, we first conduct an empirical study to understand the quality and characteristics of patches for OSS vulnerabilities in two state-of-the-art vulnerability databases. Our study is designed to cover five dimensions, i.e., the coverage, consistency, type, cardinality and accuracy of patches. Then, inspired by our study, we propose the first automated approach, named TRACER, to find patches for an OSS vulnerability from multiple sources. Our key idea is that patch commits will be frequently referenced during the reporting, discussion and resolution of an OSS vulnerability. Our extensive evaluation has indicated that i) TRACER finds patches for up to 273.8% more CVEs than existing heuristic-based approaches while achieving a significantly higher F1-score by up to 116.8%; and ii) TRACER achieves a higher recall by up to 18.4% than state-of-the-art vulnerability databases, but sacrifices up to 12.0% fewer CVEs (whose patches are not found) and 6.4% lower precision. Our evaluation has also demonstrated the generality and usefulness of TRACER.", "total_citations": {"2022": 1, "2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vptNTMqK6uYC": {"external_link": "https://arxiv.org/abs/2111.12971", "authors": ["Yihao Huang", "Felix Juefei-Xu", "Qing Guo", "Weikai Miao", "Yang Liu", "Geguang Pu"], "publication_date": "2021/11/25", "journal": "arXiv preprint arXiv:2111.12971", "description": "Bokeh effect is a natural shallow depth-of-field phenomenon that blurs the out-of-focus part in photography. In pursuit of aesthetically pleasing photos, people usually regard the bokeh effect as an indispensable part of the photo. Due to its natural advantage and universality, as well as the fact that many visual recognition tasks can already be negatively affected by the `natural bokeh' phenomenon, in this work, we systematically study the bokeh effect from a new angle, i.e., adversarial bokeh attack (AdvBokeh) that aims to embed calculated deceptive information into the bokeh generation and produce a natural adversarial example without any human-noticeable noise artifacts. To this end, we first propose a Depth-guided Bokeh Synthesis Network (DebsNet) that is able to flexibly synthesis, refocus, and adjust the level of bokeh of the image, with a one-stage training procedure. The DebsNet allows us to tap into the bokeh generation process and attack the depth map that is needed for generating realistic bokeh (i.e., adversarially tuning the depth map) based on subsequent visual tasks. To further improve the realisticity of the adversarial bokeh, we propose depth-guided gradient-based attack to regularize the gradient.We validate the proposed method on a popular adversarial image classification dataset, i.e., NeurIPS-2017 DEV, and show that the proposed method can penetrate four state-of-the-art (SOTA) image classification networks i.e., ResNet50, VGG, DenseNet, and MobileNetV2 with a high success rate as well as high image quality. The adversarial examples obtained by AdvBokeh also exhibit high level of transferability under black-box\u00a0\u2026", "total_citations": {"2022": 3, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:GwaQhVSQhKEC": {"external_link": null, "authors": ["Shangwei Guo", "Tianwei Zhang", "Guowen Xu", "Han Yu", "Tao Xiang", "Yang Liu"], "publication_date": "2020/6/14", "journal": "arXiv preprint arXiv:2006.07817", "total_citations": {"2021": 2, "2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UmJFWc0aipQC": {"external_link": "https://link.springer.com/article/10.1007/s10617-019-09226-1", "authors": ["Wilayat Khan", "David Sanan", "Zhe Hou", "Liu Yang"], "publication_date": "2019/12/1", "journal": "Design Automation for Embedded Systems", "volume": "23", "issue": "3-4", "pages": "123-151", "publisher": "Springer US", "description": "In order to define executable hardware description language while at the same time be fit for formal proofs of properties, a hardware description language VeriFormal, embedded in Isabelle/HOL, was created. VeriFormal, together with a translator and Isabelle/HOL proof facility, provides a platform for designing, simulating and reasoning about hardware designs. Building such an environment is challenging due to the fact that the designer must have expertise in programming language design, the specific domain and theorem prover. It requires selection of a language design criteria, host language, grammar, embedding approach and techniques and mechanisms to address determinism and termination issues. When the language in question is a hardware description language, it requires specialized treatment of events, their scheduling, data types and assignments. In this paper, we report on our experience of\u00a0\u2026", "total_citations": {"2020": 1, "2021": 1, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CtYknXOfbFEC": {"external_link": "https://silicon-austria-labs.elsevierpure.com/en/publications/experimental-evaluation-of-deep-neural-network-resistance-against", "authors": ["Xiaolu Hou", "Jakub Breier", "Dirmanto Jap", "Lei Ma", "Shivam Bhasin", "Yang Liu"], "publication_date": "2019", "journal": "IACR Cryptology ePrint Archive", "volume": "2019", "pages": "461", "description": "Experimental Evaluation of Deep Neural Network Resistance Against Fault Injection Attacks. \n\u2014 Silicon Austria Labs Skip to main navigation Skip to search Skip to main content Silicon \nAustria Labs Home Silicon Austria Labs Logo English Deutsch Home Profiles Research \nunits Projects Research output Prizes Activities Courses Impacts Search by expertise, name \nor affiliation Experimental Evaluation of Deep Neural Network Resistance Against Fault \nInjection Attacks. Xiaolu Hou, Jakub Breier, Dirmanto Jap, Lei Ma, Shivam Bhasin, Yang Liu \nResearch output: Contribution to journal \u203a Article \u203a peer-review Overview Original language \nEnglish Pages (from-to) 461 Number of pages 1 Journal IACR Cryptol. ePrint Arch. Volume \n2019 Publication status Published - 2019 Access to Document https://dblp.org/db/journals/iacr/iacr2019.html#HouBJMBL19 \nhttps://eprint.iacr.org/2019/461 Cite this APA Author BIBTEX Harvard \u2026", "total_citations": {"2020": 4, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:MOUuoOoUJb4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8256130/", "authors": ["Nan Du", "Hesuan Hu", "Yuan Zhou", "Yang Liu"], "publication_date": "2017/8/20", "conference": "2017 13th IEEE Conference on Automation Science and Engineering (CASE)", "pages": "364-369", "publisher": "IEEE", "description": "Deadlock problem is a cutting-edge research subject in automated manufacturing systems (AMSs). Most work to date assumes that the system resources are reliable. However, an AMS is composed of plenty of numerically-controlled machines interacting with each other. Resource failures occur unexpectedly especially due to increasingly complex system structures, e.g., AMSs with assembly operations and flexible routes. Thus, resource failures will be taken into consideration in this paper. Through dynamic analysis and real-time control, our robust supervisor can automatically allocate resources so that processes blocked by unexpected resource failures do not hinder the production of parts not necessarily requiring failed resources at any time. Our approach achieved in a distributed and dynamic way is different from conventional methods based on structure-oriented and monolithic specifications.", "total_citations": {"2019": 2, "2020": 1, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4p3FJGzxjgAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6693062/", "authors": ["Shao Jie Zhang", "Jun Sun", "Chengnian Sun", "Yang Liu", "Junwei Ma", "Jin Song Dong"], "publication_date": "2013/11/11", "conference": "2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "15-25", "publisher": "IEEE", "description": "We present an automatic approach to detecting symmetry relations for general concurrent models. Despite the success of symmetry reduction in mitigating state explosion problem, one essential step towards its soundness and effectiveness, i.e., how to discover sufficient symmetries with least human efforts, is often either overlooked or oversimplified. In this work, we show how a concurrent model can be viewed as a constraint satisfaction problem (CSP), and present an algorithm capable of detecting symmetries arising from the CSP which induce automorphisms of the model. To the best of our knowledge, our method is the first approach that can automatically detect both process and data symmetries as demonstrated via a number of systems.", "total_citations": {"2013": 1, "2014": 0, "2015": 1, "2016": 2, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ult01sCh7k0C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-41202-8_13", "authors": ["Yuanjie Si", "Jun Sun", "Yang Liu", "Ting Wang"], "publication_date": "2013/10/29", "conference": "International Conference on Formal Engineering Methods", "pages": "182-198", "publisher": "Springer Berlin Heidelberg", "description": "Real-time system verification must deal with a special notion of \u2018fairness\u2019, i.e., clocks must always be able to progress. A system run which prevents clocks from progressing unboundedly is known as Zeno. Zeno runs are infeasible in reality and thus must be pruned during system verification. Though zone abstraction is an effective technique for model checking real-time systems, it is known that zone graphs (e.g., those generated from Timed Automata models) are too abstract to directly infer time progress and hence non-Zenoness. As a result, model checking with non-Zenoness (i.e., existence of a non-Zeno counterexample) based on zone graphs only is infeasible. In our previous work\u00a0[23], we show that model checking Stateful Timed CSP with non-Zenoness based on zone graphs only is feasible, due to the difference between Stateful Timed CSP and Timed Automata. Nonetheless, the algorithm\u00a0\u2026", "total_citations": {"2014": 1, "2015": 0, "2016": 0, "2017": 1, "2018": 1, "2019": 1, "2020": 0, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=300&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1u-ON_Kw9acC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9844282/", "authors": ["Ju Jia", "Yueming Wu", "Anran Li", "Siqi Ma", "Yang Liu"], "publication_date": "2022/7/28", "journal": "IEEE Transactions on Dependable and Secure Computing", "publisher": "IEEE", "description": "Recently, considerable progress has been made in providing solutions to prevent intellectual property (IP) theft for deep neural networks (DNNs) in ideal classification or recognition scenarios. However, little work has been dedicated to protecting the IP of DNN models in the context of transfer learning. Moreover, knowledge transfer is usually achieved through knowledge distillation or cross-domain distribution adaptation techniques, which will easily lead to the failure of the IP protection due to the high risk of the underlying DNN watermark being corrupted. To address this issue, we propose a subnetwork-lossless robust DNN watermarking (SRDW) framework, which can exploit out-of-distribution (OOD) guidance data augmentation to boost the robustness of watermarking. Specifically, we accurately seek the most rational modification structure (i.e., core subnetwork) using the module risk minimization, and then\u00a0\u2026", "total_citations": {"2022": 1, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qLQjcG-1Y3AC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9780227/", "authors": ["Biwen Chen", "Honghong Zeng", "Tao Xiang", "Shangwei Guo", "Tianwei Zhang", "Yang Liu"], "publication_date": "2022/5/23", "journal": "IEEE Transactions on Big Data", "publisher": "IEEE", "description": "Federated learning is a technique that enables multiple parties to collaboratively train a model without sharing raw private data, and it is ideal for smart healthcare. However, it raises new privacy concerns due to the risk of privacy-sensitive medical data leakage. It is not until recently that the privacy-preserving FL (PPFL) has been introduced as a solution to ensure the privacy of training processes. Unfortunately, most existing PPFL schemes are highly dependent on complex cryptographic mechanisms or fail to guarantee the accuracy of training models. Besides, there has been little research on the fairness of the payment procedure in the PPFL with incentive mechanisms. To address the above concerns, we first construct an efficient non-interactive designated decryptor function encryption (NDD-FE) scheme to protect the privacy of training data while maintaining high communication performance. We then propose\u00a0\u2026", "total_citations": {"2023": 4}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:gOF0WX6RF1sC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9690769/", "authors": ["Xingshuo Han", "Yuan Zhou", "Kangjie Chen", "Han Qiu", "Meikang Qiu", "Yang Liu", "Tianwei Zhang"], "publication_date": "2022/1/25", "journal": "IEEE Transactions on Intelligent Transportation Systems", "volume": "24", "issue": "1", "pages": "1039-1051", "publisher": "IEEE", "description": "Autonomous Vehicles (AVs) are closely connected in the Cooperative Intelligent Transportation System (C-ITS). They are equipped with various sensors and controlled by Autonomous Driving Systems (ADSs) to provide high-level autonomy. The vehicles exchange different types of real-time data with each other, which can help reduce traffic accidents and congestion, and improve the efficiency of transportation systems. However, when interacting with the environment, AVs suffer from a broad attack surface, and the sensory data are susceptible to anomalies caused by faults, sensor malfunctions, or attacks, which may jeopardize traffic safety and result in serious accidents. In this paper, we propose  ADS-Lead , an efficient collaborative anomaly detection methodology to protect the lane-following mechanism of ADSs.  ADS-Lead  is equipped with a novel transformer-based one-class classification model to identify\u00a0\u2026", "total_citations": {"2022": 3, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-4bc1-6Giq0C": {"external_link": "https://arxiv.org/abs/2111.13790", "authors": ["Lan Fu", "Qing Guo", "Felix Juefei-Xu", "Hongkai Yu", "Wei Feng", "Yang Liu", "Song Wang"], "publication_date": "2021/11/27", "journal": "arXiv preprint arXiv:2111.13790", "description": "Facial landmark detection is a very fundamental and significant vision task with many important applications. In practice, facial landmark detection can be affected by a lot of natural degradations. One of the most common and important degradations is the shadow caused by light source blocking. While many advanced shadow removal methods have been proposed to recover the image quality in recent years, their effects to facial landmark detection are not well studied. For example, it remains unclear whether shadow removal could enhance the robustness of facial landmark detection to diverse shadow patterns or not. In this work, for the first attempt, we construct a novel benchmark to link two independent but related tasks (i.e., shadow removal and facial landmark detection). In particular, the proposed benchmark covers diverse face shadows with different intensities, sizes, shapes, and locations. Moreover, to mine hard shadow patterns against facial landmark detection, we propose a novel method (i.e., adversarial shadow attack), which allows us to construct a challenging subset of the benchmark for a comprehensive analysis. With the constructed benchmark, we conduct extensive analysis on three state-of-the-art shadow removal methods and three landmark detectors. The observation of this work motivates us to design a novel detection-aware shadow removal framework, which empowers shadow removal to achieve higher restoration quality and enhance the shadow robustness of deployed facial landmark detectors.", "total_citations": {"2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:zVX0Cq83Iy8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9678703/", "authors": ["Yushi Cao", "Yan Zheng", "Shang-Wei Lin", "Yang Liu", "Yon Shin Teo", "Yuxuan Toh", "Vinay Vishnumurthy Adiga"], "publication_date": "2021/11/15", "conference": "2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1151-1155", "publisher": "IEEE", "description": "Discovering the underlying structure of HMI software efficiently and sufficiently for the purpose of testing without any prior knowledge on the software logic remains a difficult problem. The key challenge lies in the complexity of the HMI software and the high variance in the coverage of current methods. In this paper, we introduce the PathFinder, an effective and automatic HMI software exploration framework. PathFinder adopts a curiosity-based reinforcement learning framework to choose actions that lead to the discovery of more unknown states. Additionally, PathFinder progressively builds a navigation model during the exploration to further improve state coverage. We have conducted experiments on both simulations and real-world HMI software testing environment, which comprise a full tool chain of automobile dashboard instrument cluster. The exploration coverage outperforms manual and fuzzing methods\u00a0\u2026", "total_citations": {"2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YClPFpxzHmwC": {"external_link": "https://arxiv.org/abs/2105.08269", "authors": ["Qing Guo", "Felix Juefei-Xu", "Changqing Zhou", "Wei Feng", "Yang Liu", "Song Wang"], "publication_date": "2021/5/18", "journal": "arXiv preprint arXiv:2105.08269", "description": "Adversarial training (AT) is one of the most effective ways for improving the robustness of deep convolution neural networks (CNNs). Just like common network training, the effectiveness of AT relies on the design of basic network components. In this paper, we conduct an in-depth study on the role of the basic ReLU activation component in AT for robust CNNs. We find that the spatially-shared and input-independent properties of ReLU activation make CNNs less robust to white-box adversarial attacks with either standard or adversarial training. To address this problem, we extend ReLU to a novel Sparta activation function (Spatially attentive and Adversarially Robust Activation), which enables CNNs to achieve both higher robustness, i.e., lower error rate on adversarial examples, and higher accuracy, i.e., lower error rate on clean examples, than the existing state-of-the-art (SOTA) activation functions. We further study the relationship between Sparta and the SOTA activation functions, providing more insights about the advantages of our method. With comprehensive experiments, we also find that the proposed method exhibits superior cross-CNN and cross-dataset transferability. For the former, the adversarially trained Sparta function for one CNN (e.g., ResNet-18) can be fixed and directly used to train another adversarially robust CNN (e.g., ResNet-34). For the latter, the Sparta function trained on one dataset (e.g., CIFAR-10) can be employed to train adversarially robust CNNs on another dataset (e.g., SVHN). In both cases, Sparta leads to CNNs with higher robustness than the vanilla ReLU, verifying the flexibility and versatility of the proposed\u00a0\u2026", "total_citations": {"2022": 3, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:q3SxJD15z-gC": {"external_link": "https://arxiv.org/abs/2011.09884", "authors": ["Bing Yu", "Hua Qi", "Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Lei Ma", "Jianjun Zhao"], "publication_date": "2020/11/19", "journal": "arXiv preprint arXiv:2011.09884", "description": "Deep neural networks (DNNs) are being widely applied for various real-world applications across domains due to their high performance (e.g., high accuracy on image classification). Nevertheless, a well-trained DNN after deployment could oftentimes raise errors during practical use in the operational environment due to the mismatching between distributions of the training dataset and the potential unknown noise factors in the operational environment, e.g., weather, blur, noise etc. Hence, it poses a rather important problem for the DNNs' real-world applications: how to repair the deployed DNNs for correcting the failure samples (i.e., incorrect prediction) under the deployed operational environment while not harming their capability of handling normal or clean data. The number of failure samples we can collect in practice, caused by the noise factors in the operational environment, is often limited. Therefore, It is rather challenging how to repair more similar failures based on the limited failure samples we can collect. In this paper, we propose a style-guided data augmentation for repairing DNN in the operational environment. We propose a style transfer method to learn and introduce the unknown failure patterns within the failure data into the training data via data augmentation. Moreover, we further propose the clustering-based failure data generation for much more effective style-guided data augmentation. We conduct a large-scale evaluation with fifteen degradation factors that may happen in the real world and compare with four state-of-the-art data augmentation methods and two DNN repairing methods, demonstrating that our method can\u00a0\u2026", "total_citations": {"2020": 1, "2021": 2, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2PBQaVm3t-0C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3387904.3389254", "authors": ["Xiongfei Wu", "Liangyu Qin", "Bing Yu", "Xiaofei Xie", "Lei Ma", "Yinxing Xue", "Yang Liu", "Jianjun Zhao"], "publication_date": "2020/7/13", "book": "Proceedings of the 28th International Conference on Program Comprehension", "pages": "172-183", "description": "Deep learning (DL) has been successfully applied to many cutting-edge applications, e.g., image processing, speech recognition, and natural language processing. As more and more DL software is made open-sourced, publicly available, and organized in model repositories and stores (Model Zoo, ModelDepot), there comes a need to understand the relationships of these DL models regarding their maintenance and evolution tasks. Although clone analysis has been extensively studied for traditional software, up to the present, clone analysis has not been investigated for DL software. Since DL software adopts the data-driven development paradigm, it is still not clear whether and to what extent the clone analysis techniques of traditional software could be adapted to DL software. In this paper, we initiate the first step on the clone analysis of DL software at three different levels, i.e., source code level, model structural\u00a0\u2026", "total_citations": {"2021": 1, "2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9Df4XUWggEMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8765826/", "authors": ["Dongxia Wang", "Tim Muller", "Jie Zhang", "Yang Liu"], "publication_date": "2019/7/18", "journal": "IEEE Transactions on Information Forensics and Security", "volume": "15", "pages": "816-828", "publisher": "IEEE", "description": "Ratings provided by advisors can help an advisee to make decisions, e.g., which seller to select in e-commerce. Unfair rating attacks-where dishonest ratings are provided to mislead the advisee-impact the accuracy of decision making. Current literature focuses on specific classes of unfair rating attacks, which does not provide a complete picture of the attacks. We provide the first formal study that addresses all attack behavior that is possible within a given system. We propose a probabilistic modeling of rating behavior, and apply information theory to quantitatively measure the impact of attacks. In particular, we can identify the attack with the worst impact. In the simple case, honest advisors report the truth straightforwardly, and attackers rate strategically. In real systems, the truth (or an advisor's view on it) may be subjective, making even honest ratings inaccurate. Although there exist methods to deal with subjective\u00a0\u2026", "total_citations": {"2021": 2, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YAnBoHO8NTMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8725514/", "authors": ["Xiaoning Du", "Alwen Tiu", "Kun Cheng", "Yang Liu"], "publication_date": "2019/5/29", "journal": "IEEE Transactions on Dependable and Secure Computing", "volume": "18", "issue": "3", "pages": "1489-1510", "publisher": "IEEE", "description": "Metric linear-time logic (MTL) has been widely used to specify runtime policies. Traditionally this use of MTL is to capture the qualitative aspects of the monitored systems, but recent developments in its extensions with aggregate operators allow some quantitative policies to be specified. Our interest in MTL-based policy languages is driven by applications in runtime malware or intrusion detection in platforms like Android and autonomous vehicles, which requires the monitoring algorithm to be independent of the length of the system event traces so that its performance does not degrade as the traces grow. We propose a policy language based on a past-time variant of MTL, extended with an aggregate operator called the metric temporal counting quantifier to specify a policy based on the number of times some sub-policies are satisfied in the specified past time interval. We show that a broad class of policies, but not\u00a0\u2026", "total_citations": {"2019": 1, "2020": 2, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:K_bBBR5tcgMC": {"external_link": "https://scholar.google.com/scholar?cluster=8291007596900236743&hl=en&oi=scholarr", "authors": ["Junjie Wang", "Bihuan Chen", "Lei Wei", "Yang Liu"], "publication_date": "2019", "total_citations": {"2022": 2, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8Wa-k36u3iwC": {"external_link": "https://scholar.google.com/scholar?cluster=4302767851414129416&hl=en&oi=scholarr", "authors": ["Shuanglong Kan", "David San\u00e1n", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2018", "journal": "arXiv preprint arXiv:1804.07608", "total_citations": {"2018": 1, "2019": 2, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:U073gGq-K-4C": {"external_link": "https://scholar.google.com/scholar?cluster=4610995012624902245&hl=en&oi=scholarr", "authors": ["Mahinthan Chandramohan", "Yinxing Xue", "Zhengzi Xu", "Yang Liu", "Chia Yuan Cho", "Hee Beng Kuan Tan"], "publication_date": "2016", "total_citations": {"2021": 1, "2022": 0, "2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:uK1dVpBkok0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7384236/", "authors": ["David San\u00e1n", "Liu Yang", "Zhao Yongwang", "Xing Zhenchang", "Mike Hinchey"], "publication_date": "2015/12/9", "conference": "2015 20th International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "120-129", "publisher": "IEEE", "description": "In order to facilitate proof of correctness, micro-kernels are based on simplicity, providing an application only with the minimal set of features it needs in order to to work. However, simplicity alone does not guarantee the absence of bugs and software errors, and the complexity of an OS often makes such problems difficult to find and fix. In this work, we prove the functional correctness of an abstract model for the C implementation of the cyclic linked list in the real-time micro-kernel FreeRTOS, which is used in the FreeRTOS scheduler, its correctness being of critical importance for the real-time properties of FreeRTOS. The formal specification of the functional properties of FreeRTOS also provides a guide for a correct use of the functions that the implementation provides, since it lacks checks on the data. Additionally, we prove the correctness of the machine code resulting from compiling the implementation targeting the\u00a0\u2026", "total_citations": {"2021": 1, "2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2C0LhDdYSbcC": {"external_link": "https://aamas.csc.liv.ac.uk/Proceedings/aamas2014/aamas/p1645.pdf", "authors": ["Songzheng Song", "Yang Liu", "Jie Zhang", "Jun Sun"], "publication_date": "2014/5/5", "conference": "Proceedings of the 2014 international conference on Autonomous agents and multi-agent systems", "pages": "1645-1646", "publisher": "International Foundation for Autonomous Agents and Multiagent Systems", "description": "In this work, we propose a novel probabilistic modeling language PML-MAS to capture the stochastic characteristics of multi-agent systems (MASs). Moreover, we design a model checking framework for MAS, which is highly extensible. It provides powerful modeling editor, interactive simulator and automatic verifier for MASs. In addition, it can support various MAS model languages via extracting their semantic models and verification algorithms.", "total_citations": {"2015": 1, "2016": 1, "2017": 1, "2018": 0, "2019": 0, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Oc-rVwKPngoC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-662-44871-7_3", "authors": ["Yan Liu", "Xian Zhang", "Yang Liu", "Jin Song Dong", "Jun Sun", "Jit Biswas", "Mounir Mokhtari"], "publication_date": "2014", "book": "Transactions on Computational Collective Intelligence XVI", "pages": "62-91", "publisher": "Springer Berlin Heidelberg", "description": "Smart systems equipped with emerging pervasive computing technologies enable people with limitations to live in their homes independently. However, lack of guarantees for correctness prevent such system to be widely used. Analysing the system with regard to correctness requirements is a challenging task due to the complexity of the system and its various unpredictable faults. In this work, we propose to use formal methods to analyse pervasive computing (PvC) systems. Firstly, a formal modelling framework is proposed to cover the main characteristics of such systems (e.g., context-awareness, concurrent communications, layered architectures). Secondly, we identify the safety requirements (e.g., free of deadlocks and conflicts) and specify them as safety and liveness properties. Furthermore, based on the modelling framework, we propose an approach of verifying reasoning rules which are used in the\u00a0\u2026", "total_citations": {"2015": 1, "2016": 0, "2017": 1, "2018": 0, "2019": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ewB7xoWXMOgC": {"external_link": "https://scholar.google.com/scholar?cluster=15649332721624990214&hl=en&oi=scholarr", "authors": ["Guangdong Bai", "Yongzheng Wu", "Jun Sun", "Jianliang Wu", "Yang Liu", "Qing Zhang", "Jin Song Dong"], "publication_date": "2014", "publisher": "July", "total_citations": {"2016": 1, "2017": 2, "2018": 0, "2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:M3ejUd6NZC8C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-24559-6_36", "authors": ["Zhenchang Xing", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2011/10/26", "conference": "International Conference on Formal Engineering Methods", "pages": "537-552", "publisher": "Springer, Berlin, Heidelberg", "description": "Concurrent programs often use Labeled Transition Systems (LTSs) as their operational semantic models, which provide the basis for automatic system analysis and verification. System behaviors (generated from the operational semantics) evolve as programs evolve for fixing bugs or implementing new user requirements. Even when a program remains unchanged, its LTS models explored by a model checker or analyzer may be different due to the application of different exploration methods. In this paper, we introduce a novel approach (named SpecDiff) to computing the differences between two LTSs, representing the evolving behaviors of a concurrent program. SpecDiff considers LTSs as Typed Attributed Graphs (TAGs), in which states and transitions are encoded in finite dimensional vector spaces. It then computes a maximum common subgraph of two TAGs, which represents an optimal matching of\u00a0\u2026", "total_citations": {"2013": 1, "2014": 1, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 1, "2020": 0, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ufrVoPGSRksC": {"external_link": "https://satoss.uni.lu/members/jun/papers/NUS-RRB2-09.pdf", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Jun Pang"], "publication_date": "2008/12", "publisher": "Technical Report TRB2/09, National Univ. of Singapore, Dec 2008. http://www. comp. nus. edu. sg/pat/report. ps", "description": "Recent development on distributed systems has shown that a variety of fairness constraints (some of which are only recently defined) play vital roles in designing self-stabilizing population protocols. Current practice of system analysis is, however, deficient under fairness constraints. In this work, we present a Process Analysis Toolkit (PAT) for flexible and efficient system analysis under fairness constraints. A unified algorithm is proposed to model check systems with different fairness (eg, weak fairness, strong local fairness, strong global fairness) effectively. Partial order reduction which is effective for distributed system verification is extended to fair systems whenever possible. We show through empirical evaluation (on recent population protocols as well as benchmark systems) that PAT significantly outperforms the current practice of verification with fairness. We report that previously unknown bugs have been revealed using PAT against systems functioning under strong global fairness.", "total_citations": {"2009": 3, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:45AZ0Vt6gvEC": {"external_link": "https://scholar.google.com/scholar?cluster=5794297507386609804&hl=en&oi=scholarr", "authors": ["Y Liu", "X Zhang", "Y Liu", "J Sun", "JS Dong", "J Biswas", "M Mokhtari"], "total_citations": {"2000": 1, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 1, "2013": 0, "2014": 1, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HiMnOR5ODjIC": {"external_link": "https://arxiv.org/abs/2308.06782", "authors": ["Gelei Deng", "Yi Liu", "V\u00edctor Mayoral-Vilches", "Peng Liu", "Yuekang Li", "Yuan Xu", "Tianwei Zhang", "Yang Liu", "Martin Pinzger", "Stefan Rass"], "publication_date": "2023/8/13", "journal": "arXiv preprint arXiv:2308.06782", "description": "Penetration testing, a crucial industrial practice for ensuring system security, has traditionally resisted automation due to the extensive expertise required by human professionals. Large Language Models (LLMs) have shown significant advancements in various domains, and their emergent abilities suggest their potential to revolutionize industries. In this research, we evaluate the performance of LLMs on real-world penetration testing tasks using a robust benchmark created from test machines with platforms. Our findings reveal that while LLMs demonstrate proficiency in specific sub-tasks within the penetration testing process, such as using testing tools, interpreting outputs, and proposing subsequent actions, they also encounter difficulties maintaining an integrated understanding of the overall testing scenario. In response to these insights, we introduce PentestGPT, an LLM-empowered automatic penetration testing tool that leverages the abundant domain knowledge inherent in LLMs. PentestGPT is meticulously designed with three self-interacting modules, each addressing individual sub-tasks of penetration testing, to mitigate the challenges related to context loss. Our evaluation shows that PentestGPT not only outperforms LLMs with a task-completion increase of 228.6\\% compared to the \\gptthree model among the benchmark targets but also proves effective in tackling real-world penetration testing challenges. Having been open-sourced on GitHub, PentestGPT has garnered over 4,700 stars and fostered active community engagement, attesting to its value and impact in both the academic and industrial spheres.", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YZzzgH80nR8C": {"external_link": "https://arxiv.org/abs/2305.16220", "authors": ["Yihao Huang", "Yue Cao", "Tianlin Li", "Felix Juefei-Xu", "Di Lin", "Ivor W Tsang", "Yang Liu", "Qing Guo"], "publication_date": "2023/5/25", "journal": "arXiv preprint arXiv:2305.16220", "description": "Segment anything model (SAM) has presented impressive objectness identification capability with the idea of prompt learning and a new collected large-scale dataset. Given a prompt (e.g., points, bounding boxes, or masks) and an input image, SAM is able to generate valid segment masks for all objects indicated by the prompts, presenting high generalization across diverse scenarios and being a general method for zero-shot transfer to downstream vision tasks. Nevertheless, it remains unclear whether SAM may introduce errors in certain threatening scenarios. Clarifying this is of significant importance for applications that require robustness, such as autonomous vehicles. In this paper, we aim to study the testing-time robustness of SAM under adversarial scenarios and common corruptions. To this end, we first build a testing-time robustness evaluation benchmark for SAM by integrating existing public datasets. Second, we extend representative adversarial attacks against SAM and study the influence of different prompts on robustness. Third, we study the robustness of SAM under diverse corruption types by evaluating SAM on corrupted datasets with different prompts. With experiments conducted on SA-1B and KITTI datasets, we find that SAM exhibits remarkable robustness against various corruptions, except for blur-related corruption. Furthermore, SAM remains susceptible to adversarial attacks, particularly when subjected to PGD and BIM attacks. We think such a comprehensive study could highlight the importance of the robustness issues of SAM and trigger a series of new tasks for SAM as well as downstream vision tasks.", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:jEJjQKk8aPQC": {"external_link": "https://arxiv.org/abs/2305.12865", "authors": ["Weisong Sun", "Chunrong Fang", "Yudu You", "Yun Miao", "Yi Liu", "Yuekang Li", "Gelei Deng", "Shenghan Huang", "Yuchen Chen", "Quanjun Zhang", "Hanwei Qian", "Yang Liu", "Zhenyu Chen"], "publication_date": "2023/5/22", "journal": "arXiv preprint arXiv:2305.12865", "description": "To support software developers in understanding and maintaining programs, various automatic code summarization techniques have been proposed to generate a concise natural language comment for a given code snippet. Recently, the emergence of large language models (LLMs) has led to a great boost in the performance of natural language processing tasks. Among them, ChatGPT is the most popular one which has attracted wide attention from the software engineering community. However, it still remains unclear how ChatGPT performs in (automatic) code summarization. Therefore, in this paper, we focus on evaluating ChatGPT on a widely-used Python dataset called CSN-Python and comparing it with several state-of-the-art (SOTA) code summarization models. Specifically, we first explore an appropriate prompt to guide ChatGPT to generate in-distribution comments. Then, we use such a prompt to ask ChatGPT to generate comments for all code snippets in the CSN-Python test set. We adopt three widely-used metrics (including BLEU, METEOR, and ROUGE-L) to measure the quality of the comments generated by ChatGPT and SOTA models (including NCS, CodeBERT, and CodeT5). The experimental results show that in terms of BLEU and ROUGE-L, ChatGPT's code summarization performance is significantly worse than all three SOTA models. We also present some cases and discuss the advantages and disadvantages of ChatGPT in code summarization. Based on the findings, we outline several open challenges and opportunities in ChatGPT-based code summarization.", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RIp7fglqhzwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10172788/", "authors": ["Jiahui Wu", "Zhengzi Xu", "Wei Tang", "Lyuye Zhang", "Yueming Wu", "Chengyue Liu", "Kairan Sun", "Lida Zhao", "Yang Liu"], "publication_date": "2023/5/14", "conference": "2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)", "pages": "270-282", "publisher": "IEEE", "description": "Third-party libraries (TPLs) are frequently used in software to boost efficiency by avoiding repeated developments. However, the massive using TPLs also brings security threats since TPLs may introduce bugs and vulnerabilities. Therefore, software composition analysis (SCA) tools have been proposed to detect and manage TPL usage. Unfortunately, due to the presence of common and trivial functions in the bloated feature dataset, existing tools fail to precisely and rapidly identify TPLs in C/C++ real-world projects. To this end, we propose OSSFP, a novel SCA framework for effective and efficient TPL detection in large-scale real-world projects via generating unique fingerprints for open source software. By removing common and trivial functions and keeping only the core functions to build the fingerprint index for each TPL project, OSSFP significantly reduces the database size and accelerates the detection\u00a0\u2026", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bGhaNo82unsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10064002/", "authors": ["Yuan Zhou", "Yang Sun", "Yun Tang", "Yuqi Chen", "Jun Sun", "Christopher M Poskitt", "Yang Liu", "Zijiang Yang"], "publication_date": "2023/3/8", "journal": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "description": "Autonomous vehicle\u00a0(AV) systems must be comprehensively tested and evaluated before they can be deployed. High-fidelity simulators such as CARLA or LGSVL allow this to be done safely in very realistic and highly customizable environments. Existing testing approaches, however, fail to test simulated AVs systematically, as they focus on specific scenarios and oracles (e.g., lane following scenario with the \u201cno collision\u201d requirement) and lack any coverage criteria measures. In this paper, we propose   , a framework for systematically testing AV systems against customizable correctness specifications. Designed modularly to support different simulators,    consists of two new languages for specifying dynamic properties of scenes (e.g.\u00a0changing pedestrian behaviour after waypoints) and fine-grained assertions about the AV's journey.    further supports multiple fuzzing algorithms that automatically\u00a0\u2026", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:QV3w6uztVfcC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-031-25056-9_24", "authors": ["Jiayi Zhu", "Qing Guo", "Felix Juefei-Xu", "Yihao Huang", "Yang Liu", "Geguang Pu"], "publication_date": "2023/2/15", "book": "Computer Vision\u2013ECCV 2022 Workshops: Tel Aviv, Israel, October 23\u201327, 2022, Proceedings, Part I", "pages": "360-377", "publisher": "Springer Nature Switzerland", "description": "Modern face recognition systems (FRS) still fall short when the subjects are wearing facial masks. An intuitive partial remedy is to add a mask detector to flag any masked faces so that the FRS can act accordingly for those low-confidence masked faces. In this work, we set out to investigate the potential vulnerability of such FRS equipped with a mask detector, on large-scale masked faces, which might trigger a serious risk, e.g., letting a suspect evade the facial identity from FRS and not detected by mask detectors simultaneously. We formulate the new task as the generation of realistic & adversarial-faced mask and make three main contributions: First, we study the naive Delaunay-based masking method (DM) to simulate the process of wearing a faced mask, which reveals the main challenges of this new task. Second, we further equip the DM with the adversarial noise attack and propose the adversarial noise Delaunay\u00a0\u2026", "total_citations": {"2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:wGcU5kTjeNkC": {"external_link": "https://www.cambridge.org/core/journals/robotica/article/cooperative-collision-avoidance-in-multirobot-systems-using-fuzzy-rules-and-velocity-obstacles/1F047875C40CCEF628BEA12B207B0B1D", "authors": ["Wenbing Tang", "Yuan Zhou", "Tianwei Zhang", "Yang Liu", "Jing Liu", "Zuohua Ding"], "publication_date": "2022/10/28", "journal": "Robotica", "pages": "1-22", "publisher": "Cambridge University Press", "description": "Collision avoidance is critical in multirobot systems. Most of the current methods for collision avoidance either require high computation costs (e.g., velocity obstacles and mathematical optimization) or cannot always provide safety guarantees (e.g., learning-based methods). Moreover, they cannot deal with uncertain sensing data and linguistic requirements (e.g., the speed of a robot should not be large when it is near to other robots). Hence, to guarantee real-time collision avoidance and deal with linguistic requirements, a distributed and hybrid motion planning method, named Fuzzy-VO, is proposed for multirobot systems. It contains two basic components: fuzzy rules, which can deal with linguistic requirements and compute motion efficiently, and velocity obstacles (VOs), which can generate collision-free motion effectively. The Fuzzy-VO applies an intruder selection method to mitigate the exponential increase of\u00a0\u2026", "total_citations": {"2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6sXp-ElUWUkC": {"external_link": "https://arxiv.org/abs/2208.08643", "authors": ["Wenhan Wang", "Kechi Zhang", "Ge Li", "Shangqing Liu", "Zhi Jin", "Yang Liu"], "publication_date": "2022/8/18", "journal": "arXiv preprint arXiv:2208.08643", "description": "When using deep learning techniques to model program languages, neural networks with tree or graph structures are widely adopted to capture the rich structural information within program abstract syntax trees (AST). However, long-term/global dependencies widely exist in programs, and most of these neural architectures fail to capture these dependencies. In this paper, we propose Tree-Transformer, a novel recursive tree-structured neural network which aims to overcome the above limitations. Tree-Transformer leverages two multi-head attention units to model the dependency between siblings and parent-children node pairs. Moreover, we propose a bi-directional propagation strategy to allow node information passing in two directions: bottom-up and top-down along trees. By combining bottom-up and top-down propagation, Tree-Transformer can learn both global contexts and meaningful node features. The extensive experimental results show that our Tree-Transformer outperforms existing tree-based or graph-based neural networks in program-related tasks with tree-level and node-level prediction tasks, indicating that Tree-Transformer performs well on learning both tree-level and node-level representations.", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5kgRglCLipYC": {"external_link": "https://link.springer.com/article/10.1007/s11432-020-3317-2", "authors": ["Di Cui", "Lingling Fan", "Sen Chen", "Yuanfang Cai", "Qinghua Zheng", "Yang Liu", "Ting Liu"], "publication_date": "2022/7", "journal": "Science China Information Sciences", "volume": "65", "issue": "7", "pages": "1-19", "publisher": "Science China Press", "description": "The complexity and diversity of bug fixes require developers to understand bug fixes from multiple perspectives in addition to fine-grained code changes. The dependencies among files in a software system are an important dimension to inform software quality. Recent studies have revealed that most bug-prone files are always architecturally connected with dependencies, and as one of the best practices in the industry, changes in dependencies should be avoided or carefully made during bug fixing. Hence, in this paper, we take the first attempt to understand bug fixes from the dependencies perspective, which can complement existing code change perspectives. Based on this new perspective, we conducted a systematic and comprehensive study on bug fixes collected from 157 Apache open source projects, involving 140456 bug reports and 182621 bug fixes in total. Our study results show that a relatively high\u00a0\u2026", "total_citations": {"2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:t3SSBJTuMXcC": {"external_link": "https://arxiv.org/abs/2206.09357", "authors": ["Yun Tang", "Yuan Zhou", "Kairui Yang", "Ziyuan Zhong", "Baishakhi Ray", "Yang Liu", "Ping Zhang", "Junbo Chen"], "publication_date": "2022/6/19", "journal": "arXiv preprint arXiv:2206.09357", "description": "High-definition (HD) maps are essential in testing autonomous driving systems (ADSs). HD maps essentially determine the potential diversity of the testing scenarios. However, the current HD maps suffer from two main limitations: lack of junction diversity in the publicly available HD maps and cost-consuming to build a new HD map. Hence, in this paper, we propose, FEAT2MAP, to automatically generate concise HD maps with scenario diversity guarantees. FEAT2MAP focuses on junctions as they significantly influence scenario diversity, especially in urban road networks. FEAT2MAP first defines a set of features to characterize junctions. Then, FEAT2MAP extracts and samples concrete junction features from a list of input HD maps or user-defined requirements. Each junction feature generates a junction. Finally, FEAT2MAP builds a map by connecting the junctions in a grid layout. To demonstrate the effectiveness of FEAT2MAP, we conduct experiments with the public HD maps from SVL and the open-source ADS Apollo. The results show that FEAT2MAP can (1) generate new maps of reduced size while maintaining scenario diversity in terms of the code coverage and motion states of the ADS under test, and (2) generate new maps of increased scenario diversity by merging intersection features from multiple maps or taking user inputs.", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:V6rzEKW62mYC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9824581/", "authors": ["Nianfeng Li", "Yang Liu", "Lina Li", "Yuying Wang"], "publication_date": "2022/5/20", "conference": "2022 3rd International Conference on Computer Vision, Image and Deep Learning & International Conference on Computer Engineering and Applications (CVIDL & ICCEA)", "pages": "533-536", "publisher": "IEEE", "description": "Smart contract is the key core part of the blockchain\u2019s operation, which has the feature that it cannot be changed after deploying, resulting in the fact that the vulnerabilities associated with smart contracts cannot be fixed. Currently, deep learning has the best performance for detecting smart contract vulnerabilities. However, the common deep learning method treats the smart contract source code as a text sequence, ignoring the running logic and data flow of the program, and can not extract the constructed features. In this paper, a modular vulnerability detection model Link-DC is proposed. the model takes the contract graph constructed by smart contracts and the pattern features defined by expert knowledge as the original data input to capture richer feature information through stitching. Then, the deep and cross network is adopted to construct low-dimensional and sparse features into high-dimensional nonlinear\u00a0\u2026", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3r0_5JwaG5wC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9678653/", "authors": ["Qiang Liu", "Cen Zhang", "Lin Ma", "Muhui Jiang", "Yajin Zhou", "Lei Wu", "Wenbo Shen", "Xiapu Luo", "Yang Liu", "Kui Ren"], "publication_date": "2021/11/15", "conference": "2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "792-804", "publisher": "IEEE", "description": "Linux kernel is widely used in embedded systems. To understand practical threats to the Linux kernel, we need to perform dynamic analysis with a full-system emulator, e.g., QEMU. However, due to hardware fragmentation, e.g., various types of peripherals, most embedded systems are not currently supported by QEMU. Though some progress has been made on rehosting firmware, it mainly focuses on user space programs or simple real-time operating systems.The goal of this work is to boost the capability of rehosting the embedded Linux kernels in QEMU. By doing so, dynamic analysis systems can be firstly applied on embedded Linux kernels by leveraging off-the-shelf tools upon QEMU. Accordingly, we proposed a new technique called model-guided kernel execution. It combines the peripheral abstractions in the Linux kernel and kernel-peripheral interactions to semi-automatically generate peripheral models\u00a0\u2026", "total_citations": {"2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RzXy5zvoWjEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9700329/", "authors": ["Yuekang Li", "Guozhu Meng", "Jun Xu", "Cen Zhang", "Hongxu Chen", "Xiaofei Xie", "Haijun Wang", "Yang Liu"], "publication_date": "2021/10/25", "conference": "2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)", "pages": "288-299", "publisher": "IEEE", "description": "Greybox fuzzing is a widely used technique for software testing that has been adopted by practitioners and researchers to disclose a great number of vulnerabilities in various software. However, adversaries also weaponize greybox fuzzing to mine vulnerabilities for malicious intentions. This poses considerable threats to software systems. To counteract the misuse of greybox fuzzing, we propose VALL-NUT, a novel approach to harden software with properties to combat greybox fuzzing. We dissect the major strategies that facilitate the success of greybox fuzzing, and accordingly propose three types of neutralizing schemesseed queue explosion, seed attenuation, and feedback contamination. We evaluate Vall-nut against the mainstream greybox fuzzers on multiple real-world benchmark programs. The results show that Vall-nut can reduce an average of 34 % code coverage and 76% detected crashes in 24-hour\u00a0\u2026", "total_citations": {"2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yM8WYnMLviIC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3474085.3475171", "authors": ["Yihao Huang", "Qing Guo", "Felix Juefei-Xu", "Lei Ma", "Weikai Miao", "Yang Liu", "Geguang Pu"], "publication_date": "2021/10/17", "book": "Proceedings of the 29th ACM International Conference on Multimedia", "pages": "395-403", "description": "High-level representation-guided pixel denoising and adversarial training are independent solutions to enhance the robustness of CNNs against adversarial attacks by pre-processing input data and re-training models, respectively. Most recently, adversarial training techniques have been widely studied and improved while the pixel denoising-based method is getting less attractive. However, it is still questionable whether there exists a more advanced pixel denoising-based method and whether the combination of the two solutions benefits each other. To this end, we first comprehensively investigate two kinds of pixel denoising methods for adversarial robustness enhancement (i.e., existing additive-based and unexplored filtering-based methods) under the loss functions of image-level and semantic-level, respectively, showing that pixel-wise filtering can obtain much higher image quality (e.g., higher PSNR) as well\u00a0\u2026", "total_citations": {"2022": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:klLsoiHXwFYC": {"external_link": "https://scholar.google.com/scholar?cluster=12996343652554377105&hl=en&oi=scholarr", "authors": ["Shangqing Liu", "Xiaofei Xie", "Lei Ma", "J Siow", "Yang Liu"], "publication_date": "2021", "journal": "arXiv preprint arXiv:2111.02671", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:H-nlc5mcmJQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9172045/", "authors": ["Kun Cheng", "Yuan Zhou", "Bihuan Chen", "Rui Wang", "Yuebin Bai", "Yang Liu"], "publication_date": "2020/8/20", "journal": "IEEE Transactions on Computers", "volume": "70", "issue": "10", "pages": "1569-1581", "publisher": "IEEE", "description": "Due to the broad attack surface and the lack of runtime protection, potential safety and security threats hinder the real-life adoption of autonomous vehicles. Although efforts have been made to mitigate some specific attacks, there are few works on the protection of the autonomous driving system, i.e., the control software system performing such as perception, decision making, and motion tracking. This article presents a decentralized self-protection framework called Guardauto to protect the autonomous driving system against runtime threats. First, Guardauto proposes an isolation model to decouple the autonomous driving system and isolate its components with a set of partitions. Second, Guardauto provides self-protection mechanisms for each target component, which combines different methods to monitor the target execution and plan adaption actions accordingly. Third, Guardauto provides cooperation among\u00a0\u2026", "total_citations": {"2022": 2, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8aAMN6PqWdYC": {"external_link": "https://arxiv.org/abs/2007.01299", "authors": ["Renzhi Wang", "Tianwei Zhang", "Xiaofei Xie", "Lei Ma", "Cong Tian", "Felix Juefei-Xu", "Yang Liu"], "publication_date": "2020/7/2", "journal": "arXiv preprint arXiv:2007.01299", "description": "Adversarial attacks against Deep Neural Networks have been widely studied. One significant feature that makes such attacks particularly powerful is transferability, where the adversarial examples generated from one model can be effective against other similar models as well. A large number of works have been done to increase the transferability. However, how to decrease the transferability and craft malicious samples only for specific target models are not explored yet. In this paper, we design novel attack methodologies to generate adversarial examples with controllable non-transferability. With these methods, an adversary can efficiently produce precise adversarial examples to attack a set of target models he desires, while keeping benign to other models. The first method is Reversed Loss Function Ensemble, where the adversary can craft qualified examples from the gradients of a reversed loss function. This approach is effective for the white-box and gray-box settings. The second method is Transferability Classification: the adversary trains a transferability-aware classifier from the perturbations of adversarial examples. This classifier further provides the guidance for the generation of non-transferable adversarial examples. This approach can be applied to the black-box scenario. Evaluation results demonstrate the effectiveness and efficiency of our proposed methods. This work opens up a new route for generating adversarial examples with new features and applications.", "total_citations": {"2020": 1, "2021": 0, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:dnWPDgH667kC": {"external_link": "https://arxiv.org/abs/2004.12581", "authors": ["Kun Cheng", "Yuebin Bai", "Yuan Zhou", "Chao Yu", "Yang Liu"], "publication_date": "2020/4/27", "journal": "arXiv preprint arXiv:2004.12581", "description": "Autonomous driving vehicles (ADVs) are implemented with rich software functions and equipped with many sensors, which in turn brings broad attack surface. Moreover, the execution environment of ADVs is often open and complex. Hence, ADVs are always at risk of safety and security threats. This paper proposes a fast method called Multi-IF, using multiple invocation features of system calls to detect anomalies in self-driving systems. Since self-driving functions take most of the computation resources and upgrade frequently, Multi-IF is designed to work under such resource constraints and support frequent updates. Given the collected sequences of system calls, the combination of different syntax patterns is used to analyze and construct feature vectors of those sequences. By taking the feature vectors as inputs, one-class support vector machine is adopted to determine whether the current sequence of system calls is abnormal, which is trained with the feature vectors from the normal sequences. The evaluations on both simulated and real data prove that the proposed method is effective in identifying the abnormal behavior after minutes of feature extraction and training. Further comparisons with the existing methods on the ADFA-LD data set also validate that the proposed approach achieves a higher accuracy with less time overhead.", "total_citations": {"2020": 1, "2021": 1, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EbDKHhGulSgC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9101223/", "authors": ["Yutong Zhao", "Lu Xiao", "Xiao Wang", "Zhifei Chen", "Bihuan Chen", "Yang Liu"], "publication_date": "2020/3/16", "conference": "2020 IEEE International Conference on Software Architecture (ICSA)", "pages": "202-213", "publisher": "IEEE", "description": "Performance issues widely exist in modern software systems. Existing performance optimization approaches, such as dynamic profiling, usually fail to consider the impacts of architectural connections among methods on performance issues. This paper contributes an architectural approach, Butterfly Space modeling, to investigate performance issues. Each Butterfly Space is composed of 1) a seed method; 2) methods in the \"upper wing\" that call the seed directly or transitively; and 3) methods in the \"lower wing\" that are called by the seed, directly or transitively. The rationale is that the performance of the seed method impacts and is impacted by all the other methods in the space because of the call relationship. As such, developers can more efficiently investigate groups of connected performance improvement opportunities in Butterfly Spaces. We studied three real-world open source Java projects to evaluate such\u00a0\u2026", "total_citations": {"2022": 1, "2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HZAC7m4lW-wC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9101195/", "authors": ["Xiao Wang", "Lu Xiao", "Kaifeng Huang", "Bihuan Chen", "Yutong Zhao", "Yang Liu"], "publication_date": "2020/3/16", "conference": "2020 IEEE International Conference on Software Architecture (ICSA)", "pages": "179-190", "publisher": "IEEE", "description": "The design structure of a system continuously evolves as the consequence of fast-paced code revisions. Agile techniques, such as continuous testing, ensures the function goals of a system with every code revision. However, there lacks an efficient approach that can continuously model the design difference resulting from every single code revision to facilitate comprehension and ensure the design quality. This paper contributes a novel design modeling approach, called Design Differencing (DESIGNDIFF), that models and visualizes the highlevel design differences resulting from every code revision. This paper defines a complete and general set of 17 design change operators to capture the design difference from any code revision. We evaluated the potential of DESIGNDIFF in three aspects. First, a user study of 10 developers indicated that DESIGNDIFF can help practitioners to faster and better understand high\u00a0\u2026", "total_citations": {"2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9cqGXoYeWaMC": {"external_link": "https://scholar.google.com/scholar?cluster=801433209565030162&hl=en&oi=scholarr", "authors": ["Yinxing Xue", "Jiaming Ye", "Mingliang Ma", "Lei Ma", "Yi Li", "Haijun Wang", "Yun Lin", "Tianyong Peng", "Yang Liu"], "publication_date": "2019/12/10", "journal": "arXiv preprint arXiv:1912.04466", "description": "With the prosperity of smart contracts and the blockchain technology, various security analyzers have been proposed from both the academia and industry to address the associated risks. Yet, there does not exist a high-quality benchmark of smart contract vulnerability for security research. In this study, we propose an approach towards building a high-quality vulnerability benchmark. Our approach consists of two parts. First, to improve recall, we propose to search for similar vulnerabilities in an automated way by leveraging the abstract vulnerability signature (AVS). Second, to remove the false positives (FPs) due to AVS-based matching, we summarize the detection rules of existing tools and apply the refined rules by considering various defense mechanisms (DMs). By integrating AVS-based code matching and the refined detection rules (RDR), our approach achieves higher precision and recall. On the collected 76\u00a0\u2026", "total_citations": {"2023": 3}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:S1WaUgt8gYIC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-030-32409-4_31", "authors": ["Ruitao Feng", "Yang Liu", "Shangwei Lin"], "publication_date": "2019/11/5", "conference": "International Conference on Formal Engineering Methods", "pages": "493-497", "publisher": "Springer, Cham", "description": "Apart from the Android apps provided by the official market, apps from unofficial markets and third-party resources are always causing a serious security threat to end-users. Because of the overhead of the network, uploading the app to the server for detection is a time-consuming task. In addition, the uploading process also suffers from the threat of attackers. Consequently, a last line of defense on Android devices is necessary and much-needed. To address these problems, we propose an effective Android malware detection system, leveraging deep learning to provide a real-time secure and fast response environment on Android devices.", "total_citations": {"2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YP-lgzILWVMC": {"external_link": "https://www.jos.org.cn/jos/ch/reader/view_abstract.aspx?file_no=5789&st=alljournals", "authors": ["\u8c22\u8096\u98de\uff0c \u674e\u6653\u7ea2\uff0c \u9648\u7fd4\uff0c \u5b5f\u56fd\u67f1\uff0c \u5218\u6768"], "publication_date": "2019/5/16", "journal": "\u8f6f\u4ef6\u5b66\u62a5", "volume": "30", "issue": "10", "pages": "3071-3089", "description": "\u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4fdd\u969c\u8f6f\u4ef6\u8d28\u91cf\u7684\u5e38\u7528\u65b9\u6cd5, \u5982\u4f55\u83b7\u5f97\u9ad8\u8986\u76d6\u7387\u662f\u6d4b\u8bd5\u4e2d\u5341\u5206\u91cd\u8981\u4e14\u5177\u6709\u6311\u6218\u6027\u7684\u7814\u7a76\u95ee\u9898. \u6a21\u7cca\u6d4b\u8bd5\u4e0e\u7b26\u53f7\u6267\u884c\u4f5c\u4e3a\u4e24\u5927\u4e3b\u6d41\u6d4b\u8bd5\u6280\u672f\u5df2\u88ab\u5e7f\u6cdb\u7814\u7a76\u5e76\u5e94\u7528\u5230\u5b66\u672f\u754c\u4e0e\u5de5\u4e1a\u754c\u4e2d, \u8fd9\u4e24\u79cd\u6280\u672f\u90fd\u5177\u6709\u4e00\u5b9a\u7684\u4f18\u7f3a\u70b9: \u6a21\u7cca\u6d4b\u8bd5\u968f\u673a\u53d8\u5f02\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u5e76\u52a8\u6001\u6267\u884c\u7a0b\u5e8f, \u53ef\u4ee5\u6267\u884c\u5e76\u8986\u76d6\u5230\u8f83\u6df1\u7684\u5206\u652f, \u4f46\u5176\u5f88\u96be\u901a\u8fc7\u53d8\u5f02\u7684\u65b9\u6cd5\u751f\u6210\u8986\u76d6\u5230\u590d\u6742\u6761\u4ef6\u5206\u652f\u7684\u6d4b\u8bd5\u7528\u4f8b. \u800c\u7b26\u53f7\u6267\u884c\u4f9d\u8d56\u7ea6\u675f\u6c42\u89e3\u5668, \u53ef\u4ee5\u751f\u6210\u8986\u76d6\u590d\u6742\u6761\u4ef6\u5206\u652f\u7684\u6d4b\u8bd5\u7528\u4f8b, \u4f46\u5728\u7b26\u53f7\u5316\u6267\u884c\u8fc7\u7a0b\u4e2d\u5f80\u5f80\u4f1a\u51fa\u73b0\u72b6\u6001\u7206\u70b8\u95ee\u9898, \u56e0\u6b64\u5f88\u96be\u8986\u76d6\u5230\u8f83\u6df1\u7684\u5206\u652f. \u6709\u5de5\u4f5c\u5df2\u7ecf\u8bc1\u660e, \u5c06\u7b26\u53f7\u6267\u884c\u4e0e\u6a21\u7cca\u6d4b\u8bd5\u76f8\u7ed3\u5408\u53ef\u4ee5\u83b7\u5f97\u6bd4\u5355\u72ec\u4f7f\u7528\u6a21\u7cca\u6d4b\u8bd5\u6216\u8005\u7b26\u53f7\u6267\u884c\u66f4\u597d\u7684\u6548\u679c. \u5206\u6790\u7b26\u53f7\u6267\u884c\u4e0e\u6a21\u7cca\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9, \u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5206\u652f\u8986\u76d6\u5c06\u4e24\u79cd\u65b9\u6cd5\u7ed3\u5408\u7684\u6df7\u5408\u6d4b\u8bd5\u65b9\u6cd5\u2014\u2014Afleer, \u7ed3\u5408\u53cc\u65b9\u4f18\u70b9\u4ece\u800c\u53ef\u4ee5\u751f\u6210\u5177\u6709\u66f4\u9ad8\u5206\u652f\u8986\u76d6\u7387\u7684\u6d4b\u8bd5\u7528\u4f8b. \u5177\u4f53\u6765\u8bf4, \u6a21\u7cca\u6d4b\u8bd5 (\u4f8b\u5982 AFL) \u4e3a\u7a0b\u5e8f\u5feb\u901f\u751f\u6210\u5927\u91cf\u53ef\u4ee5\u8986\u76d6\u8f83\u6df1\u5206\u652f\u7684\u6d4b\u8bd5\u7528\u4f8b, \u7b26\u53f7\u6267\u884c (\u4f8b\u5982 KLEE) \u57fa\u4e8e\u6a21\u7cca\u6d4b\u8bd5\u7684\u8986\u76d6\u4fe1\u606f\u8fdb\u884c\u641c\u7d22, \u4ec5\u4e3a\u672a\u8986\u76d6\u5230\u7684\u5206\u652f\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b. \u4e3a\u4e86\u9a8c\u8bc1 Afleer \u7684\u6709\u6548\u6027, \u9009\u53d6\u6807\u51c6\u7a0b\u5e8f\u96c6 LAVA-M \u4ee5\u53ca\u5b9e\u9645\u9879\u76ee oSIP \u4f5c\u4e3a\u8bc4\u6d4b\u5bf9\u8c61, \u4ee5\u6f0f\u6d1e\u68c0\u6d4b\u80fd\u529b\u4ee5\u53ca\u8986\u76d6\u80fd\u529b\u4f5c\u4e3a\u8bc4\u6d4b\u6307\u6807. \u5b9e\u9a8c\u7ed3\u679c\u8868\u660e:(1) \u5728\u6f0f\u6d1e\u68c0\u6d4b\u80fd\u529b\u4e0a, Afleer \u603b\u5171\u53ef\u4ee5\u53d1\u73b0 755 \u4e2a\u6f0f\u6d1e, \u800c AFL \u4ec5\u53d1\u73b0 1 \u4e2a;(2) \u5728\u8986\u76d6\u80fd\u529b\u4e0a, Afleer \u5728\u6807\u51c6\u7a0b\u5e8f\u96c6\u4e0a\u4ee5\u53ca\u5b9e\u9645\u9879\u76ee\u4e2d\u90fd\u6709\u4e0d\u540c\u7a0b\u5ea6\u7684\u63d0\u5347. \u5176\u4e2d, \u5728 oSIP \u4e2d, Afleer \u6bd4 AFL \u5728\u5206\u652f\u8986\u76d6\u7387\u4e0a\u63d0\u9ad8 2.4 \u500d, \u5728\u8def\u5f84\u8986\u76d6\u7387\u4e0a\u63d0\u5347 6.1 \u500d. \u9664\u6b64\u4e4b\u5916, Afleer \u5728 oSIP \u4e2d\u8fd8\u68c0\u6d4b\u51fa\u4e00\u4e2a\u65b0\u7684\u6f0f\u6d1e.", "total_citations": {"2021": 1, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:wEOyVsangm4C": {"external_link": "https://scholar.google.com/scholar?cluster=18365043189357572864&hl=en&oi=scholarr", "authors": ["Mahinthan Chandramohan", "Yinxing Xue", "Zhengzi Xu", "Yang Liu", "Chia Yuan Cho", "Tan Hee Beng Kuan"], "publication_date": "2018", "journal": "Proceedings of the 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE). Montpellier", "total_citations": {"2021": 1, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RGp4dj-Wy-oC": {"external_link": "https://scholar.google.com/scholar?cluster=1234507902432371447&hl=en&oi=scholarr", "authors": ["Junjie Wang", "Bihuan Chen", "Lei Wei", "Yang Liu"], "publication_date": "2018", "journal": "arXiv preprint arXiv:1812.01197", "total_citations": {"2019": 1, "2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-jghkW3WqMUC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-47846-3_9", "authors": ["Manman Chen", "Tian Huat Tan", "Jun Sun", "Jingyi Wang", "Yang Liu", "Jing Sun", "Jin Song Dong"], "publication_date": "2016/11/14", "conference": "International Conference on Formal Engineering Methods", "pages": "122-140", "publisher": "Springer International Publishing", "description": "Web service composition makes use of existing Web services to build complex business processes. Non-functional requirements are crucial for the Web service composition. In order to satisfy non-functional requirements when composing a Web service, one needs to rely on the estimated quality of the component services. However, estimation is seldom accurate especially in the dynamic environment. Hence, we propose a framework, ADFlow, to monitor and adapt the workflow of the Web service composition when necessary to maximize its ability to satisfy the non-functional requirements automatically. To reduce the monitoring overhead, ADFlow relies on asynchronous monitoring. ADFlow has been implemented and the evaluation has shown the effectiveness and efficiency of our approach. Given a composite service, ADFlow achieves 25\u00a0%\u201332\u00a0% of average improvement in the conformance of non\u00a0\u2026", "total_citations": {"2018": 1, "2019": 0, "2020": 0, "2021": 0, "2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:clk6yq2jaZ8C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-41354-9_2", "authors": ["Tim Muller", "Dongxia Wang", "Yang Liu", "Jie Zhang"], "publication_date": "2016/7/18", "conference": "IFIP International Conference on Trust Management", "pages": "17-32", "publisher": "Springer International Publishing", "description": "In rating systems, users want to construct accurate opinions based on ratings. However, the accuracy is bounded by the amount of information transmitted (leaked) by ratings. Rating systems are susceptible to unfair rating attacks. These attacks may decrease the amount of leaked information, by introducing noise. A robust trust system attempts to mitigate the effects of these attacks on the information leakage. Defenders cannot influence the actual ratings: being honest or from attackers. There are other ways for the defenders to keep the information leakage high: blocking/selecting the right advisors, observing transactions and offering more choices. Blocking suspicious advisors can only decrease robustness. If only a limited number of ratings can be used, however, then less suspicious advisors are better, and in case of a tie, newer advisors are better. Observing transactions increases robustness. Offering\u00a0\u2026", "total_citations": {"2015": 1, "2016": 0, "2017": 0, "2018": 0, "2019": 1, "2020": 0, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Ncwx4PHgTB8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7487547/", "authors": ["Nan Du", "Hesuan Hu", "Yang Liu"], "publication_date": "2016/5/16", "conference": "2016 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "3632-3638", "publisher": "IEEE", "description": "Automated manufacturing systems (AMSs) with complex topologies have become increasingly active in the area of research. However, a prerequisite is indispensable for numerous researchers to investigate AMSs. That is resources are presumptively and arbitrarily assumed never to fail; nevertheless, this does not completely match the reality. In this paper, we consider deadlock and blocking problems in AMSs with unreliable resources and assembly operations. Our objective is to develop a robust supervisory control policy that allocates resources so that parts requiring the failed resource do not block the production of parts not necessarily requiring the failed resource in case any unreliable resource fails unexpectedly. Conventional methods are based on structure-oriented and monolithic specifications. On the contrary, our supervisory policy looks ahead to anticipate whether currently-available resources are\u00a0\u2026", "total_citations": {"2018": 1, "2019": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:WrvHtiK_1SgC": {"external_link": "https://scholar.google.com/scholar?cluster=3911613169327511265&hl=en&oi=scholarr", "authors": ["Mahinthan Chandramohan", "Yinxing Xue", "Zhengzi Xu", "Yang Liu", "Chia Yuan Cho", "Hee Beng Kuan Tan"], "publication_date": "2016", "pages": "678-689", "publisher": "ACM Press, New York, NY, USA", "total_citations": {"2018": 1, "2019": 0, "2020": 1, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aar0OkpPRdAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7372251/", "authors": ["Jianye Hao", "Yinxing Xue", "Mahinthan Chandramohan", "Yang Liu", "Jun Sun"], "publication_date": "2015/11/9", "conference": "2015 IEEE 27th International Conference on Tools with Artificial Intelligence (ICTAI)", "pages": "1085-1092", "publisher": "IEEE", "description": "Network monitoring is an important way to ensure the security of hosts from being attacked by malicious attackers. One challenging problem for network operators is how to distribute the limited monitoring resources (e.g., intrusion detectors) among the network to detect attacks in a cost-effective manner, especially when the attacking strategies can be changing dynamically and unpredictable. To this end, we adopt Markov game to model the interactions between the network operator and the attacker and propose an adaptive Markov strategy (AMS) to determine how the detectors should be placed on the network against possible attacks to minimize the network's accumulated cost over time. The AMS is guaranteed to converge to the best response strategy when the attacker's strategy is fixed (rationality), converge to a fixed strategy under self-play (convergence) and obtain a payoff no less than that under the\u00a0\u2026", "total_citations": {"2016": 1, "2017": 0, "2018": 0, "2019": 1, "2020": 0, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lo0OIn9KAZgC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7338279/", "authors": ["Songzheng Song", "Yang Liu", "Mikhail Auguston", "Jun Sun", "Jin Song Dong", "Tieming Chen"], "publication_date": "2015/9/30", "conference": "2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS)", "pages": "449-449", "publisher": "IEEE", "description": "The analysis of software architecture plays an important role in understanding the system structures and facilitate proper implementation of user requirements. Despite its importance in the software engineering practice, the lack of formal description and verification support in this domain hinders the development of quality architectural models. To tackle this problem, in this work, we develop an approach for modeling and verifying software architectures specified using Monterey Phoenix (MP) architecture description language. MP is capable of modeling system and environment behaviors based on event traces, as well as supporting different architecture composition operations and views. First, we formalize the syntax and operational semantics for MP; therefore, formal verification of MP models is feasible. Second, we extend MP to support shared variables and stochastic characteristics, which not only increases the\u00a0\u2026", "total_citations": {"2018": 2, "2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0xcHesCNKywC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7307734/", "authors": ["Conghua Zhou", "Yong Wang", "Meiling Cao", "Jianqi Shi", "Yang Liu"], "publication_date": "2015/9", "conference": "2015 International Symposium on Theoretical Aspects of Software Engineering (TASE)", "pages": "55-62", "description": "In vehicular ad-hoc network, Media AccessControl (MAC) is one of the technologies which determinewhether the information is transferred reliably and timely or not. It is also a key to the quality of service of self organizationnetworks. Some behaviors of the MAC protocol can be estimatedby experiment and simulation. But the main drawback of thesemethods is that the estimation can not be accurate to support theenough confidence. In this paper, we complete the preciseanalysis of the MAC protocol by probabilistic model checking. First, based on the nature of MAC, its dynamic behavior isabstracted into a probabilistic timed automata which candescribe non-deterministic, continuous time and the probabilityselection of MAC. Then we calculate the probability of the datasent successfully and the probability of the backoff counterreaching the maximum value. The analysis result shows that theprobability of conflict in 802\u00a0\u2026", "total_citations": {"2019": 2, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5Klqo5HVOaoC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-11936-6_18", "authors": ["Dinh-Thuan Le", "Huu-Vu Nguyen", "Van-Tinh Nguyen", "Phuong-Nam Mai", "Bao-Trung Pham-Duy", "Thanh-Tho Quan", "\u00c9tienne Andr\u00e9", "Laure Petrucci", "Yang Liu"], "publication_date": "2014/11/3", "conference": "International Symposium on Automated Technology for Verification and Analysis", "pages": "242-247", "publisher": "Springer International Publishing", "description": "This paper introduces PeCAn, a tool supporting compositional verification of Petri nets. Beyond classical features (such as on-the-fly analysis and synchronisation between multiple Petri nets), PeCAn generates Symbolic Observation Graphs (SOG), and uses their composition to support modular abstractions of multiple Petri nets for more efficient verification. Furthermore, PeCAn implements an incremental strategy based on counter-examples for model-checking, thus improving significantly the cost of execution time and memory space. PeCAn also provides users with the visualisation of the input Petri nets and their corresponding SOGs. We experimented PeCAn with benchmark datasets from the Petri Nets\u2019 model checking contests, showing promising results.", "total_citations": {"2015": 1, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 1, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:54MofcL-yxcC": {"external_link": "https://search.ieice.org/bin/summary.php?id=e97-d_8_2067", "authors": ["Hao Han", "Yinxing Xue", "Keizo Oyama", "Yang Liu"], "publication_date": "2014/8/1", "journal": "IEICE TRANSACTIONS on Information and Systems", "volume": "97", "issue": "8", "pages": "2067-2083", "publisher": "The Institute of Electronics, Information and Communication Engineers", "description": "The rendering mechanism plays an indispensable role in browser-based Web application. It generates active webpages dynamically and provides human-readable layout through template engines, which are used as a standard programming model to separate the business logic and data computations from the webpage presentation. The client-side rendering mechanism, owing to the advances of rich application technologies, has been widely adopted. The adoption of client side rendering brings not only various merits but also new problems. In this paper, we propose and construct \u201cpagelet\u201d, a segment-based template engine for developing flexible and extensible Web applications. By presenting principles, practice and usage experience of pagelet, we conduct a comprehensive analysis of possible advantages and disadvantages brought by client-side rendering mechanism from the viewpoints of both\u00a0\u2026", "total_citations": {"2015": 1, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:XK2cf6JOk9AC": {"external_link": "https://arxiv.org/abs/1403.2237", "authors": ["Li Li", "Jun Pang", "Yang Liu", "Jun Sun", "Jin Song Dong"], "publication_date": "2014/3/10", "journal": "arXiv preprint arXiv:1403.2237", "description": "A long-standing research problem in security protocol design is how to efficiently verify security protocols with tamper-resistant global states. In this paper, we address this problem by first proposing a protocol specification framework, which explicitly represents protocol execution states and state transformations. Secondly, we develop an algorithm for verifying security properties by utilizing the key ingredients of the first-order reasoning for reachability analysis, while tracking state transformation and checking the validity of newly generated states. Our verification algorithm is proven to be (partially) correct, if it terminates. We have implemented the proposed framework and verification algorithms in a tool named SSPA, and evaluate it using a number of stateful security protocols. The experimental results show that our approach is not only feasible but also practically efficient. In particular, we have found a security flaw on the digital envelope protocol, which could not be detected by existing security protocol verifiers.", "total_citations": {"2017": 1, "2018": 0, "2019": 0, "2020": 1, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:zDhyt2jClVkC": {"external_link": "https://www.comp.nus.edu.sg/~pat/detection/report.pdf", "authors": ["Shao Jie Zhang", "Jun Sun", "Chengnian Sun", "Yang Liu", "Junwei Ma", "Jin Song Dong"], "publication_date": "2013", "description": "We present an automatic approach to detecting symmetry relations for general concurrent models. Despite the success of symmetry reduction in mitigating state explosion problem, one essential step towards its soundness and effectiveness, ie, how to discover sufficient symmetries with least human effort, is often either overlooked or oversimplified. In this work, we show how a concurrent model can be viewed as a constraint satisfaction problem (CSP), and present an algorithm capable of detecting arbitrary symmetries arising from the CSP which induce automorphisms of the model. Unlike previous approaches, our method can automatically detect both various process and data symmetries as demonstrated via a number of systems. Further, we propose an inductive approach to inferring symmetries in a parameterized system from the symmetries detected over a small set of its instances.", "total_citations": {"2013": 1, "2014": 1, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:b1wdh0AR-JQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/5502836/", "authors": ["Xian Zhang", "Yang Liu", "Mikhail Auguston"], "publication_date": "2010/6/9", "conference": "2010 Fourth International Conference on Secure Software Integration and Reliability Improvement", "pages": "217-226", "publisher": "IEEE", "description": "Security protocols are hard to design, even under the assumption of perfect cryptography. This is especially true when a protocol involves different timing aspects such as timestamps, timeout, delays and a set of timing constraints. In this paper, we propose a methodology for modeling and analyzing security protocols that are aware of timing aspects. We develop a formalism for modeling security protocols by extending Timed CSP with the capability of stating complicated timing behaviors for processes and events. A reasoning mechanism for the proposed formalism is developed based on Constraint Logic Programming (CLP). Using the reasoning engine built in CLP, the authentication properties of timed security protocols are able to be verified and attacks can be discovered. We demonstrate the capability of our method by modeling and verifying real-world security protocols. New approaches of using timing\u00a0\u2026", "total_citations": {"2011": 1, "2012": 1, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0EnyYjriUFMC": {"external_link": "https://link.springer.com/article/10.1007/s11704-008-0035-6", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Jing Sun"], "publication_date": "2008/12/1", "journal": "Frontiers of Computer Science in China", "volume": "2", "issue": "4", "pages": "368-379", "publisher": "Higher Education Press, co-published with Springer-Verlag GmbH", "description": "Verification techniques like SAT-based bounded model checking have been successfully applied to a variety of system models. Applying bounded model checking to compositional process algebras is, however, a highly non-trivial task. One challenge is that the number of system states for process algebra models is not statically known, whereas exploring the full state space is computationally expensive. This paper presents a compositional encoding of hierarchical processes as SAT problems and then applies state-of-the-art SAT solvers for bounded model checking. The encoding avoids exploring the full state space for complex systems so as to deal with state space explosion. We developed an automated analyzer which combines complementing model checking techniques (i.e., bounded model checking and explicit onthe-fly model checking) to validate system models against event-based temporal\u00a0\u2026", "total_citations": {"2009": 1, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 1, "2015": 0, "2016": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:w_dVLYmSw0MC": {"external_link": "https://arxiv.org/abs/2308.03419", "authors": ["Lyuye Zhang", "Chengwei Liu", "Sen Chen", "Zhengzi Xu", "Lingling Fan", "Lida Zhao", "Yiran Zhang", "Yang Liu"], "publication_date": "2023/8/7", "journal": "arXiv preprint arXiv:2308.03419", "description": "Vulnerabilities from third-party libraries (TPLs) have been unveiled to threaten the Maven ecosystem. Despite patches being released promptly after vulnerabilities are disclosed, the libraries and applications in the community still use the vulnerable versions, which makes the vulnerabilities persistent in the Maven ecosystem (e.g., the notorious Log4Shell still greatly influences the Maven ecosystem nowadays from 2021). Both academic and industrial researchers have proposed user-oriented standards and solutions to address vulnerabilities, while such solutions fail to tackle the ecosystem-wide persistent vulnerabilities because it requires a collective effort from the community to timely adopt patches without introducing breaking issues. To seek an ecosystem-wide solution, we first carried out an empirical study to examine the prevalence of persistent vulnerabilities in the Maven ecosystem. Then, we identified affected libraries for alerts by implementing an algorithm monitoring downstream dependents of vulnerabilities based on an up-to-date dependency graph. Based on them, we further quantitatively revealed that patches blocked by upstream libraries caused the persistence of vulnerabilities. After reviewing the drawbacks of existing countermeasures, to address them, we proposed a solution for range restoration (Ranger) to automatically restore the compatible and secure version ranges of dependencies for downstream dependents. The automatic restoration requires no manual effort from the community, and the code-centric compatibility assurance ensures smooth upgrades to patched versions. Moreover, Ranger along with the ecosystem\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:oOKmA6HlCLsC": {"external_link": "https://arxiv.org/abs/2308.03314", "authors": ["Yuqiang Sun", "Daoyuan Wu", "Yue Xue", "Han Liu", "Haijun Wang", "Zhengzi Xu", "Xiaofei Xie", "Yang Liu"], "publication_date": "2023/8/7", "journal": "arXiv preprint arXiv:2308.03314", "description": "Smart contracts are prone to various vulnerabilities, leading to substantial financial losses over time. Current analysis tools mainly target vulnerabilities with fixed control or dataflow patterns, such as re-entrancy and integer overflow. However, a recent study on Web3 security bugs revealed that about 80% of these bugs cannot be audited by existing tools due to the lack of domain-specific property description and checking. Given recent advances in Generative Pretraining Transformer (GPT), it is worth exploring how GPT could aid in detecting logic vulnerabilities in smart contracts. In this paper, we propose GPTScan, the first tool combining GPT with static analysis for smart contract logic vulnerability detection. Instead of relying solely on GPT to identify vulnerabilities, which can lead to high false positives and is limited by GPT's pre-trained knowledge, we utilize GPT as a versatile code understanding tool. By breaking down each logic vulnerability type into scenarios and properties, GPTScan matches candidate vulnerabilities with GPT. To enhance accuracy, GPTScan further instructs GPT to intelligently recognize key variables and statements, which are then validated by static confirmation. Evaluation on diverse datasets with around 400 contract projects and 3K Solidity files shows that GPTScan achieves high precision (over 90%) for token contracts and acceptable precision (57.14%) for large projects like Web3Bugs. It effectively detects groundtruth logic vulnerabilities with a recall of over 80%, including 9 new vulnerabilities missed by human auditors. GPTScan is fast and cost-effective, taking an average of 14.39 seconds and 0.01 USD to scan\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HaiYZdWvYCYC": {"external_link": "https://ojs.aaai.org/index.php/AAAI/article/view/25958", "authors": ["Rui Huang", "Ruofei Wang", "Qing Guo", "Jieda Wei", "Yuxiang Zhang", "Wei Fan", "Yang Liu"], "publication_date": "2023/6/26", "journal": "Proceedings of the AAAI Conference on Artificial Intelligence", "volume": "37", "issue": "7", "pages": "7919-7927", "description": "Change detection (CD) is to decouple object changes (ie, object missing or appearing) from background changes (ie, environment variations) like light and season variations in two images captured in the same scene over a long time span, presenting critical applications in disaster management, urban development, etc. In particular, the endless patterns of background changes require detectors to have a high generalization against unseen environment variations, making this task significantly challenging. Recent deep learning-based methods develop novel network architectures or optimization strategies with paired-training examples, which do not handle the generalization issue explicitly and require huge manual pixel-level annotation efforts. In this work, for the first attempt in the CD community, we study the generalization issue of CD from the perspective of data augmentation and develop a novel weakly supervised training algorithm that only needs image-level labels. Different from general augmentation techniques for classification, we propose the background-mixed augmentation that is specifically designed for change detection by augmenting examples under the guidance of a set of background changing images and letting deep CD models see diverse environment variations. Moreover, we propose the augmented & real data consistency loss that encourages the generalization increase significantly. Our method as a general framework can enhance a wide range of existing deep learning-based detectors. We conduct extensive experiments in two public datasets and enhance four state-of-the-art methods, demonstrating the advantages\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aOEnwurrEPcC": {"external_link": "https://arxiv.org/abs/2304.10755", "authors": ["Xinliang Zhou", "Chenyu Liu", "Liming Zhai", "Ziyu Jia", "Cuntai Guan", "Yang Liu"], "publication_date": "2023/4/21", "journal": "arXiv preprint arXiv:2304.10755", "description": "The close coupling of artificial intelligence (AI) and electroencephalography (EEG) has substantially advanced human-computer interaction (HCI) technologies in the AI era. Different from traditional EEG systems, the interpretability and robustness of AI-based EEG systems are becoming particularly crucial. The interpretability clarifies the inner working mechanisms of AI models and thus can gain the trust of users. The robustness reflects the AI's reliability against attacks and perturbations, which is essential for sensitive and fragile EEG signals. Thus the interpretability and robustness of AI in EEG systems have attracted increasing attention, and their research has achieved great progress recently. However, there is still no survey covering recent advances in this field. In this paper, we present the first comprehensive survey and summarize the interpretable and robust AI techniques for EEG systems. Specifically, we first propose a taxonomy of interpretability by characterizing it into three types: backpropagation, perturbation, and inherently interpretable methods. Then we classify the robustness mechanisms into four classes: noise and artifacts, human variability, data acquisition instability, and adversarial attacks. Finally, we identify several critical and unresolved challenges for interpretable and robust AI in EEG systems and further discuss their future directions.", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:dVnQPkO1q_gC": {"external_link": "https://link.springer.com/article/10.1007/s11432-020-3403-2", "authors": ["Bihuan Chen", "Yang Liu", "Xin Peng", "Yijian Wu", "Shengchao Qin"], "publication_date": "2023/3", "journal": "Science China Information Sciences", "volume": "66", "issue": "3", "pages": "132101", "publisher": "Science China Press", "description": "Random testing is scalable but often fails to hit corner program behaviors, while systematic testing (e.g., concolic execution) is promising to cover corner program behaviors but is not scalable to explore all program behaviors. Prior attempts to integrate random testing with systematic testing lack targeted guidance. In this paper, we propose a guided hybrid testing approach, named Baton, to synergize random testing with concolic testing. It integrates the knowledge inside test cases and their executions into a conditional execution graph, and uses such knowledge to guide test case generation. Specifically, we learn classification models for some conditionals in the conditional execution graph in a demand-driven way. These models are used to guide random testing to reach and cover partially-covered conditionals. We further employ targeted concolic testing to cover conditionals that cannot be fully covered by guided\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6g4f2aSzPAQC": {"external_link": "https://arxiv.org/abs/2301.12738", "authors": ["Yuan Zhou", "Gengjie Lin", "Yun Tang", "Kairui Yang", "Wei Jing", "Ping Zhang", "Junbo Chen", "Liang Gong", "Yang Liu"], "publication_date": "2023/1/30", "journal": "arXiv preprint arXiv:2301.12738", "description": "It has become a consensus that autonomous vehicles (AVs) will first be widely deployed on highways. However, the complexity of highway interchanges becomes the bottleneck for deploying AVs. An AV should be sufficiently tested under different highway interchanges, which is still challenging due to the lack of available datasets containing diverse highway interchanges. In this paper, we propose a model-driven method, FLYOVER, to generate a dataset consisting of diverse interchanges with measurable diversity coverage. First, FLYOVER proposes a labeled digraph to model the topology of an interchange. Second, FLYOVER takes real-world interchanges as input to guarantee topology practicality and extracts different topology equivalence classes by classifying the corresponding topology models. Third, for each topology class, FLYOVER identifies the corresponding geometrical features for the ramps and generates concrete interchanges using k-way combinatorial coverage and differential evolution. To illustrate the diversity and applicability of the generated interchange dataset, we test the built-in traffic flow control algorithm in SUMO and the fuel-optimization trajectory tracking algorithm deployed to Alibaba's autonomous trucks on the dataset. The results show that except for the geometrical difference, the interchanges are diverse in throughput and fuel consumption under the traffic flow control and trajectory tracking algorithms, respectively.", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:gyhANspY9yIC": {"external_link": "https://arxiv.org/abs/2212.10017", "authors": ["Wei Ma", "Mengjie Zhao", "Xiaofei Xie", "Qiang Hu", "Shangqing Liu", "Jie Zhang", "Wenhan Wang", "Yang Liu"], "publication_date": "2022/12/20", "journal": "arXiv preprint arXiv:2212.10017", "description": "Pre-trained language models for programming languages have shown a powerful ability on processing many Software Engineering (SE) tasks, e.g., program synthesis, code completion, and code search. However, it remains to be seen what is behind their success. Recent studies have examined how pre-trained models can effectively learn syntax information based on Abstract Syntax Trees. In this paper, we figure out what role the self-attention mechanism plays in understanding code syntax and semantics based on AST and static analysis. We focus on a well-known representative code model, CodeBERT, and study how it can learn code syntax and semantics by the self-attention mechanism and Masked Language Modelling (MLM) at the token level. We propose a group of probing tasks to analyze CodeBERT. Based on AST and static analysis, we establish the relationships among the code tokens. First, Our results show that CodeBERT can acquire syntax and semantics knowledge through self-attention and MLM. Second, we demonstrate that the self-attention mechanism pays more attention to dependence-relationship tokens than to other tokens. Different attention heads play different roles in learning code semantics; we show that some of them are weak at encoding code semantics. Different layers have different competencies to represent different code properties. Deep CodeBERT layers can encode the semantic information that requires some complex inference in the code context. More importantly, we show that our analysis is helpful and leverage our conclusions to improve CodeBERT. We show an alternative approach for pre\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2MSJ22rj538C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3540250.3549125", "authors": ["Congying Xu", "Bihuan Chen", "Chenhao Lu", "Kaifeng Huang", "Xin Peng", "Yang Liu"], "publication_date": "2022/11/7", "book": "Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "pages": "860-871", "description": "Open source software (OSS) vulnerabilities threaten the security of software systems that use OSS. Vulnerability databases provide valuable information (e.g., vulnerable version and patch) to mitigate OSS vulnerabilities. There arises a growing concern about the information quality of vulnerability databases. However, it is unclear what the quality of patches in existing vulnerability databases is; and existing manual or heuristic-based approaches for patch tracking are either too expensive or too specific to apply to all OSS vulnerabilities.     To address these problems, we first conduct an empirical study to understand the quality and characteristics of patches for OSS vulnerabilities in two industrial vulnerability databases. Inspired by our study, we then propose the first automated approach, Tracer, to track patches for OSS vulnerabilities from multiple knowledge sources. Our evaluation has demonstrated that i) Tracer\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:PjKh-f16SfUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3551349.3560427", "authors": ["Lili Quan", "Qianyu Guo", "Xiaofei Xie", "Sen Chen", "Xiaohong Li", "Yang Liu"], "publication_date": "2022/10/10", "book": "Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering", "pages": "1-13", "description": "Quality assurance is of great importance for deep learning (DL) systems, especially when they are applied in safety-critical applications. While quality issues of native DL applications have been extensively analyzed, the issues of JavaScript-based DL applications have never been systematically studied. Compared with native DL applications, JavaScript-based DL applications can run on major browsers, making the platform- and device-independent. Specifically, the quality of JavaScript-based DL applications depends on the 3 parts: the application, the third-party DL library used and the underlying DL framework (e.g., TensorFlow.js), called JavaScript-based DL system. In this paper, we conduct the first empirical study on the quality issues of JavaScript-based DL systems. Specifically, we collect and analyze 700 real-world faults from relevant GitHub repositories, including the official TensorFlow.js repository, 13\u00a0\u2026", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:c5LcigzBm8MC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9760153/", "authors": ["Yao Zhang", "Xiaofei Xie", "Yi Li", "Yun Lin", "Sen Chen", "Yang Liu", "Xiaohong Li"], "publication_date": "2022/4/19", "journal": "IEEE Transactions on Software Engineering", "volume": "49", "issue": "3", "pages": "947-961", "publisher": "IEEE", "description": "Over the past few years, SMT string solvers have found their applications in an increasing number of domains, such as program analyses in mobile and Web applications, which require the ability to reason about string values. A series of research has been carried out to find quality issues of string solvers in terms of its correctness and performance. Yet, none of them has considered the performance regressions happening across multiple versions of a string solver. To fill this gap, in this paper, we focus on solver performance regressions (SPRs), i.e., unintended slowdowns introduced during the evolution of string solvers. To this end, we develop  SPRFinder to not only generate test cases demonstrating SPRs, but also localize the probable causes of them, in terms of commits. We evaluated the effectiveness of  SPRFinder on three state-of-the-art string solvers, i.e., Z3Seq, Z3Str3, and CVC4. The results demonstrate\u00a0\u2026", "total_citations": {"2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kRWl-cVF35UC": {"external_link": "https://arxiv.org/abs/2204.08237", "authors": ["Can Yang", "Zhengzi Xu", "Hongxu Chen", "Yang Liu", "Xiaorui Gong", "Baoxu Liu"], "publication_date": "2022/4/18", "journal": "arXiv preprint arXiv:2204.08237", "description": "With the rapid growth of software, using third-party libraries (TPLs) has become increasingly popular. The prosperity of the library usage has provided the software engineers with handful of methods to facilitate and boost the program development. Unfortunately, it also poses great challenges as it becomes much more difficult to manage the large volume of libraries. Researches and studies have been proposed to detect and understand the TPLs in the software. However, most existing approaches rely on syntactic features, which are not robust when these features are changed or deliberately hidden by the adversarial parties. Moreover, these approaches typically model each of the imported libraries as a whole, therefore, cannot be applied to scenarios where the host software only partially uses the library code segments. To detect both fully and partially imported TPLs at the semantic level, we propose ModX, a framework that leverages novel program modularization techniques to decompose the program into finegrained functionality-based modules. By extracting both syntactic and semantic features, it measures the distance between modules to detect similar library module reuse in the program. Experimental results show that ModX outperforms other modularization tools by distinguishing more coherent program modules with 353% higher module quality scores and beats other TPL detection tools with on average 17% better in precision and 8% better in recall.", "total_citations": {"2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:jmwITWCuk8IC": {"external_link": "https://www.usenix.org/conference/usenixsecurity22/winter-accepted-papers", "authors": ["Yeting Li", "Yecheng Sun", "Zhiwu Xu", "Jialun Cao", "Yuekang Li", "Rongchen Li", "Haiming Chen", "Shing-Chi Cheung", "Yang Liu", "Yang Xiao"], "publication_date": "2022", "conference": "31st USENIX Security Symposium (USENIX Security 22)", "pages": "4183-4200", "description": "Targeted deanonymization attacks let a malicious website discover whether a website visitor bears a certain public identifier, such as an email address or a Twitter handle. These attacks were previously considered to rely on several assumptions, limiting their practical impact. In this work, we challenge these assumptions and show the attack surface for deanonymization attacks is drastically larger than previously considered. We achieve this by using the cache side channel for our attack, instead of relying on cross-site leaks. This makes our attack oblivious to recently proposed software-based isolation mechanisms, including cross-origin resource policies (CORP), cross-origin opener policies (COOP) and SameSite cookie attribute. We evaluate our attacks on multiple hardware microarchitectures, multiple operating systems and multiple browser versions, including the highly-secure Tor Browser, and demonstrate practical targeted deanonymization attacks on major sites, including Google, Twitter, LinkedIn, TikTok, Facebook, Instagram and Reddit. Our attack runs in less than 3 seconds in most cases, and can be scaled to target an exponentially large amount of users.To stop these attacks, we present a full-featured defense deployed as a browser extension. To minimize the risk to vulnerable individuals, our defense is already available on the Chrome and Firefox app stores. We have also responsibly disclosed our findings to multiple tech vendors, as well as to the Electronic Frontier Foundation. Finally, we provide guidance to websites and browser vendors, as well as to users who cannot install the extension.", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:nlKf13ul9_IC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9678910/", "authors": ["Cen Zhang", "Yuekang Li", "Hongxu Chen", "Xiaoxing Luo", "Miaohua Li", "Anh Quynh Nguyen", "Yang Liu"], "publication_date": "2021/11/15", "conference": "2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1161-1165", "publisher": "IEEE", "description": "Internet-of-things (IoT) or mobile devices are omnipresent in our daily life; the security issues inside them are especially crucial. Greybox fuzzing has been shown effective in detecting vulnerabilities. However, applications in IoT or mobile devices are usually proprietary to specific vendors, fuzzers are required to support binary-only targets. Moreover, since these devices are of heterogeneous architecture, assigned with limited resources, and many testing targets are server-like programs, applying existing fuzzing techniques faces great challenges.This paper proposes BIFF, a general-purpose fuzzer that aims to stress these issues. It supports binary-only targets, is general (supports multiple CPU architectures including Intel, ARM, MIPS, and PowerPC), fast (has the lowest runtime overhead compared to existing fuzzers), and flexible (uses a new fuzzing workflow that can fuzz any piece of code inside the target binary\u00a0\u2026", "total_citations": {"2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EF0m1YoOS5EC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9644710/", "authors": ["Xingshuo Han", "Kangjie Chen", "Yuan Zhou", "Meikang Qiu", "Chun Fan", "Yang Liu", "Tianwei Zhang"], "publication_date": "2021/9/1", "conference": "2021 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)", "pages": "836-844", "publisher": "IEEE", "description": "Autonomous Vehicles (AVs) are equipped with various sensors and controlled by Autonomous Driving Systems (ADSs) to provide high-level autonomy. When interacting with the environment, AVs suffer from a broad attack surface, and the sensory data are susceptible to anomalies caused by faults, sensor malfunctions, or attacks, which may jeopardize traffic safety and result in serious accidents. Most of the current works focus on anomaly detection of specific attacks, such as GPS spoofing or traffic sign attacks. There are no works on scenario-aware anomaly detection for ADSs. In this paper, focusing on the lane-following scenario, we introduce a novel transformer-based one-class classification model to identify time series anomalies and adversarial image examples. It can detect GPS spoofing, traffic sign recognition and lane detection attacks with high efficiency and accuracy. We further design a Swin\u00a0\u2026", "total_citations": {"2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ypzvKOdbExQC": {"external_link": "https://arxiv.org/abs/2107.13452", "authors": ["Qing Guo", "Zhijie Wang", "Felix Juefei-Xu", "Di Lin", "Lei Ma", "Wei Feng", "Yang Liu"], "publication_date": "2021/7/28", "journal": "arXiv preprint arXiv:2107.13452", "description": "3D point cloud completion is very challenging because it heavily relies on the accurate understanding of the complex 3D shapes (e.g., high-curvature, concave/convex, and hollowed-out 3D shapes) and the unknown & diverse patterns of the partially available point clouds. In this paper, we propose a novel solution,i.e., Point-block Carving (PC), for completing the complex 3D point cloud completion. Given the partial point cloud as the guidance, we carve a3D block that contains the uniformly distributed 3D points, yielding the entire point cloud. To achieve PC, we propose a new network architecture, i.e., CarveNet. This network conducts the exclusive convolution on each point of the block, where the convolutional kernels are trained on the 3D shape data. CarveNet determines which point should be carved, for effectively recovering the details of the complete shapes. Furthermore, we propose a sensor-aware method for data augmentation,i.e., SensorAug, for training CarveNet on richer patterns of partial point clouds, thus enhancing the completion power of the network. The extensive evaluations on the ShapeNet and KITTI datasets demonstrate the generality of our approach on the partial point clouds with diverse patterns. On these datasets, CarveNet successfully outperforms the state-of-the-art methods.", "total_citations": {"2022": 1, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:nZtlP1Cc3DIC": {"external_link": "https://arxiv.org/abs/2012.04884", "authors": ["Jakub Breier", "Adrian Baldwin", "Helen Balinsky", "Yang Liu"], "publication_date": "2020/12/9", "journal": "arXiv preprint arXiv:2012.04884", "description": "Adversarial attacks for machine learning models have become a highly studied topic both in academia and industry. These attacks, along with traditional security threats, can compromise confidentiality, integrity, and availability of organization's assets that are dependent on the usage of machine learning models. While it is not easy to predict the types of new attacks that might be developed over time, it is possible to evaluate the risks connected to using machine learning models and design measures that help in minimizing these risks. In this paper, we outline a novel framework to guide the risk management process for organizations reliant on machine learning models. First, we define sets of evaluation factors (EFs) in the data domain, model domain, and security controls domain. We develop a method that takes the asset and task importance, sets the weights of EFs' contribution to confidentiality, integrity, and availability, and based on implementation scores of EFs, it determines the overall security state in the organization. Based on this information, it is possible to identify weak links in the implemented security measures and find out which measures might be missing completely. We believe our framework can help in addressing the security issues related to usage of machine learning models in organizations and guide them in focusing on the adequate security measures to protect their assets.", "total_citations": {"2022": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:m5Mwo8ouzesC": {"external_link": "https://arxiv.org/abs/2010.16323", "authors": ["Tzvika Shapira", "David Berend", "Ishai Rosenberg", "Yang Liu", "Asaf Shabtai", "Yuval Elovici"], "publication_date": "2020/10/30", "journal": "arXiv preprint arXiv:2010.16323", "description": "The performance of a machine learning-based malware classifier depends on the large and updated training set used to induce its model. In order to maintain an up-to-date training set, there is a need to continuously collect benign and malicious files from a wide range of sources, providing an exploitable target to attackers. In this study, we show how an attacker can launch a sophisticated and efficient poisoning attack targeting the dataset used to train a malware classifier. The attacker's ultimate goal is to ensure that the model induced by the poisoned dataset will be unable to detect the attacker's malware yet capable of detecting other malware. As opposed to other poisoning attacks in the malware detection domain, our attack does not focus on malware families but rather on specific malware instances that contain an implanted trigger, reducing the detection rate from 99.23% to 0% depending on the amount of poisoning. We evaluate our attack on the EMBER dataset with a state-of-the-art classifier and malware samples from VirusTotal for end-to-end validation of our work. We propose a comprehensive detection approach that could serve as a future sophisticated defense against this newly discovered severe threat.", "total_citations": {"2023": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:mSXQG6lSlFkC": {"external_link": "https://scholar.google.com/scholar?cluster=3391440199154159872&hl=en&oi=scholarr", "authors": ["Y Huang", "F Juefei-Xu", "Q Guo", "X Xie", "L Ma", "W Miao", "Y Liu", "G Pu"], "publication_date": "2020", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ix4AEQmNN7wC": {"external_link": "https://scholar.google.com/scholar?cluster=8050855463726527112&hl=en&oi=scholarr", "authors": ["Shangqing Liu", "Cuiyun Gao", "Sen Chen", "Nie Lun Yiu", "Yang Liu"], "publication_date": "2019", "journal": "ATOM: Commit Message Generation Based on Abstract Syntax Tree and Hybrid Ranking", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:VWrUr7O2Zk8C": {"external_link": "https://scholar.google.com/scholar?cluster=1861964146793473313&hl=en&oi=scholarr", "authors": ["Shangqing Liu", "Cuiyun Gao", "Sen Chen", "Lun Yiu Nie", "Yang Liu"], "publication_date": "2019", "journal": "arXiv preprint arXiv:1912.02972", "total_citations": {"2020": 1, "2021": 0, "2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:eeRCOjARQ4cC": {"external_link": "https://scholar.google.com/scholar?cluster=14815091345781432394&hl=en&oi=scholarr", "authors": ["Xiaoning Du", "Bihuan Chen", "Yuekang Li", "Jianmin Guo", "Yaqin Zhou", "Yang Liu", "Yu Jiang"], "publication_date": "2019", "publisher": "ICSE", "total_citations": {"2018": 1, "2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1zNUifcpCKoC": {"external_link": "https://link.springer.com/article/10.1007/s11432-017-9133-4", "authors": ["Ting Wang", "Tieming Chen", "Yang Liu", "Ye Wang"], "publication_date": "2018/5", "journal": "Science China Information Sciences", "volume": "61", "issue": "5", "pages": "1-17", "publisher": "Science China Press", "description": "Refinement checking answers the question on whether an implementation model is a refinement of a specification model, which is of great value for system verification. Some refinement relationships, e.g., trace refinement and failures/divergence refinement, have been recognized for different verification purposes. In general, refinement checking algorithms often rely on subset construction, which incurs in the state space explosion problem. Recently the anti-chain based approach has been suggested for trace refinement checking, and the results show a significant improvement. In this paper, we investigate the problems of applying the anti-chain approach to timed refinement checking (a timed implementation vs. a timed or untimed specification) and probabilistic refinement checking (a probabilistic implementation vs. a non-probabilistic specification), and show that the state space can be reduced\u00a0\u2026", "total_citations": {"2018": 1, "2019": 0, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yFpZgd9WRDkC": {"external_link": "https://scholar.google.com/scholar?cluster=4317465541113198717&hl=en&oi=scholarr", "authors": ["Alvin Chan", "Lei Ma", "Felix Juefei-Xu", "Xiaofei Xie", "Yang Liu", "Yew Soon Ong"], "publication_date": "2018", "journal": "arXiv preprint arXiv:1809.02444", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2168PZyDXAcC": {"external_link": "https://scholar.google.com/scholar?cluster=2679761781921235249&hl=en&oi=scholarr", "authors": ["Xiaolu Hou", "Jakub Breier", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2018", "journal": "IACR Cryptol. ePrint Arch.", "volume": "2018", "pages": "545", "description": "Emerging technologies with the requirement of small size and portability, such as Internet-of-Things devices, represent a good target for physical attacks, eg, fault attacks. These attacks often aim at revealing secrets used in cryptographic algorithms, which are the essential building block for communication protocols. Differential Fault Analysis (DFA) is considered as the most popular fault analysis method. While there are techniques that provide a fault analysis automation on the cipher level to some degree, it can be shown that when it comes to software implementations, there are new vulnerabilities, which cannot be found by observing the cipher design specification.This work bridges the gap by providing a fully automated way to carry out DFA on assembly implementations of symmetric block ciphers. We use a customized data flow graph to represent the program and develop a novel fault analysis methodology to capture the program behavior under faults. We establish an effective description of DFA as constraints that are passed to an SMT solver. We create a tool that takes assembly code as input, analyzes the dependencies among instructions, automatically attacks vulnerable instructions using SMT solver and outputs the attack details that recover the last round key (and possibly the earlier keys). We support our design with evaluations on lightweight ciphers SIMON, SPECK, and PRIDE, and a current NIST standard, AES. By automated assembly analysis, we were able to find new efficient DFA attacks on SIMON, SPECK and PRIDE, exploiting implementation specific vulnerabilities, and a previously published DFA on AES. Moreover, we\u00a0\u2026", "total_citations": {"2019": 1, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:22N0J9dj6kwC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7989346/", "authors": ["Yan Yang", "HeSuan Hu", "Yang Liu"], "publication_date": "2017/5/29", "conference": "2017 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "3016-3023", "publisher": "IEEE", "description": "One of the major challenges from both a theoretical and practical perspectives, for effectively establishing unattended operation of automated manufacturing systems (AMSs), is to resolve the deadlock. In the existing methods on deadlock problem, most of them are focused on the models with either flexible routes or assembly operations, whereas few method investigates them with both. Furthermore, applying these methods into large-scale systems is usually nontrivial, primarily because of the fact that they generally require the enumeration of all the states or siphons. The work presented in this paper proposes a Petri net-based model which can deal with both features and develops an innovative distributed strategy that provides an online and dynamic mechanism for deadlock resolution. Each step's execution depends on a search-based procedure that seeks to determine whether there exists a feasible event\u00a0\u2026", "total_citations": {"2018": 1, "2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:d2hLqSNro9AC": {"external_link": "https://scholar.google.com/scholar?cluster=2925769750447261439&hl=en&oi=scholarr", "authors": ["Yuekang Li", "Bihuan Chen", "Mahinthan Chandramohan", "Shang-Wei Lin", "Yang Liu", "Alwen Tiu"], "publication_date": "2017", "journal": "Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering (ESEC/FSE), ESEC/FSE", "volume": "17", "total_citations": {"2019": 1, "2020": 0, "2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:P6jpBLdrFncC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7816578/", "authors": ["Zhimin Wu", "Yi Xu", "Akin Gunay", "Yang Liu", "Shengchao Qin"], "publication_date": "2016/11/6", "conference": "2016 21st International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "135-144", "publisher": "IEEE", "description": "Model checking is an automated technique for verifying temporal logic properties of finite state systems. Tarjan's algorithm for detecting Strongly Connected Components (SCCs) is a widely used depth-first search procedure for Automatabased (LTL) model checking. It works on the SCC detection on-the-fly with the composition of transition systems and B\u00fcchi Automaton (state space generation), which has been deployed as sequential implementations in many tools. However, these implementations suffer from heavy time cost for systems which involve a large number of SCC explorations. To address this issue, in this paper, we develop a concurrent SCC detection approach for the on-the-fly generated state space in LTL model checking by expanding the existing concurrent Tarjan's algorithm. Besides, we involve fairness checking. Different that the previous work, which performs fairness checking after the\u00a0\u2026", "total_citations": {"2017": 1, "2018": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:b15ltGHXyxQC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-46840-2_1", "authors": ["Tim Muller", "Jie Zhang", "Yang Liu"], "publication_date": "2016/5/9", "conference": "International Conference on Autonomous Agents and Multiagent Systems", "pages": "1-12", "publisher": "Springer International Publishing", "description": "The computational trust paradigm supposes that it is possible to quantify trust relations that occur within some software systems. The paradigm covers a variety of trust systems, such as trust management systems, reputation systems and trust-based security systems. Different trust systems have different assumptions, and various trust models have been developed on top of these assumptions Typically, trust models are incomparable, or even mutually unintelligible; as a result their evaluation may be circular or biased. We propose a unified language to express the trust models and trust systems. Within the language, all trust models are comparable, and the problem of circularity or bias is mitigated. Moreover, given a complete set of assumptions in the language, a unique trust model is defined.", "total_citations": {"2021": 1, "2022": 0, "2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JtjtGO9FvpUC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7307727/", "authors": ["Jin Song Dong", "Jun Sun", "Yang Liu", "Yuan Fang Li", "Jing Sun", "Ling Shi"], "publication_date": "2015/9/12", "conference": "2015 International Symposium on Theoretical Aspects of Software Engineering", "pages": "4-6", "publisher": "IEEE", "description": "Model checking has been pervasive and successful in finding bugs in hardware and software systems, including real-time and probabilistic systems. Applying model checking to decision making is relative new and has an excellent potential to be compliment to data analytics and other Artificial Intelligent (AI) or Operational Research (OR) based decision making techniques. Our last 8 years research has focused on the development of PAT (Process Analysis Toolkit) [18] whichsupports modelling languages that combine the expressiveness of event, state, time and probability based modeling techniques to which model checking can be directly applied. The next direction for PAT is to move from verification to analytics, we call it \"Event Analytics\" with a special focus on \"Strategy Analytics\".", "total_citations": {"2019": 1, "2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:J1AsQIbV7j8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7139294/", "authors": ["HeSuan Hu", "Chen Chen", "Yang Liu", "Yan Yang"], "publication_date": "2015/5/26", "conference": "2015 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "969-975", "publisher": "IEEE", "description": "Most contemporary manufacturing systems appear as complex event-driven automation facilities. Supervisor synthesis and simplification are fundamental in automated manufacturing systems (AMSs). From design and implementation standpoints, it is preferable to decrease supervisor scales so as to mitigate their realization expense. Ordinary and general Petri nets are considered as powerful formalisms to describe, analyze, and control AMSs. The former is concise while the latter is compact. By considering both cases, our approach shows some properties so as to disclose their rationales with regard to liveness enforcement. Many control methodologies are developed in the context of the ordinary ones. They are straightforward but might be unadaptable to the general ones. This work develops new theory in this perspective. Some comparison and contrast survey has been demonstrated in order to clarify their\u00a0\u2026", "total_citations": {"2016": 1, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:l07DEcJES74C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-10882-7_2", "authors": ["Jin Song Dong", "Jun Sun", "Yang Liu", "Yuan-Fang Li"], "publication_date": "2014/9/17", "conference": "International Colloquium on Theoretical Aspects of Computing", "pages": "17-24", "publisher": "Springer International Publishing", "description": "The process analysis toolkit (PAT) integrates the expressiveness of state, event, time, and probability-based languages with the power of model checking. PAT is a self-contained reasoning system for system specification, simulation, and verification. PAT currently supports a wide range of 12 different expressive modeling languages with many application domains and has attracted thousands of registered users from hundreds of organizations. In this invited talk, we will present the PAT system and its vision on \u201cEvent Analytics\u201d (EA) which is beyond \u201cData Analytics\u201d. The EA research is based on applying model checking to event planning, scheduling, prediction, strategy analysis and decision making. Various new EA research directions will be discussed.", "total_citations": {"2014": 1, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bCDyRX4i8-MC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6899392/", "authors": ["HeSuan Hu", "Chen Chen", "Yang Liu", "Yan Yang"], "publication_date": "2014/8/18", "conference": "2014 IEEE International Conference on Automation Science and Engineering (CASE)", "pages": "619-625", "publisher": "IEEE", "description": "Modern complex systems require intensive application of complicated supervisors. Structural simplification techniques are one of the fundamental researches in the context of automated manufacturing systems (AMSs). They can reduce implementation cost, mitigate fabrication complexity, and improve reliability. Several typical methods are developed along this direction. In order to thoroughly explore their effectiveness and performance, we make a comparison and contrast investigation among them. Several analytical results and performance measures are proposed for their qualitative and quantitative comparison. Our approach can assist researchers and practitioners better comprehend the inherit mechanisms and relative merits of these simplification methodologies and their applicability in AMSs. This research is motivated by AMSs' control; however, they are also applicable to other systems with discrete event\u00a0\u2026", "total_citations": {"2016": 1, "2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Sg-YnEhjH50C": {"external_link": "https://scholar.google.com/scholar?cluster=5918595423608413525&hl=en&oi=scholarr", "authors": ["Shuang Liu", "Yang Liu", "Jun Sun", "Jin Song Dong", "Bimlesh Wadhwa"], "publication_date": "2012/11/3", "total_citations": {"2014": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:F1b5ZUV5XREC": {"external_link": "https://www.comp.nus.edu.sg/~pat/preport.pdf", "authors": ["Jun Sun", "SZ Song", "Yang Liu", "Jin Song Dong"], "publication_date": "2010", "publisher": "Technical report", "description": "With the development of computing and sensing technology, information process and control software are integrated into everyday objects and activities. Design and development of control software for safety-critical systems are notoriously difficult problems. Real-life systems often have complex data components or complicated hierarchical control flows. Furthermore, control software often interacts with physical environment and therefore depends on quantitative timing. It is a challenging task to verify hierarchical complex real-time systems. In addition, probability exhibits itself commonly in the form of statistical estimates regarding the environment in which control software is embedded. Requiring a system always function perfectly within any environment is often overwhelming.In last 3 years, we aim to develop a useful tool for verifying hierarchical complex probabilistic real-time systems. In the first phase, we proposed a language called CSP# for system modeling. CSP# is an expressive language, combining Hoare\u2019s CSP [7] and data structures; after that, we extended this language to support probabilistic choices and we named it as PCSP#. It extended previous work on combining CSP with probabilistic choice [8] or on combining CSP with data structures [11]. Now we integrate real-time into this language and get PRTS. PRTS combines low-level programs, eg, sequence programs defined in a simple imperative language or any C# program, with high-level specifications (with process constructs like parallel, choice, hiding, etc.), as well as timed transitions and probabilistic choices. It supports shared variables as well as abstract events, making it\u00a0\u2026", "total_citations": {"2011": 1, "2012": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3fE2CSJIrl8C": {"external_link": "https://www.sciencedirect.com/science/article/pii/S1571066106003392", "authors": ["Yang Liu", "Jun Sun"], "publication_date": "2006/5/31", "journal": "Electronic Notes in Theoretical Computer Science", "volume": "151", "issue": "2", "pages": "107-124", "publisher": "Elsevier", "description": "Web technologies based on XML, e.g. Semantic Web and Web Services, facilitate Web automation and universally accessible content. One of the key factors for the success of XML-based technologies is of finding an efficient query evaluation algorithm for XML-based data models. An XML twig query is a complex selection predicate on both structure and content of a labelled XML document. Several novel twig query evaluation algorithms have been proposed recently. However, these algorithms are difficult to understand and hence implement due to high complexity. In this work, we present an algorithmic design for XML queries evaluation system using Object-Z. An Object-Z specification is developed to give a concise and logical description of the XML data model and the twig queries. It makes the twig query evaluation straight-forward, and allows different evaluation algorithms to be constructed easily and\u00a0\u2026", "total_citations": {"2007": 1, "2008": 0, "2009": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:t4WtaE3RIIAC": {"external_link": "https://scholar.google.com/scholar?cluster=9785004127692858915&hl=en&oi=scholarr", "authors": ["Xiaofei Xie", "Lei Ma", "Haijun Wang", "Yuekang Li", "Yang Liu", "Xiaohong Li"], "conference": "Proceedings of the 28th International Joint Conference on Artificial Intelligence", "pages": "5772-5778", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kFzFP8IdBVAC": {"external_link": "https://scholar.google.com/scholar?cluster=14686891224462276253&hl=en&oi=scholarr", "authors": ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu"], "conference": "Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering", "pages": "120-131", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:l0_JBNIuc60C": {"external_link": "https://scholar.google.com/scholar?cluster=14529084215916499483&hl=en&oi=scholarr", "authors": ["Xiaofei Xie", "Lei Ma", "Felix Juefei-Xu", "Minhui Xue", "Hongxu Chen", "Yang Liu"], "conference": "Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "146-157", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:OvCsJ6o9tOQC": {"external_link": "https://scholar.google.com/scholar?cluster=5674212872849375535&hl=en&oi=scholarr", "authors": ["Lei Ma", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Felix Juefei-Xu", "Chao Xie", "Li Li", "Yang Liu", "Jianjun Zhao"], "journal": "2018 IEEE 29th International Symposium on Software Reliability Engineering (ISSRE). IEEE", "total_citations": {"2020": 2}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CQikpi1_-5oC": {"external_link": "https://arxiv.org/abs/2309.11021", "authors": ["Wenbo Guo", "Zhengzi Xu", "Chengwei Liu", "Cheng Huang", "Yong Fang", "Yang Liu"], "publication_date": "2023/9/20", "journal": "arXiv preprint arXiv:2309.11021", "description": "PyPI provides a convenient and accessible package management platform to developers, enabling them to quickly implement specific functions and improve work efficiency. However, the rapid development of the PyPI ecosystem has led to a severe problem of malicious package propagation. Malicious developers disguise malicious packages as normal, posing a significant security risk to end-users. To this end, we conducted an empirical study to understand the characteristics and current state of the malicious code lifecycle in the PyPI ecosystem. We first built an automated data collection framework and collated a multi-source malicious code dataset containing 4,669 malicious package files. We preliminarily classified these malicious code into five categories based on malicious behaviour characteristics. Our research found that over 50% of malicious code exhibits multiple malicious behaviours, with information stealing and command execution being particularly prevalent. In addition, we observed several novel attack vectors and anti-detection techniques. Our analysis revealed that 74.81% of all malicious packages successfully entered end-user projects through source code installation, thereby increasing security risks. A real-world investigation showed that many reported malicious packages persist in PyPI mirror servers globally, with over 72% remaining for an extended period after being discovered. Finally, we sketched a portrait of the malicious code lifecycle in the PyPI ecosystem, effectively reflecting the characteristics of malicious code at different stages. We also present some suggested mitigations to improve the security of the Python\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_TIfIljC7OAC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-031-40436-8_10", "authors": ["Ting Su", "Chengyu Zhang", "Yichen Yan", "Lingling Fan", "Yang Liu", "Zhoulai Fu", "Zhendong Su"], "publication_date": "2023/9/8", "book": "Theories of Programming and Formal Methods: Essays Dedicated to Jifeng He on the Occasion of His 80th Birthday", "pages": "257-293", "publisher": "Springer Nature Switzerland", "description": "Data-flow testing (DFT) aims to detect potential data interaction anomalies by focusing on the points at which variables receive values and the points at which these values are used. Such test objectives are referred as def-use pairs. However, the complexity of DFT still overwhelms the testers in practice. To tackle this problem, we introduce a hybrid testing framework for data-flow based test generation: (1) The core of our framework is symbolic execution (SE), enhanced by a novel guided path exploration strategy to improve testing performance; and (2) we systematically cast DFT as reachability checking in software model checking (SMC) to complement SE, yielding practical DFT that combines the two techniques\u2019 strengths. We implemented our framework for C programs on top of the state-of-the-art symbolic execution engine KLEE and instantiated with three different software model checkers. Our evaluation on the\u00a0\u2026", "total_citations": {"2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:OmvXvaxYObgC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3597926.3598142", "authors": ["Jian Zhang", "Xu Wang", "Hongyu Zhang", "Hailong Sun", "Xudong Liu", "Chunming Hu", "Yang Liu"], "publication_date": "2023/7/12", "book": "Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "1370-1382", "description": "Automated bug detection is essential for high-quality software development and has attracted much attention over the years. Among the various bugs, previous studies show that the condition expressions are quite error-prone and the condition-related bugs are commonly found in practice. Traditional approaches to automated bug detection are usually limited to compilable code and require tedious manual effort. Recent deep learning-based work tends to learn general syntactic features based on Abstract Syntax Tree (AST) or apply the existing Graph Neural Networks over program graphs. However, AST-based neural models may miss important control flow information of source code, and existing Graph Neural Networks for bug detection tend to learn local neighbourhood structure information. Generally, the condition-related bugs are highly influenced by control flow knowledge, therefore we propose a novel CFG\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=400&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hNFvT5Kh_mEC": {"external_link": "https://arxiv.org/abs/2305.16812", "authors": ["Han Liu", "Sen Chen", "Ruitao Feng", "Chengwei Liu", "Kaixuan Li", "Zhengzi Xu", "Liming Nie", "Yang Liu", "Yixiang Chen"], "publication_date": "2023/5/26", "journal": "arXiv preprint arXiv:2305.16812", "description": "Quality assurance (QA) tools are receiving more and more attention and are widely used by developers. Given the wide range of solutions for QA technology, it is still a question of evaluating QA tools. Most existing research is limited in the following ways: (i) They compare tools without considering scanning rules analysis. (ii) They disagree on the effectiveness of tools due to the study methodology and benchmark dataset. (iii) They do not separately analyze the role of the warnings. (iv) There is no large-scale study on the analysis of time performance. To address these problems, in the paper, we systematically select 6 free or open-source tools for a comprehensive study from a list of 148 existing Java QA tools. To carry out a comprehensive study and evaluate tools in multi-level dimensions, we first mapped the scanning rules to the CWE and analyze the coverage and granularity of the scanning rules. Then we conducted an experiment on 5 benchmarks, including 1,425 bugs, to investigate the effectiveness of these tools. Furthermore, we took substantial effort to investigate the effectiveness of warnings by comparing the real labeled bugs with the warnings and investigating their role in bug detection. Finally, we assessed these tools' time performance on 1,049 projects. The useful findings based on our comprehensive study can help developers improve their tools and provide users with suggestions for selecting QA tools.", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vkAjbg6qVbQC": {"external_link": "https://arxiv.org/abs/2304.14920", "authors": ["Xinliang Zhou", "Dan Lin", "Ziyu Jia", "Jiaping Xiao", "Chenyu Liu", "Liming Zhai", "Yang Liu"], "publication_date": "2023/4/26", "journal": "arXiv preprint arXiv:2304.14920", "description": "Drowsy driving has a crucial influence on driving safety, creating an urgent demand for driver drowsiness detection. Electroencephalogram (EEG) signal can accurately reflect the mental fatigue state and thus has been widely studied in drowsiness monitoring. However, the raw EEG data is inherently noisy and redundant, which is neglected by existing works that just use single-channel EEG data or full-head channel EEG data for model training, resulting in limited performance of driver drowsiness detection. In this paper, we are the first to propose an Interpretability-guided Channel Selection (ICS) framework for the driver drowsiness detection task. Specifically, we design a two-stage training strategy to progressively select the key contributing channels with the guidance of interpretability. We first train a teacher network in the first stage using full-head channel EEG data. Then we apply the class activation mapping (CAM) to the trained teacher model to highlight the high-contributing EEG channels and further propose a channel voting scheme to select the top N contributing EEG channels. Finally, we train a student network with the selected channels of EEG data in the second stage for driver drowsiness detection. Experiments are designed on a public dataset, and the results demonstrate that our method is highly applicable and can significantly improve the performance of cross-subject driver drowsiness detection.", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:B9dQ7Cd3MGsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10086616/", "authors": ["Wei Gao", "Xu Zhang", "Shangwei Guo", "Tianwei Zhang", "Tao Xiang", "Han Qiu", "Yonggang Wen", "Yang Liu"], "publication_date": "2023/3/29", "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "publisher": "IEEE", "description": "Collaborative learning has gained great popularity due to its benefit of data privacy protection: participants can jointly train a Deep Learning model without sharing their training sets. However, recent works discovered that an adversary can fully recover the sensitive training samples from the shared gradients. Such reconstruction attacks pose severe threats to collaborative learning. Hence, effective mitigation solutions are urgently desired. In this paper, we systematically analyze existing reconstruction attacks and propose to leverage data augmentation to defeat these attacks: by preprocessing sensitive images with carefully-selected transformation policies, it becomes infeasible for the adversary to extract training samples from the corresponding gradients. We first design two new metrics to quantify the impacts of transformations on data privacy and model usability. With the two metrics, we design a novel search\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CQQJn-Gxto4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10123596/", "authors": ["Wenhan Wang", "Kechi Zhang", "Ge Li", "Shangqing Liu", "Anran Li", "Zhi Jin", "Yang Liu"], "publication_date": "2023/3/21", "conference": "2023 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)", "pages": "248-259", "publisher": "IEEE", "description": "Learning vector representations for programs is a critical step in applying deep learning techniques for program understanding tasks. Various neural network models are proposed to learn from tree-structured program representations, e.g., abstract syntax tree (AST) and concrete syntax tree (CST). However, most neural architectures either fail to capture long-range dependencies which are ubiquitous in programs, or cannot learn effective representations for syntax tree nodes, making them incapable of performing the node-level prediction tasks, e.g., bug localization. In this paper, we propose Tree-Transformer, a novel recursive tree-structured neural network to learn the vector representations for source codes. We propose a multi-head attention mechanism to model the dependency between siblings and parent-children node pairs. Moreover, we propose a bi-directional propagation strategy to allow node\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6FFC2c45_UYC": {"external_link": "https://sen-chen.github.io/img_cs/pdf/fse2023-sca.pdf", "authors": ["Lida Zhao", "Sen Chen", "Zhengzi Xu", "Chengwei Liu", "Lyuye Zhang", "Jiahui Wu", "Jun Sun", "Yang Liu"], "publication_date": "2023", "journal": "Proceedings of the 2023 31th acm sigsoft international symposium on foundations of software engineering", "description": "Software composition analysis (SCA) tools are proposed to detect potential vulnerabilities introduced by open-source software (OSS) imported as third-party libraries (TPL). With the increasing complexity of software functionality, SCA tools may encounter various scenarios during the dependency resolution process, such as diverse formats of artifacts, diverse dependency imports, and diverse dependency specifications. However, there still lacks a comprehensive evaluation of SCA tools for Java that takes into account the above scenarios. This could lead to a confined interpretation of comparisons, improper use of tools, and hinder further improvements of the tools. To fill this gap, we proposed an Evaluation Model which consists of Scan Modes, Scan Methods, and SCA Scope for Maven (SSM), for comprehensive assessments of the dependency resolving capabilities and effectiveness of SCA tools. Based on the Evaluation Model, we first qualitatively examined 6 SCA tools\u2019 capabilities. Next, the accuracy of dependency and vulnerability is quantitatively evaluated with a large-scale dataset (21,130 Maven modules with 73,499 unique dependencies) under two Scan Modes (ie, build scan and pre-build scan). The results show that most tools do not fully support SSM, which leads to compromised accuracy. For dependency detection, the average F1-score is 0.890 and 0.692 for build and pre-build respectively, and for vulnerability accuracy, the average F1-score is 0.475. However, proper support for SSM reduces dependency detection false positives by 34.24% and false", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:htV_5D2kmyYC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3568160.3570227", "authors": ["Jingquan Ge", "Yuekang Li", "Yaowen Zheng", "Yang Liu", "Sheikh Mahbub Habib"], "publication_date": "2022/12/8", "book": "Proceedings of the 6th ACM Computer Science in Cars Symposium", "pages": "1-9", "description": "Flush-based cache attacks seriously threaten the security of automotive system based on ARM Cortex-A9 MPCore. Most of the proposed defense schemes have limited detection capabilities or can\u2019t detect the malicious attacks fast enough. The method of permanently reducing the resolution of all time APIs in the system is not feasible because the high resolution time API is required for normal running of various applications. In this paper, we propose two more secure collaborative APIs\u2014SafeFlush and SafeTime. In addition to the basic function of flushing a cache line, SafeFlush can also detect and handle the suspected flush-based cache attack process. More importantly, SafeFlush collaborates with SafeTime to effectively resist all flush-based cache attacks. That SafeTime adaptively reduces its resolution for a short time based on the signal sent by SafeFlush makes attacks fail. The attack experiment results show\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Oyjq9-gOPoEC": {"external_link": "https://arxiv.org/abs/2211.12049", "authors": ["Ming Hu", "Zeke Xia", "Zhihao Yue", "Jun Xia", "Yihao Huang", "Yang Liu", "Mingsong Chen"], "publication_date": "2022/11/22", "journal": "arXiv preprint arXiv:2211.12049", "description": "As a promising distributed machine learning paradigm that enables collaborative training without compromising data privacy, Federated Learning (FL) has been increasingly used in AIoT (Artificial Intelligence of Things) design. However, due to the lack of efficient management of straggling devices, existing FL methods greatly suffer from the problems of low inference accuracy and long training time. Things become even worse when taking various uncertain factors (e.g., network delays, performance variances caused by process variation) existing in AIoT scenarios into account. To address this issue, this paper proposes a novel asynchronous FL framework named GitFL, whose implementation is inspired by the famous version control system Git. Unlike traditional FL, the cloud server of GitFL maintains a master model (i.e., the global model) together with a set of branch models indicating the trained local models committed by selected devices, where the master model is updated based on both all the pushed branch models and their version information, and only the branch models after the pull operation are dispatched to devices. By using our proposed Reinforcement Learning (RL)-based device selection mechanism, a pulled branch model with an older version will be more likely to be dispatched to a faster and less frequently selected device for the next round of local training. In this way, GitFL enables both effective control of model staleness and adaptive load balance of versioned models among straggling devices, thus avoiding the performance deterioration. Comprehensive experimental results on well-known models and datasets show that\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0765WKWsAZMC": {"external_link": "https://arxiv.org/abs/2210.08285", "authors": ["Ming Hu", "Peiheng Zhou", "Zhihao Yue", "Zhiwei Ling", "Yihao Huang", "Yang Liu", "Mingsong Chen"], "publication_date": "2022/10/15", "journal": "arXiv preprint arXiv:2210.08285", "description": "Due to the remarkable performance in preserving data privacy for decentralized data scenarios, Federated Learning (FL) has been considered as a promising distributed machine learning paradigm to deal with data silos problems. Typically, conventional FL approaches adopts a one-to-multi training scheme, where the cloud server keeps only one single global model for all the involved clients for the purpose of model aggregation. However, this scheme suffers from inferior classification performance, since only one global model cannot always accommodate all the incompatible convergence directions of local models, resulting in a low convergence rate and classification accuracy. To address this issue, this paper presents an efficient FL framework named FedCross, which adopts a novel multi-to-multi FL training scheme based on our proposed similarity-based multi-model cross aggregation method. Unlike traditional FL methods, in each round of FL training, FedCross uses a small set of distinct intermediate models to conduct weighted fusion under the guidance of model similarities. In this way, the intermediate models used by FedCross can sufficiently respect the convergence characteristics of clients, thus leading to much fewer conflicts in tuning the convergence directions of clients. Finally, in the deployment stage, FedCross forms a global model for all the clients by performing the federated averaging on the trained immediate models.", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:BqLlocMOq84C": {"external_link": "https://link.springer.com/article/10.1007/s10270-022-00981-7", "authors": ["Yixing Luo", "Yuan Zhou", "Haiyan Zhao", "Zhi Jin", "Tianwei Zhang", "Yang Liu", "Danny Barthaud", "Yijun Yu"], "publication_date": "2022/8", "journal": "Software and Systems Modeling", "volume": "21", "issue": "4", "pages": "1295-1319", "publisher": "Springer Berlin Heidelberg", "description": "Autonomous unmanned systems (AUSs) emerge to replace human operators for achieving better safety, efficiency, and effectiveness in harsh and difficult missions. They usually run in a highly open and dynamic operating environment, in which some unexpected situations may occur, leading to violations of predefined requirements. In order to maintain stable performance, the AUS control software needs to predict in advance whether the requirements will be violated and then make adaptations to maximize requirements satisfaction. We propose \\documentclass[12pt]{minimal}     \\usepackage{amsmath}     \\usepackage{wasysym}     \\usepackage{amsfonts}     \\usepackage{amssymb}     \\usepackage{amsbsy}     \\usepackage{mathrsfs}     \\usepackage{upgreek}     \\setlength{\\oddsidemargin}{-69pt}     \\begin{document}$$\\mathtt {Captain}$$\\end{document}, a model-driven and control-based online adaptation approach\u00a0\u2026", "total_citations": {"2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4oLgDUE9yTUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3533767.3534411", "authors": ["Zhiming Li", "Xiaofei Xie", "Haoliang Li", "Zhengzi Xu", "Yi Li", "Yang Liu"], "publication_date": "2022/7/18", "book": "Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis", "pages": "239-250", "description": "NOTE OF RETRACTION: The authors, Zhiming Li, Xiaofei Xie, Haoliang Li, Zhengzi Xu, Yi Li, and Yang Liu,  of the paper \u201cCross-lingual transfer learning for statistical type inference\u201d have requested their paper be Retracted due to errors in the paper. The authors all agree the major conclusions are erroneous: 1. (Major) In RQ4, the results of LambadaNet and Typilus baseline methods are erroneous and the PLATO results are implemented without the incorporation of cross-lingual data. And some numbers are recorded erroneously in the table, which makes the important conclusion of the paper \u201cPlato can significantly outperform the baseline\u201d erroneous. 2. (Major) In RQ1, the implementations of the rule-based tools (CheckJS and Pytype) (Page 8) are erroneous, and we find it not possible to compare PLATO with the Pytype tool fairly. This renders the conclusion of the paper \u201cWith Plato, one can achieve\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:oufuJXaDW1QC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9814882/", "authors": ["Muhui Jiang", "Qinming Dai", "Wenlong Zhang", "Rui Chang", "Yajin Zhou", "Xiapu Luo", "Ruoyu Wang", "Yang Liu", "Kui Ren"], "publication_date": "2022/7/4", "journal": "IEEE Transactions on Software Engineering", "volume": "49", "issue": "4", "pages": "1683-1703", "publisher": "IEEE", "description": "Embedded devices are becoming ubiquitous, and ARM is becoming the dominant architecture for them. Meanwhile, there is a pressing need to perform security assessments for these devices. Due to different types of peripherals, emulating the software, i.e., firmware, of these devices in scale is challenging. Therefore, static analysis is still widely used. Existing works usually leverage off-the-shelf tools to disassemble stripped ARM binaries and (implicitly) assume that reliably disassembling binaries is a solved problem. However, whether this assumption really holds is unknown. In this paper, we conduct the first comprehensive study on ARM disassembly tools. Specifically, we build 1,896 ARM binaries (including 248 obfuscated ones) with different compilers, compiling options, and obfuscation methods. We then evaluate them using eight state-of-the-art ARM disassembly tools (including both commercial and\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bsl25C5uMOsC": {"external_link": "https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.3057", "authors": ["Xiaohua Yin", "Zhiqiu Huang", "Shuanglong Kan", "Guohua Shen", "Zhe Chen", "Yang Liu", "Fei Wang"], "publication_date": "2022/5", "journal": "Software: Practice and Experience", "volume": "52", "issue": "5", "pages": "1114-1142", "description": "The unsafe features of C make it a big challenge to ensure memory safety of C programs, and often lead to memory errors that can result in vulnerabilities. Various formal verification techniques for ensuring memory safety of C have been proposed. However, most of them either have a high overhead, such as state explosion problem in model checking, or have false positives, such as abstract interpretation. In this article, by innovatively borrowing ownership system from Rust, we propose a novel and sound static memory safety analysis approach, named SafeOSL. Its basic idea is an ownership\u2010based intermediate language, called ownership system language (OSL), which captures the features of the ownership system in Rust. Ownership system specifies the relations among variables and memory locations, and maintains invariants that can ensure memory safety. The semantics of OSL is formalized in K\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3DN2I6VP0lQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9757842/", "authors": ["Yutong Zhao", "Lu Xiao", "Andre B Bondi", "Bihuan Chen", "Yang Liu"], "publication_date": "2022/4/14", "journal": "IEEE Transactions on Software Engineering", "volume": "49", "issue": "2", "pages": "924-946", "publisher": "IEEE", "description": "Software performance is a critical quality attribute that determines the success of a software system. However, practitioners lack comprehensive and holistic understanding of how real-life performance issues are caused and resolved in practice from the technical, engineering, and economic perspectives. This paper presents a large-scale empirical study of 570 real-life performance issues from 13 open source projects from various problem domains, and implemented in three popular programming languages, Java (192 issues), C/C++ (162 issues), and Python (216 issues). From the technical perspective, we summarize  eight  general types of performance issues with corresponding root causes and resolutions that apply for all three languages. We also identify available tools for detecting and resolving different types of issues from the literature. In addition, we found that 27% of the 570 issues are resolved by design\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:8p-ueveQw4wC": {"external_link": "https://arxiv.org/abs/2201.07381", "authors": ["Zhiming Li", "Yanzhou Li", "Tianlin Li", "Mengnan Du", "Bozhi Wu", "Yushi Cao", "Xiaofei Xie", "Yi Li", "Yang Liu"], "publication_date": "2022/1/19", "journal": "arXiv preprint arXiv:2201.07381", "description": "Neural code models have introduced significant improvements over many software analysis tasks like type inference, vulnerability detection, etc. Despite the good performance of such models under the common intra-project independent and identically distributed (IID) training and validation setting, we observe that they usually fail to generalize to real-world inter-project out-of-distribution (OOD) setting. In this work, we show that such phenomenon is caused by model heavily relying on project-specific, ungeneralizable tokens like self-defined variable and function names for downstream prediction, and we formulate it as the project-specific bias learning behavior. We propose a measurement to interpret such behavior, termed as Cond-Idf, which combines co-occurrence probability and inverse document frequency to measure the level of relatedness of token with label and its project-specificness. The approximation indicates that without proper regularization with prior knowledge, model tends to leverage spurious statistical cues for prediction. Equipped with these observations, we propose a bias mitigation mechanism Batch Partition Regularization (BPR) that regularizes model to infer based on proper behavior by leveraging latent logic relations among samples. Experimental results on two deep code benchmarks indicate that BPR can improve both inter-project OOD generalization and adversarial robustness while not sacrificing accuracy on IID data.", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EkMFNTzSJA0C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9700399/", "authors": ["Sen Chen", "Lingling Fan", "Cuiyun Gao", "Fu Song", "Yang Liu"], "publication_date": "2021/10/25", "conference": "2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)", "pages": "579-590", "publisher": "IEEE", "description": "For the real-world dataset collected by our industrial partner, Pwnzen Infotech Inc., one of the leading industrial security companies, there are a large number of unlabeled Android applications (called unlabeled apps in this paper) that are unlikely to belong to known Android malware families nor ordinary benign apps according to the industrial black-list (i.e., signatures) and white-list (i.e., certificates). However, such apps have rarely been studied previously, but are important to peek into the gray area of mobile world. It is a time-consuming task for software analysts to understand the negative characteristics of these samples, which would lead to potential security or privacy threats for app users, significantly negative impacts on mobile system performance, and bad user experience, etc. To investigate the characteristics of these industrial unlabeled apps in a large-scale in practice, and provide insights to industrial\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EIjDW_jUKIQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9728277/", "authors": ["Linling Xu", "Fenghua Wu", "Yuan Zhou", "Hesuan Hu", "Zuohua Ding", "Yang Liu"], "publication_date": "2021/10/22", "conference": "2021 China Automation Congress (CAC)", "pages": "3378-3383", "publisher": "IEEE", "description": "Real-time and efficient collision avoidance is still challenging for mobile robots running in dynamic and crowded environments. Recent research shows that deep reinforcement learning (DRL) provides a framework to plan collision-free trajectories efficiently. However, most of the current DRL-based methods focus on a fixed number of obstacles in the environments, which limits their applications. In this paper, we propose a learning-based model, Crit-LSTM-DRL, for a robot moving in environments with a variable number of obstacles. It combines an LSTM (Long Short-Term Memory) model and a value-based DRL model. Given the states of a set of obstacles, Crit-LSTM-DRL first sorts the obstacles according to their possible collision time to the robot and then feeds to the LSTM model to generate a fixed-size hidden state. Then, the value-based DRL model takes the hidden state and robot state as input to compute\u00a0\u2026", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:pqgf-8x9CmQC": {"external_link": "https://scholar.google.com/scholar?cluster=1697870151994426942&hl=en&oi=scholarr", "authors": ["Zhiming Li", "Xiaofei Xie", "Haoliang Li", "Zhengzi Xu", "Yi Li", "Yang Liu"], "publication_date": "2021/7/1", "journal": "arXiv preprint arXiv:2107.00157", "total_citations": {"2023": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:s9piBQ-TX4wC": {"external_link": "https://link.springer.com/article/10.1007/s10270-020-00787-5", "authors": ["\u00c9tienne Andr\u00e9", "Tian Huat Tan", "Manman Chen", "Shuang Liu", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2020/3/13", "journal": "Software and Systems Modeling", "pages": "1-31", "publisher": "Springer Berlin Heidelberg", "description": "Service composition aims at achieving a business goal by composing existing service-based applications or components. The response time of a service is crucial, especially in time-critical business environments, which is often stated as a clause in service-level agreements between service providers and service users. To meet the guaranteed response time requirement of a composite service, it is important to select a feasible set of component services such that their response time will collectively satisfy the response time requirement of the composite service. In this work, we use the BPEL modeling language that aims at specifying Web services. We extend it with timing parameters and equip it with a formal semantics. Then, we propose a fully automated approach to synthesize the response time requirement of component services modeled using BPEL, in the form of a constraint on the local response times. The\u00a0\u2026", "total_citations": {"2022": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:RiW20FJDrgsC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8882772/", "authors": ["Ke Jiang", "David Sanan", "Yongwang Zhao", "Shuanglong Kan", "Yang Liu"], "publication_date": "2019/11/10", "conference": "2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)", "pages": "144-153", "publisher": "IEEE", "description": "Buddy memory allocation algorithms are widely adopted by various memory management systems for managing memory layouts. Rigorous mathematical proofs provide strong assurance to improve the confidence on the reliability of a memory management system. In this paper, we model and formally verify, in the interactive theorem prover Isabelle/HOL, a buddy memory allocation model, which preserves functional correctness and security properties. Firstly, we construct a specification consisting of operations to allocate and dispose memory blocks according to a buddy memory allocation algorithm. Then we verify that the specification preserves key invariants over the memory to guarantee functional correctness of the algorithm. Finally, we verify that the specification also preserves the integrity of the memory. Therefore, they do not affect other memory blocks previously allocated.", "total_citations": {"2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:7jLzoj1EsW0C": {"external_link": "https://link.springer.com/article/10.1007/s11390-019-1955-3", "authors": ["Ling-Yun Situ", "Lin-Zhang Wang", "Yang Liu", "Bing Mao", "Xuan-Dong Li"], "publication_date": "2019/9/1", "journal": "Journal of Computer Science and Technology", "volume": "34", "issue": "5", "pages": "972-992", "publisher": "Springer US", "description": "Missing checks for untrusted inputs used in security-sensitive operations is one of the major causes of various vulnerabilities. Efficiently detecting and repairing missing checks are essential for prognosticating potential vulnerabilities and improving code reliability. We propose a systematic static analysis approach to detect missing checks for manipulable data used in security-sensitive operations of C/C++ programs and recommend repair references. First, customized securitysensitive operations are located by lightweight static analysis. Then, the assailability of sensitive data used in securitysensitive operations is determined via taint analysis. And, the existence and the risk degree of missing checks are assessed. Finally, the repair references for high-risk missing checks are recommended. We implemented the approach into an automated and cross-platform tool named Vanguard based on Clang/LLVM 3.6\u00a0\u2026", "total_citations": {"2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Jxy3h8XkNu0C": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3183440.3194949", "authors": ["Lingyun Situ", "Liang Zou", "Linzhang Wang", "Yang Liu", "Bing Mao", "Xuandong Li"], "publication_date": "2018/5/27", "book": "Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings", "pages": "238-239", "description": "Missing check for untrusted input used in security-sensitive operations is one of the major causes of various serious vulnerabilities. Thus, efficiently detecting missing checks for realistic software is essential for identify insufficient attack protections. We propose a systematic static approach to detect missing checks in C/C++ programs. An automated and cross-platform tool named Vanguard was implemented on top of Clang/LLVM 3.6.0. And experimental results have shown its effectiveness and efficiency.", "total_citations": {"2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:FSl0EHHYj-kC": {"external_link": "https://arxiv.org/abs/1804.07608", "authors": ["Shuanglong Kan", "Zhe Chen", "David Sanan", "Shang-Wei Lin", "Yang Liu"], "publication_date": "2018/4/17", "journal": "arXiv preprint arXiv:1804.07608", "description": "Rust is an emergent systems programming language highlighting memory safety by its Ownership and Borrowing System (OBS). The existing formal semantics for Rust only covers limited subsets of the major language features of Rust. Moreover, they formalize OBS as type systems at the language-level, which can only be used to conservatively analyze programs against the OBS invariants at compile-time. That is, they are not executable, and thus cannot be used for automated verification of runtime behavior. In this paper, we propose RustSEM, a new executable operational semantics for Rust. RustSEM covers a much larger subset of the major language features than existing semantics. Moreover, RustSEM provides an operational semantics for OBS at the memory-level, which can be used to verify the runtime behavior of Rust programs against the OBS invariants. We have implemented RustSEM in the executable semantics modeling tool K-Framework. We have evaluated the semantics correctness of RustSEM wrt. the Rust compiler using around 700 tests. In particular, we have proposed a new technique for testing semantic consistency to ensure the absence of semantic ambiguities on all possible execution selections. We have also evaluated the potential applications of RustSEM in automated runtime and formal verification for both functional and memory properties. Experimental results show that RustSEM can enhance the memory safety mechanism of Rust, as it is more powerful than OBS in detecting memory errors.", "total_citations": {"2021": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Qo9Q-PfIzZ0C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-68690-5_16", "authors": ["Li Li", "Naipeng Dong", "Jun Pang", "Jun Sun", "Guangdong Bai", "Yang Liu", "Jin Song Dong"], "publication_date": "2017/11/13", "conference": "International Conference on Formal Engineering Methods", "pages": "262-280", "publisher": "Springer, Cham", "description": "A long-standing research problem is how to efficiently verify security protocols with tamper-resistant global states, especially when the global states evolve unboundedly. We propose a protocol specification framework, which facilitates explicit modeling of states and state transformations. On the basis of that, we develop an algorithm for verifying security properties of protocols with unbounded state-evolving, by tracking state transformation and checking the validity of the state-evolving traces. We prove the correctness of the verification algorithm, implement both of the specification framework and the algorithm, and evaluate our implementation using a number of stateful security protocols. The experimental results show that our approach is both feasible and practically efficient. Particularly, we have found a security flaw on the digital envelope protocol, which cannot be detected with existing security protocol\u00a0\u2026", "total_citations": {"2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CoqsOaBEKcQC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-68690-5_16", "authors": ["Li Li", "Naipeng Dong", "Jun Pang", "Jun Sun", "Guangdong Bai", "Yang Liu", "Jin Song Dong"], "publication_date": "2017/11/13", "conference": "International Conference on Formal Engineering Methods", "pages": "262-280", "publisher": "Springer, Cham", "description": "A long-standing research problem is how to efficiently verify security protocols with tamper-resistant global states, especially when the global states evolve unboundedly. We propose a protocol specification framework, which facilitates explicit modeling of states and state transformations. On the basis of that, we develop an algorithm for verifying security properties of protocols with unbounded state-evolving, by tracking state transformation and checking the validity of the state-evolving traces. We prove the correctness of the verification algorithm, implement both of the specification framework and the algorithm, and evaluate our implementation using a number of stateful security protocols. The experimental results show that our approach is both feasible and practically efficient. Particularly, we have found a security flaw on the digital envelope protocol, which cannot be detected with existing security protocol\u00a0\u2026", "total_citations": {"2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:qE25ZKhNtbAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/8256129/", "authors": ["Junyao Hou", "Hesuan Hu", "Yuan Zhou", "Yang Liu"], "publication_date": "2017/8/20", "conference": "2017 13th IEEE Conference on Automation Science and Engineering (CASE)", "pages": "358-363", "publisher": "IEEE", "description": "In this paper, we develop a solution to attain a set of decentralized monitors based on Generalized Mutual Exclusion Constraints (GMECs) in the paradigm of a set of inequalities. These inequalities exhibit cumbersomely complex and tediously lengthy forms in practice which usually allows arbitrary constraints. Therefore, a decentralized implementation of the supervisor can mitigate the amount of agent communication, eliminate the restriction of space distance, and decrease the cost of controlled system. In particular, by removing the limitation that each GMECs is a singleton, our method can accommodate three or more independent variables. Our solution derives from geometrical space analysis as well as linear programming formulation.", "total_citations": {"2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6jbE1kO3aKAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7989067/", "authors": ["Chen Chen", "Hesuan Hu", "Yang Liu"], "publication_date": "2017/5/29", "conference": "2017 IEEE International Conference on Robotics and Automation (ICRA)", "pages": "536-542", "publisher": "IEEE", "description": "Although supervisor simplification in the framework of automated manufacturing systems has been studied in many literatures, there is still an intense demand for essential and general techniques. Basically, supervisors can be synthesized by specifications which are expressed by generalized mutual exclusion constraints (GMECs). In this paper, we propose static and dynamic partitions on GMECs to remove redundant ones while retain necessary ones. These two partitions are distinctly different in the utilization of system information. Static partition separates inequalities into independent and dependent ones without doing any structure analysis. While dynamic partition divides inequalities into active and inactive ones necessarily with the aid of system information. Nevertheless, mathematical analysis shows that statically dependent inequalities are essentially dynamically inactive while dynamically active ones are\u00a0\u2026", "total_citations": {"2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9KdEqzwCTsEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7916261/", "authors": ["Jinghua Hou", "Chunyan Miao", "Yang Liu"], "publication_date": "2016/12/15", "conference": "2016 10th International Conference on Software, Knowledge, Information Management & Applications (SKIMA)", "pages": "433-438", "publisher": "IEEE", "description": "Prospective memory is a form of memory involving remembering to perform delayed intentions or planned actions. Prospective memory (PM) failures may lead to serious consequences. Although many PM aid systems have been developed, existing works on reminder systems only focus on individual tasks. However, people with PM difficulties (e.g., elderly) are often involved in many group tasks and it is important to take into account the interaction between group members while designing an efficient reminding system for group tasks. Based on the theoretical background of PM, this paper thoroughly analyzes the factors that will affect the PM task performance and proposes a computational approach for determining the appropriate number of reminders and reminding method. To evaluate the proposed reminding model, we conducted a preliminary user study and the participants felt that the reminders are\u00a0\u2026", "total_citations": {"2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ZgPQhQxLujAC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-47846-3_23", "authors": ["Truong Khanh Nguyen", "Tian Huat Tan", "Jun Sun", "Jiaying Li", "Yang Liu", "Manman Chen", "Jin Song Dong"], "publication_date": "2016/11/14", "conference": "International Conference on Formal Engineering Methods", "pages": "363-382", "publisher": "Springer, Cham", "description": "Digitization is a technique that has been widely used in real-time model checking. With the assumption of digital clocks, symbolic model checking techniques (like those based on BDDs) can be applied for real-time systems. The problem of model checking real-time systems based on digitization is that the number of tick transitions increases rapidly with the increment of clock upper bounds. In this paper, we propose to improve BDD-based verification for real-time systems using simulation reduction. We show that simulation reduction allows us to verify timed automata with large clock upper bounds and to converge faster to the fixpoint. The presented approach is applied to reachability and LTL verification for real-time systems. Finally, we compare our approach with existing tools such as Rabbit, Uppaal, and CTAV and show that our approach outperforms them and achieves a significant speedup.", "total_citations": {"2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JTutsjMeBaAC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-47846-3_23", "authors": ["Truong Khanh Nguyen", "Tian Huat Tan", "Jun Sun", "Jiaying Li", "Yang Liu", "Manman Chen", "Jin Song Dong"], "publication_date": "2016/11/14", "conference": "International Conference on Formal Engineering Methods", "pages": "363-382", "publisher": "Springer International Publishing", "description": "Digitization is a technique that has been widely used in real-time model checking. With the assumption of digital clocks, symbolic model checking techniques (like those based on BDDs) can be applied for real-time systems. The problem of model checking real-time systems based on digitization is that the number of tick transitions increases rapidly with the increment of clock upper bounds. In this paper, we propose to improve BDD-based verification for real-time systems using simulation reduction. We show that simulation reduction allows us to verify timed automata with large clock upper bounds and to converge faster to the fixpoint. The presented approach is applied to reachability and LTL verification for real-time systems. Finally, we compare our approach with existing tools such as Rabbit, Uppaal, and CTAV and show that our approach outperforms them and achieves a significant speedup.", "total_citations": {"2020": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:2POsdo3tyOAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7810640/", "authors": ["HeSuan Hu", "Yan Yang", "Yang Liu", "Nan Du"], "publication_date": "2016/6/29", "conference": "2016 European Control Conference (ECC)", "pages": "2337-2344", "publisher": "IEEE", "description": "It often takes much time and effort to synthesize the supervisory controller given an automated manufacturing system (AMS). Any modification may lead to another synthesis procedure from the scratch. This work is motivated by the problem of distributed supervisor synthesis for complex large scale models of real systems. Existing approaches generally require the enumeration of all the states or siphons. Based on them, a centralized supervisor can be synthesized to perform on-line control. In this paper, we provide an on-line and realtime predictive control solution in order to significantly mitigate the computational burden and reduce the supervisor size. Our approach can minimize the communication amount among different processes, tolerate many contingencies like resource failure and improve system performance like throughput. These promote its applicability to many practical large scale systems. The\u00a0\u2026", "total_citations": {"2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:VofzgsFG4o0C": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-17404-4_8", "authors": ["Xiaofei Xie", "Xiaohong Li", "Yang Liu", "Li Li", "Ruitao Feng", "Zhiyong Feng"], "publication_date": "2014/11/6", "conference": "International Workshop on Structured Object-Oriented Formal Language and Method", "pages": "111-126", "publisher": "Springer International Publishing", "description": "Ensuring correspondence is very important and useful in designing security protocols. Previously, many research works focus on the verification of former-correspondence which means \u201cif the protocol executes some event, then it must have executed some other events before\u201d. However, in some security protocols, it is also important to ensure the engagement of some events after an event happens. In this work, we propose a new property called later-correspondence, which is very useful for e-commerce protocols. The applied -calculus is extended to specify the protocols. A simplified intruder model is proposed for modeling the intruder capabilities which includes the malicious behaviors of both protocol agents and intruders. The later-correspondence is verified based on the Labeled Transition System (LTS) using model checking. In order to avoid the states explosion, we limit the number of protocol\u00a0\u2026", "total_citations": {"2019": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:xMZGxf1v-3YC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-642-54624-2_8", "authors": ["Yongxin Zhao", "Jinsong Dong", "Yang Liu", "Jun Sun"], "publication_date": "2014", "book": "Specification, Algebra, and Software", "pages": "151-170", "publisher": "Springer Berlin Heidelberg", "description": "In the quest for tractable formal methods to improve the practice of software engineering, both CafeOBJ [7] and PAT [12] have made great achievements based on different formal techniques. CafeOBJ has an evident advantage in specifying concurrent systems with object-oriented methods and proving behavioral properties based on reusability of proof. However, it is difficult to be applied to automatically verify some LTL based properties which involve complex state updates and finite path of states. Conversely, PAT offers great flexibility to simulate system behaviors and support modeling checking various properties, but it is difficult to prove behavioral properties directly, the definition of which is based on the structure of contexts. In the paper, we attempt to combine the two approaches by modeling specifications and verifying properties in CafeOBJ and PAT. A keyless car system is provided to illustrate our\u00a0\u2026", "total_citations": {"2015": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0Tn0GYh_KFEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6805450/", "authors": ["Xuan-Linh Ha", "Thanh-Tho Quan", "Yang Liu", "Jun Sun"], "publication_date": "2013/12/2", "conference": "2013 20th Asia-Pacific Software Engineering Conference (APSEC)", "volume": "1", "pages": "547-552", "publisher": "IEEE", "description": "The main challenge in model checking is the state space explosion. With developments in hardware today, most processors have many cores inside. To leverage on the advances in hardware, we can increase the performance of verifying large models by designing parallel algorithms to run efficiently on multi-core architecture. This work focuses on this problem in the context of Linear Temporal Logic (LTL) model checking, which can be seen as finding accepting cycles in a graph. Recently, there are some parallel algorithms based on Nested Depth First Search (NDFS). In this work, we propose two new parallel algorithms based on strongly connected component (SCC) searching algorithm (i.e., Tarjan's algorithm). By finding all the SCCs in the graph, our approaches can not only check LTL properties, but also handle fairness assumptions all together. The experiments show that our new algorithms are comparable\u00a0\u2026", "total_citations": {"2015": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:XUmZziu-z7kC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-05416-2_8", "authors": ["Jonathan S Ostroff", "Chen-Wei Wang", "Simon Hudon", "Yang Liu", "Jun Sun"], "publication_date": "2013/10/29", "conference": "International Workshop on Formal Techniques for Safety-Critical Systems", "pages": "107-124", "publisher": "Springer International Publishing", "description": "Timed Transition Models (TTMs) are event-based descriptions for specifying real-time systems in a discrete setting. We propose a convenient and expressive event-based textual syntax for TTMs and a corresponding operational semantics using labelled transition systems. A system is specified as a composition of module instances. Each module has a clean interface for declaring input, output, and shared variables. Events in a module can be specified, individually, as spontaneous, fair or real-time. An event action specifies a before-after predicate by a set of (possibly non-deterministic) assignments and nested conditionals. The TTM assertion language, linear-time temporal logic (LTL), allows references to event occurrences, including clock ticks (thus allowing for a check that the behaviour is non-Zeno). We implemented a model checker for the TTM notation (using the PAT framework) that includes an editor\u00a0\u2026", "total_citations": {"2017": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_5tno0g5mFcC": {"external_link": "https://lipn.univ-paris13.fr/~andre/documents/PSTCSP.pdf", "authors": ["Etienne Andr\u00e9", "J Sun", "Y Liu", "Jin-Song Dong"], "publication_date": "2012", "journal": "Research Report, National University of Singapore", "description": "Modeling and verifying complex real-time systems, involving timing delays, are notoriously difficult problems. Checking the correctness of a system for one particular value for each delay does not give any information for other values. It is hence interesting to reason parametrically, by considering that the delays are parameters (unknown constants) and synthesize a constraint guaranteeing a correct behavior. We present here Parametric Stateful Timed CSP, viz., a parameterization of Stateful Timed CSP, a language capable of specifying hierarchical real-time systems with complex data structures. Although we prove that the synthesis is undecidable in general, we present an algorithm for efficient parameter synthesis that behaves well in practice.", "total_citations": {"2014": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:f9jR0vFhilIC": {"external_link": "https://www.comp.nus.edu.sg/~pat/publications/ase11.pdf", "authors": ["Truong Khanh Nguyen", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2011", "journal": "Proceedings of the 26th IEEE/ACM International Conference on Automated Software Engineering", "pages": "633-636", "description": "BDD-based symbolic model checking is capable of verifying systems with a large number of states. In this work, we report an extensible framework to facilitate symbolic encoding and checking of hierarchical systems. Firstly, a novel library of symbolic encoding functions for compositional operators (eg, parallel composition, sequential composition, choice operator, etc.) are developed so that users can apply symbolic model checking techniques to hierarchical systems with little knowledge of symbolic encoding techniques (like BDD or CUDD). Secondly, as the library is language-independent, we build an extensible framework with various symbolic model checking algorithms so that the library can be easily applied to encode and verify different modeling languages. Lastly, the applicability and scalability of our framework are demonstrated by applying the framework in the development of symbolic model checkers for three modeling languages as well as a comparison with the NuSMV model checker.", "total_citations": {"2012": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:4DMP91E08xMC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/1858996.1859072", "authors": ["Zhenchang Xing", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2010/9/20", "conference": "Proceedings of the IEEE/\u200cACM international conference on Automated software engineering", "pages": "353-354", "publisher": "ACM", "description": "This paper presents our SpecDiff tool that exploits the model differencing technique for debugging and understanding evolving behaviors of formal specifications. SpecDiff has been integrated in the Process Analysis Toolkit (PAT), a framework for formal specification, verification and simulation. SpecDiff is able to assist in diagnosing system faults, understanding the impacts of specification optimization techniques, and revealing the system change patterns.", "total_citations": {"2018": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UebtZRa9Y70C": {"external_link": "https://scholar.google.com/scholar?cluster=1090434046540462036&hl=en&oi=scholarr", "authors": ["Zhenchang Xing", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2009", "publisher": "Technical Report, NUS", "description": "Modern specification languages are getting more and more sophisticated in order to capture intricate system behaviors. Like programs, specifications may evolve for a variety of reasons, eg, amendment of user requirements, bug fixing, or change of application contexts. Even when a specification remains unmodified, its behavior may change due to change of language semantics or the underlying behavior exploration system (eg a model checker). When an evolving specification behaves unexpectedly, it is often challenging to figure out what is wrong and why. Since specifications describe systems at a higher level than programs, syntax-based analysis and existing program analysis and debugging techniques may not be effective in locating faults in specifications. In this paper, we present SpecDiff, which exploits model differencing technique for debugging and understanding the evolving system behaviors of\u00a0\u2026", "total_citations": {"2010": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UamA9ItEL6YC": {"external_link": "http://tianhuat.github.io/files/icse2013extend.pdf", "authors": ["Tian Huat Tan", "\u00c9tienne Andr\u00e9", "Manman Chen", "Jun Sun", "Yang Liu", "Jin Song Dong", "L Yuan"], "journal": "Submitted to TSE", "volume": "1", "description": "Service composition aims at achieving a business goal by composing existing service-based applications or components. The response time of a service is crucial especially in time critical business environments, which is often stated as a clause in service level agreements between service providers and service users. To meet the guaranteed response time requirement of a composite service, it is important to select a feasible set of component services such that their response time will collectively satisfy the response time requirement of the composite service. In this work, we propose a fully automated approach to synthesize the response time requirement of component services, in the form of a constraint on the local response times. The synthesized requirement will guarantee the satisfaction of the global response time requirement, statically or dynamically. We implemented our work into a tool SELAMAT, and performed several experiments to evaluate the validity of our approach.", "total_citations": {"2015": 1}}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:cjqyVjQpDKAC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10262126/", "authors": ["Ju Jia", "Siqi Ma", "Yang Liu", "Lina Wang", "Robert H Deng"], "publication_date": "2023/9/25", "journal": "IEEE Transactions on Information Forensics and Security", "publisher": "IEEE", "description": "The graph neural networks (GNNs) are susceptible to adversarial perturbations and distribution biases, which pose potential security concerns for real-world applications. Current endeavors mainly focus on graph matching, while the subtle relationships between the nodes and structures of graph-structured data remain under-explored. Accordingly, two fundamental challenges arise as follows: 1) the intricate connections among nodes may induce the distribution shift of graph samples even under the same scenario, and 2) the perturbations of inherent graph-structured representations can introduce spurious shortcuts, which lead to GNN models relying on biased data to make unstable predictions. To address these problems, we propose a novel causality-aligned structure rationalization (CASR) scheme to construct invariant rationales by probing the coherent and causal patterns, which facilitates GNN models to\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lfn0f_u3g34C": {"external_link": "https://arxiv.org/abs/2309.09141", "authors": ["Yongwang Zhao", "David Sanan", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2023/9/17", "journal": "arXiv preprint arXiv:2309.09141", "description": "High assurance of information-flow security (IFS) for concurrent systems is challenging. A promising way for formal verification of concurrent systems is the rely-guarantee method. However, existing compositional reasoning approaches for IFS concentrate on language-based IFS. It is often not applicable for system-level security, such as multicore operating system kernels, in which secrecy of actions should also be considered. On the other hand, existing studies on the rely-guarantee method are basically built on concurrent programming languages, by which semantics of concurrent systems cannot be completely captured in a straightforward way. In order to formally verify state-action based IFS for concurrent systems, we propose a rely-guarantee-based compositional reasoning approach for IFS in this paper. We first design a language by incorporating ``Event'' into concurrent languages and give the IFS semantics of the language. As a primitive element, events offer an extremely neat framework for modeling system and are not necessarily atomic in our language. For compositional reasoning of IFS, we use rely-guarantee specification to define new forms of unwinding conditions (UCs) on events, i.e., event UCs. By a rely-guarantee proof system of the language and the soundness of event UCs, we have that event UCs imply IFS of concurrent systems. In such a way, we relax the atomicity constraint of actions in traditional UCs and provide a compositional reasoning way for IFS in which security proof of systems can be discharged by independent security proof on individual events. Finally, we mechanize the approach in Isabelle/HOL and develop\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vfT5ieZw1WcC": {"external_link": "https://arxiv.org/abs/2308.15742", "authors": ["Yi Liu", "Yuekang Li", "Gelei Deng", "Felix Juefei-Xu", "Yao Du", "Cen Zhang", "Chengwei Liu", "Yeting Li", "Lei Ma", "Yang Liu"], "publication_date": "2023/8/30", "journal": "arXiv preprint arXiv:2308.15742", "description": "The popularity of automatic speech recognition (ASR) systems nowadays leads to an increasing need for improving their accessibility. Handling stuttering speech is an important feature for accessible ASR systems. To improve the accessibility of ASR systems for stutterers, we need to expose and analyze the failures of ASR systems on stuttering speech. The speech datasets recorded from stutterers are not diverse enough to expose most of the failures. Furthermore, these datasets lack ground truth information about the non-stuttered text, rendering them unsuitable as comprehensive test suites. Therefore, a methodology for generating stuttering speech as test inputs to test and analyze the performance of ASR systems is needed. However, generating valid test inputs in this scenario is challenging. The reason is that although the generated test inputs should mimic how stutterers speak, they should also be diverse enough to trigger more failures. To address the challenge, we propose ASTER, a technique for automatically testing the accessibility of ASR systems. ASTER can generate valid test cases by injecting five different types of stuttering. The generated test cases can both simulate realistic stuttering speech and expose failures in ASR systems. Moreover, ASTER can further enhance the quality of the test cases with a multi-objective optimization-based seed updating algorithm. We implemented ASTER as a framework and evaluated it on four open-source ASR models and three commercial ASR systems. We conduct a comprehensive evaluation of ASTER and find that it significantly increases the word error rate, match error rate, and word\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hKIHPWh8nngC": {"external_link": "https://arxiv.org/abs/2308.10523", "authors": ["Xin-Cheng Wen", "Xinchen Wang", "Cuiyun Gao", "Shaohua Wang", "Yang Liu", "Zhaoquan Gu"], "publication_date": "2023/8/21", "journal": "arXiv preprint arXiv:2308.10523", "description": "Automated code vulnerability detection has gained increasing attention in recent years. The deep learning (DL)-based methods, which implicitly learn vulnerable code patterns, have proven effective in vulnerability detection. The performance of DL-based methods usually relies on the quantity and quality of labeled data. However, the current labeled data are generally automatically collected, such as crawled from human-generated commits, making it hard to ensure the quality of the labels. Prior studies have demonstrated that the non-vulnerable code (i.e., negative labels) tends to be unreliable in commonly-used datasets, while vulnerable code (i.e., positive labels) is more determined. Considering the large numbers of unlabeled data in practice, it is necessary and worth exploring to leverage the positive data and large numbers of unlabeled data for more accurate vulnerability detection. In this paper, we focus on the Positive and Unlabeled (PU) learning problem for vulnerability detection and propose a novel model named PILOT, i.e., PositIve and unlabeled Learning mOdel for vulnerability deTection. PILOT only learns from positive and unlabeled data for vulnerability detection. It mainly contains two modules: (1) A distance-aware label selection module, aiming at generating pseudo-labels for selected unlabeled data, which involves the inter-class distance prototype and progressive fine-tuning; (2) A mixed-supervision representation learning module to further alleviate the influence of noise and enhance the discrimination of representations."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:TCU5Z9gcobAC": {"external_link": "https://arxiv.org/abs/2308.08991", "authors": ["Yuqiang Sun", "Zhengzi Xu", "Chengwei Liu", "Yiran Zhang", "Yang Liu"], "publication_date": "2023/8/17", "journal": "arXiv preprint arXiv:2308.08991", "description": "Proper incentives are important for motivating developers in open-source communities, which is crucial for maintaining the development of open-source software healthy. To provide such incentives, an accurate and objective developer contribution measurement method is needed. However, existing methods rely heavily on manual peer review, lacking objectivity and transparency. The metrics of some automated works about effort estimation use only syntax-level or even text-level information, such as changed lines of code, which lack robustness. Furthermore, some works about identifying core developers provide only a qualitative understanding without a quantitative score or have some project-specific parameters, which makes them not practical in real-world projects. To this end, we propose CValue, a multidimensional information fusion-based approach to measure developer contributions. CValue extracts both syntax and semantic information from the source code changes in four dimensions: modification amount, understandability, inter-function and intra-function impact of modification. It fuses the information to produce the contribution score for each of the commits in the projects. Experimental results show that CValue outperforms other approaches by 19.59% on 10 real-world projects with manually labeled ground truth. We validated and proved that the performance of CValue, which takes 83.39 seconds per commit, is acceptable to be applied in real-world projects. Furthermore, we performed a large-scale experiment on 174 projects and detected 2,282 developers having inflated commits. Of these, 2,050 developers did not make any\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:CiMAqHksD8sC": {"external_link": "https://arxiv.org/abs/2308.01191", "authors": ["Shihan Dou", "Junjie Shan", "Haoxiang Jia", "Wenhao Deng", "Zhiheng Xi", "Wei He", "Yueming Wu", "Tao Gui", "Yang Liu", "Xuanjing Huang"], "publication_date": "2023/8/2", "journal": "arXiv preprint arXiv:2308.01191", "description": "Code cloning, the duplication of code fragments, is common in software development. While some reuse aids productivity, excessive cloning hurts maintainability and introduces bugs. Hence, automatic code clone detection is vital. Meanwhile, large language models (LLMs) possess diverse code-related knowledge, making them versatile for various software engineering challenges. However, LLMs' performance in code clone detection is unclear and needs more study for accurate assessment.In this paper, we provide the first comprehensive evaluation of LLMs for clone detection, covering different clone types, languages, and prompts. We find advanced LLMs excel in detecting complex semantic clones, surpassing existing methods. Adding intermediate reasoning steps via chain-of-thought prompts noticeably enhances performance. Additionally, representing code as vector embeddings, especially with text encoders, effectively aids clone detection.Lastly, the ability of LLMs to detect code clones differs among various programming languages. Our study suggests that LLMs have potential for clone detection due to their language capabilities, offering insights for developing robust LLM-based methods to enhance software engineering."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:xqLzqkGRDkQC": {"external_link": "https://arxiv.org/abs/2307.12469", "authors": ["Cen Zhang", "Mingqiang Bai", "Yaowen Zheng", "Yeting Li", "Xiaofei Xie", "Yuekang Li", "Wei Ma", "Limin Sun", "Yang Liu"], "publication_date": "2023/7/24", "journal": "arXiv preprint arXiv:2307.12469", "description": "Fuzz drivers are a necessary component of API fuzzing. However, automatically generating correct and robust fuzz drivers is a difficult task. Compared to existing approaches, LLM-based (Large Language Model) generation is a promising direction due to its ability to operate with low requirements on consumer programs, leverage multiple dimensions of API usage information, and generate human-friendly output code. Nonetheless, the challenges and effectiveness of LLM-based fuzz driver generation remain unclear. To address this, we conducted a study on the effects, challenges, and techniques of LLM-based fuzz driver generation. Our study involved building a quiz with 86 fuzz driver generation questions from 30 popular C projects, constructing precise effectiveness validation criteria for each question, and developing a framework for semi-automated evaluation. We designed five query strategies, evaluated 36,506 generated fuzz drivers. Furthermore, the drivers were compared with manually written ones to obtain practical insights. Our evaluation revealed that: while the overall performance was promising (passing 91% of questions), there were still practical challenges in filtering out the ineffective fuzz drivers for large scale application; basic strategies achieved a decent correctness rate (53%), but struggled with complex API-specific usage questions. In such cases, example code snippets and iterative queries proved helpful; while LLM-generated drivers showed competent fuzzing outcomes compared to manually written ones, there was still significant room for improvement, such as incorporating semantic oracles for logical bugs detection."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:BhdUJeZOhtEC": {"external_link": "https://arxiv.org/abs/2307.08990", "authors": ["Wenhan Wang", "Yanzhou Li", "Anran Li", "Jian Zhang", "Wei Ma", "Yang Liu"], "publication_date": "2023/7/18", "journal": "arXiv preprint arXiv:2307.08990", "description": "Recently, deep learning models have been widely applied in program understanding tasks, and these models achieve state-of-the-art results on many benchmark datasets. A major challenge of deep learning for program understanding is that the effectiveness of these approaches depends on the quality of their datasets, and these datasets often contain noisy data samples. A typical kind of noise in program understanding datasets is label noises, which means that the target outputs for some inputs are mislabeled. Label noises may have a negative impact on the performance of deep learning models, so researchers have proposed various approaches to alleviate the impact of noisy labels, and formed a new research topic: noisy label learning (NLL). In this paper, we conduct an empirical study on the effectiveness of noisy label learning on deep learning for program understanding datasets. We evaluate various noisy label learning approaches and deep learning models on two tasks: program classification and code summarization. From the evaluation results, we find that the impact of label noise and NLL approaches on small deep learning models and large pre-trained models are different: small models are prone to label noises in program classification and NLL approaches can improve their robustness, while large pre-trained models are robust against label noises and NLL does not significantly improve their performances. On the other hand, NLL approaches have shown satisfying results in identifying noisy labeled samples for both tasks, indicating that these techniques can benefit researchers in building high-quality program understanding\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:99tJykcxT8kC": {"external_link": "https://www.computer.org/csdl/proceedings-article/sp/2023/933600c427/1NrbZRijTz2", "authors": ["Xinyi Wang", "Cen Zhang", "Yeting Li", "Zhiwu Xu", "Shuailin Huang", "Yi Liu", "Yican Yao", "Yang Xiao", "Yanyan Zou", "Yang Liu", "Wei Huo"], "publication_date": "2023/5/26", "conference": "2023 IEEE Symposium on Security and Privacy (SP)", "pages": "2427-2443", "publisher": "IEEE Computer Society", "description": "Regular expression Denial-of-Service (ReDoS) is one kind of algorithmic complexity attack. For a vulnerable regex, attackers can craft certain strings to trigger the super-linear worst-case matching time, which causes denial-of-service to regex engines. Various ReDoS detection approaches have been proposed recently. Among them, hybrid approaches which absorb the advantages of both static and dynamic approaches have shown their performance superiority. However, two key challenges still hinder the effectiveness of the detection: 1) Existing modelings summarize localized vulnerability patterns based on partial features of the vulnerable regex; 2) Existing attack string generation strategies are ineffective since they neglected the fact that non-vulnerable parts of the regex may unexpectedly invalidate the attack string (we name this kind of invalidation as disturbance.) RENGAR is our hybrid ReDoS detector\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:fh9oGOwZoyMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10179421/", "authors": ["Jiawei Yin", "Menghao Li", "Yuekang Li", "Yong Yu", "Boru Lin", "Yanyan Zou", "Yang Liu", "Wei Huo", "Jingling Xue"], "publication_date": "2023/5/21", "conference": "2023 IEEE Symposium on Security and Privacy (SP)", "pages": "2155-2169", "publisher": "IEEE", "description": "System Management Mode (SMM) is a secure operation mode for x86 processors supported by Unified Extensible Firmware Interface (UEFI) firmware. SMM is designed to provide a secure execution environment to access highly privileged data or control low-level hardware (such as power management). The programs running in SMM are called SMM drivers and System Management Interrupt (SMI) handlers are the most important components of SMM drivers since they are the only components to receive and handle data from outside the SMM execution environment. Although SMM can serve as an extra layer of protection when the operating system is compromised, vulnerabilities in SMM drivers, especially SMI handlers, can invalidate this protection and cause severe damages to the device. Thus, early detection of SMI handler vulnerabilities is important for UEFI firmware security.To this end, researchers have\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:94js0qVkt3AC": {"external_link": "https://arxiv.org/abs/2305.10929", "authors": ["Di Yang", "Yihao Huang", "Qing Guo", "Felix Juefei-Xu", "Ming Hu", "Yang Liu", "Geguang Pu"], "publication_date": "2023/5/18", "journal": "arXiv preprint arXiv:2305.10929", "description": "The adversarial patch attack aims to fool image classifiers within a bounded, contiguous region of arbitrary changes, posing a real threat to computer vision systems (e.g., autonomous driving, content moderation, biometric authentication, medical imaging) in the physical world. To address this problem in a trustworthy way, proposals have been made for certified patch defenses that ensure the robustness of classification models and prevent future patch attacks from breaching the defense. State-of-the-art certified defenses can be compatible with any model architecture, as well as achieve high clean and certified accuracy. Although the methods are adaptive to arbitrary patch positions, they inevitably need to access the size of the adversarial patch, which is unreasonable and impractical in real-world attack scenarios. To improve the feasibility of the architecture-agnostic certified defense in a black-box setting (i.e., position and size of the patch are both unknown), we propose a novel two-stage Iterative Black-box Certified Defense method, termed IBCD.In the first stage, it estimates the patch size in a search-based manner by evaluating the size relationship between the patch and mask with pixel masking. In the second stage, the accuracy results are calculated by the existing white-box certified defense methods with the estimated patch size. The experiments conducted on two popular model architectures and two datasets verify the effectiveness and efficiency of IBCD."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:gJGMWE3-404C": {"external_link": "https://arxiv.org/abs/2305.10502", "authors": ["Chenyu Liu", "Xinliang Zhou", "Yang Liu"], "publication_date": "2023/5/17", "journal": "arXiv preprint arXiv:2305.10502", "description": "Recently Transformer and Convolution neural network (CNN) based models have shown promising results in EEG signal processing. Transformer models can capture the global dependencies in EEG signals through a self-attention mechanism, while CNN models can capture local features such as sawtooth waves. In this work, we propose an end-to-end neural epilepsy detection model, EENED, that combines CNN and Transformer. Specifically, by introducing the convolution module into the Transformer encoder, EENED can learn the time-dependent relationship of the patient's EEG signal features and notice local EEG abnormal mutations closely related to epilepsy, such as the appearance of spikes and the sprinkling of sharp and slow waves. Our proposed framework combines the ability of Transformer and CNN to capture different scale features of EEG signals and holds promise for improving the accuracy and reliability of epilepsy detection. Our source code will be released soon on GitHub."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:P3HMU8IszGwC": {"external_link": "https://arxiv.org/abs/2305.09543", "authors": ["Xinliang Zhou", "Chenyu Liu", "Jiaping Xiao", "Yang Liu"], "publication_date": "2023/5/16", "journal": "arXiv preprint arXiv:2305.09543", "description": "Sleep staging is critical for assessing sleep quality and diagnosing sleep disorders. However, capturing both the spatial and temporal relationships within electroencephalogram (EEG) signals during different sleep stages remains challenging. In this paper, we propose a novel framework called the Hybrid Attention EEG Sleep Staging (HASS) Framework. Specifically, we propose a well-designed spatio-temporal attention mechanism to adaptively assign weights to inter-channels and intra-channel EEG segments based on the spatio-temporal relationship of the brain during different sleep stages. Experiment results on the MASS and ISRUC datasets demonstrate that HASS can significantly improve typical sleep staging networks. Our proposed framework alleviates the difficulties of capturing the spatial-temporal relationship of EEG signals during sleep staging and holds promise for improving the accuracy and reliability of sleep assessment in both clinical and research settings."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:tXsImmCREicC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10172753/", "authors": ["Yuekun Wang", "Yuhang Ye", "Yueming Wu", "Weiwei Zhang", "Yinxing Xue", "Yang Liu"], "publication_date": "2023/5/14", "conference": "2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)", "pages": "332-344", "publisher": "IEEE", "description": "As one of bad smells in code, code clones may increase the cost of software maintenance and the risk of vulnerability propagation. In the past two decades, numerous clone detection technologies have been proposed. They can be divided into text-based, token-based, tree-based, and graph-based approaches according to their code representations. Different code representations abstract the code details from different perspectives. However, it is unclear which code representation is more effective in detecting code clones and how to combine different code representations to achieve ideal performance. In this paper, we present an empirical study to compare the clone detection ability of different code representations. Specifically, we reproduce 12 clone detection algorithms and divide them into different groups according to their code representations. After analyzing the empirical results, we find that token and tree\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:q93lAJlLO_MC": {"external_link": "https://arxiv.org/abs/2305.05896", "authors": ["Jie Zhang", "Wei Ma", "Qiang Hu", "Xiaofei Xie", "Yves Le Traon", "Yang Liu"], "publication_date": "2023/5/10", "journal": "arXiv preprint arXiv:2305.05896", "description": "Pre-trained code models are mainly evaluated using the in-distribution test data. The robustness of models, i.e., the ability to handle hard unseen data, still lacks evaluation. In this paper, we propose a novel search-based black-box adversarial attack guided by model behaviours for pre-trained programming language models, named Representation Nearest Neighbor Search(RNNS), to evaluate the robustness of Pre-trained PL models. Unlike other black-box adversarial attacks, RNNS uses the model-change signal to guide the search in the space of the variable names collected from real-world projects. Specifically, RNNS contains two main steps, 1) indicate which variable (attack position location) we should attack based on model uncertainty, and 2) search which adversarial tokens we should use for variable renaming according to the model behaviour observations. We evaluate RNNS on 6 code tasks (e.g., clone detection), 3 programming languages (Java, Python, and C), and 3 pre-trained code models: CodeBERT, GraphCodeBERT, and CodeT5. The results demonstrate that RNNS outperforms the state-of-the-art black-box attacking methods (MHM and ALERT) in terms of attack success rate (ASR) and query times (QT). The perturbation of generated adversarial examples from RNNS is smaller than the baselines with respect to the number of replaced variables and the variable length change. Our experiments also show that RNNS is efficient in attacking the defended models and is useful for adversarial training."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0IGl3jR3yJEC": {"external_link": "https://openreview.net/forum?id=4Q2Y0kKwPU", "authors": ["Tianlin Li", "Qing Guo", "Aishan Liu", "Mengnan Du", "Zhiming Li", "Yang Liu"], "publication_date": "2023/4/24", "description": "Deep neural networks (DNNs) have made significant progress, but often suffer from fairness issues, as deep models typically show distinct accuracy differences among certain subgroups (e.g., males and females). Existing research addresses this critical issue by employing fairness-aware loss functions to constrain the last-layer outputs and directly regularize DNNs. Although the fairness of DNNs is improved, it is unclear how the trained network makes a fair prediction, which limits future fairness improvements. In this paper, we investigate fairness from the perspective of decision rationale and define the parameter parity score to characterize the fair decision process of networks by analyzing neuron influence in various subgroups. Extensive empirical studies show that the unfair issue could arise from the unaligned decision rationales of subgroups. Existing fairness regularization terms fail to achieve decision rationale alignment because they only constrain last-layer outputs while ignoring intermediate neuron alignment. To address the issue, we formulate the fairness as a new task, i.e., decision rationale alignment that requires DNNs' neurons to have consistent responses on subgroups at both intermediate processes and the final prediction. To make this idea practical during optimization, we relax the naive objective function and propose gradient-guided parity alignment, which encourages gradient-weighted consistency of neurons across subgroups. Extensive experiments on a variety of datasets show that our method can significantly enhance fairness while sustaining a high level of accuracy and outperforming other approaches by a wide\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:epZwgehlCS8C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10137170/", "authors": ["Jingquan Ge", "Yuekang Li", "Yang Liu", "Yaowen Zheng", "Yi Liu", "Lida Zhao"], "publication_date": "2023/4/17", "conference": "2023 Design, Automation & Test in Europe Conference & Exhibition (DATE)", "pages": "1-6", "publisher": "IEEE", "description": "ARM TrustZone separates the system into the rich execution environment (REE) and the trusted execution environment (TEE). Data can be exchanged between REE and TEE through the communication channel, which is based on shared memory and can be accessed by both REE and TEE. Therefore, when the REE OS kernel is untrusted, the security of the communication channel cannot be guaranteed. The proposed schemes to protect the communication channel have high performance overhead and are not secure enough. In this paper, we propose PumpChannel, an efficient and secure communication channel implemented on ARM-FPGA embedded SoC. PumpChannel avoids the use of secret keys, but utilizes a hardware and software collaborative pump to enhance the security and performance of the communication channel. Besides, PumpChannel implements a hardware-based hook integrity monitor to\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:VETmZaymeusC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10061526/", "authors": ["Ziyue Pan", "Wenbo Shen", "Xingkai Wang", "Yutian Yang", "Rui Chang", "Yao Liu", "Chengwei Liu", "Yang Liu", "Kui Ren"], "publication_date": "2023/3/7", "journal": "IEEE Transactions on Dependable and Secure Computing", "publisher": "IEEE", "description": "The continuous integration and continuous deployment (CI/CD) pipeline has been widely used and is becoming popular on Internet hosting platforms, such as GitHub. While being popular, however, current CI/CD pipelines suffer from malicious code and severe vulnerabilities. Even worse, it is often under-protected as people have not been fully aware of its attack surfaces and the corresponding impacts. Therefore, in this paper, we conduct a large-scale measurement and a systematic analysis to reveal the attack surfaces of the CI/CD pipeline and quantify their security impacts. Specifically, for the measurement, we collect a data set of 320,000+ CI/CD pipeline-configured GitHub repositories and build an analysis tool to parse the CI/CD pipelines and extract security-critical usages. Our measurement reveals that the script runtimes are prone to code hiding while the script usage update is not in time, giving attackers\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:-2axzXc1YoMC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10035458/", "authors": ["Wenbing Tang", "Yuan Zhou", "Haiying Sun", "Yuhong Zhang", "Yang Liu", "Zuohua Ding", "Jing Liu", "Jifeng He"], "publication_date": "2023/2/2", "journal": "IEEE Robotics and Automation Letters", "volume": "8", "issue": "3", "pages": "1603-1610", "publisher": "IEEE", "description": "Motion planning (MP) is essential but challenging for mobile robots. Most of the existing MP methods, at each instant, compute an action based on the states of the robot and the surrounding obstacles, assuming that the robot's localization module is attack-free. Unfortunately, the localization module is vulnerable to sensor attacks, such as GPS spoofing attacks. In this letter, we propose a novel robust framework,  GAN-MP , where a generative adversarial network (GAN) is exploited to mitigate the localization attacks, and the state-of-the-art MP methods are applied to generate collision-free actions. Specifically,  GAN-MP  aims to learn a Generator to compute the potential positions of the robot. Consequently, it can reserve the robot's benign states while correcting the attacked states. Hence, it is suitable for benign and attacked scenarios without any attack detector. In addition,  GAN-MP  is method-agnostic and can be\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:ziRtHtnO-_kC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/10018279/", "authors": ["Chunrong Fang", "Shengcheng Yu", "Ting Su", "Jing Zhang", "Yuanhan Tian", "Yang Liu"], "publication_date": "2023/1/16", "journal": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "description": "The rising of the Android market demands higher quality assurance of Android applications (apps) to sharpen the competitive edge, and techniques for traditional software have problems adapting for mobile apps. Android apps often require testing on a large-scale device cluster, which produces a large amount of test reports consisting of heterogeneous data, e.g., hardware information, GUI screenshots, runtime logs. Such data are hard to merge to be unified analyzed, while they serve as an essential basis for bug inspection and fixing. Existing test report generation or analysis techniques can only handle testing data from different devices separately. They simply list all the information to app developers and have no further processing to summarize test reports. Besides, they neglect the inner connection of the heterogeneous data. Such techniques cannot improve the report reviewing effectiveness and efficiency\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hL4nnw0dEwcC": {"external_link": "https://kaixuanli-ecnu.github.io/files/fse23-sc-codeclone-kairansun.pdf", "authors": ["Kairan Sun", "Zhengzi Xu", "Chengwei Liu", "Kaixuan Li", "Yang Liu"], "publication_date": "2023", "description": "As the development of Solidity smart contracts has increased in popularity, the reliance on external sources such as third-party packages increases to reduce development costs. However, despite the use of external sources bringing flexibility and efficiency to the development, they could also complicate the process of assuring the security of downstream applications due to the lack of package managers for standardized ways and sources. While previous studies have only focused on code clones without considering how the external components are introduced, the compositions of a smart contract and their characteristics still remain puzzling. To fill these gaps, we conducted an empirical study with over 350,000 Solidity smart contracts to uncover their compositions, conduct code reuse analysis, and identify prevalent development patterns. Our findings indicate that a typical smart contract comprises approximately 10 subcontracts, with over 80% of these originating from external sources, reflecting the significant reliance on thirdparty packages. For self-developed subcontracts, around 50% of the subcontracts have less than 10% unique functions, suggesting that code reuse at the level of functions is also common. For external subcontracts, though around 35% of the subcontracts are interfaces to provide templates for standards or protocols, an inconsistency in the use of subcontract types is also identified. Lastly, we extracted 61 frequently reused development patterns, offering valuable insights for secure and efficient smart contract development."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Jnwaj-qfA0gC": {"external_link": "https://sen-chen.github.io/img_cs/pdf/fse2023-sast.pdf", "authors": ["Kaixuan Li", "Sen Chen", "Lingling Fan", "Ruitao Feng", "Han Liu", "Chengwei Liu", "Yang Liu", "Yixiang Chen"], "publication_date": "2023", "description": "The early detection and handling of vulnerabilities in software code is a matter of concern for software development. In recent years, security vulnerabilities such as Log4Shell [66] and Spring4Shell [67] have raised alarm bells. Researchers have also proposed various methods to detect software vulnerabilities such as formal verification [4], static application security testing (SAST)[59], dynamic application security testing (DAST)[95], and interactive application security testing (IAST)[81]. Practically, SAST is the most popular technology due to its lower cost, faster operation, and stronger capability to detect bugs or vulnerabilities without executing a program. Hence, the development of SAST technology has obviously evolved, and the number of corresponding tools has rapidly grown in recent years [13, 44, 68\u201370, 74, 85, 90, 93, 107]. However, it is still challenging for users to objectively evaluate and select the appropriate SAST tools due to the following reasons.(1) Firstly, existing studies are mainly conducted on synthetic datasets [2, 58, 80, 101], where vulnerabilities are usually implemented and injected into programs manually. Compared to"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:vQNKwTyuBiAC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3617168", "authors": ["Tianlin Li", "Xiaofei Xie", "Jian Wang", "Qing Guo", "Aishan Liu", "Lei Ma", "Yang Liu"], "publication_date": "2023", "journal": "ACM Transactions on Software Engineering and Methodology", "publisher": "ACM", "description": "Deep Neural Networks (DNNs) have achieved tremendous success in many applications, while it has been demonstrated that DNNs can exhibit some undesirable behaviors on concerns such as robustness, privacy, and other trustworthiness issues. Among them, fairness (i.e.,, non-discrimination) is one important property especially when they are applied to some sensitive applications (e.g.,, finance and employment). However, DNNs easily learn spurious correlations between protected attributes (e.g.,, age, gender, race) and the classification task and develop discriminatory behaviors if the training data is imbalanced. Such discriminatory decisions in sensitive applications would introduce severe social impacts. To expose potential discrimination problems in DNNs before putting them in use, some testing techniques have been proposed to identify the discriminatory instances (i.e.,, instances that show defined\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:c5UgKxj1dGoC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3617183", "authors": ["Zhang Feng", "Zhang Leping", "Zhao Yongwang", "Liu Yang", "Sun Jun"], "publication_date": "2023", "journal": "Formal Aspects of Computing", "publisher": "ACM", "description": "ARINC 653 as the de facto standard of partitioning operating systems has been applied in many safety-critical domains. The multi-core version of ARINC 653, ARINC 653 Part1-4 (Version 4), provides support for services to be utilized with a module that contains multiple processor cores. Formal specification and analysis of this standard document could provide a rigorous specification and uncover concealed errors in the textual description of service requirements. This paper proposes a specification method for concurrency on a multi-core platform using Event-B and a refinement structure for the complicated ARINC 653 Part1-4, provides a comprehensive, stepwise refinement-based Event-B specification with seven refinement layers, and then performs formal proof and analysis in RODIN. We verify that the errors discovered in the single-core version standard (ARINC 653 Part1-3) also exist in the ARINC 653 Part1-4\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:38z6pN3vtwoC": {"external_link": "https://www.usenix.org/conference/usenixsecurity23/presentation/deng-gelei", "authors": ["Gelei Deng", "Zhiyi Zhang", "Yuekang Li", "Yi Liu", "Tianwei Zhang", "Yang Liu", "Guo Yu", "Dongjin Wang"], "publication_date": "2023", "conference": "32nd USENIX Security Symposium (USENIX Security 23)", "pages": "5593-5609", "description": "RESTful APIs have become arguably the most prevalent endpoint for accessing web services. Blackbox vulnerability scanners are a popular choice for detecting vulnerabilities in web services automatically. Unfortunately, they suffer from a number of limitations in RESTful API testing. Particularly, existing tools cannot effectively obtain the relations between API operations, and they lack the awareness of the correct sequence of API operations during testing. These drawbacks hinder the tools from requesting the API operations properly to detect potential vulnerabilities."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:dw2rCEx0FpQC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3604608", "authors": ["Shouguo Yang", "Zhengzi Xu", "Yang Xiao", "Zhe Lang", "Wei Tang", "Yang Liu", "Zhiqiang Shi", "Hong Li", "Limin Sun"], "publication_date": "2023", "journal": "ACM Transactions on Software Engineering and Methodology", "publisher": "ACM", "description": "Vulnerability is a major threat to software security. It has been proven that binary code similarity detection approaches are efficient to search for recurring vulnerabilities introduced by code sharing in binary software. However, these approaches suffer from high false-positive rates since they usually take the patched functions as vulnerable, and they usually do not work well when binaries are compiled with different compilation settings. To this end, we propose an approach, named Robin, to confirm recurring vulnerabilities by filtering out patched functions. Robin is powered by a lightweight symbolic execution to solve the set of function inputs that can lead to the vulnerability-related code. It then executes the target functions with the same inputs to capture the vulnerable or patched behaviors for patched function filtration. Experimental results show that Robin achieves high accuracy for patch detection across different\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Ib8FQH8mdS0C": {"external_link": "https://arxiv.org/abs/2210.07482", "authors": ["Peiyang Jia", "Chengwei Liu", "Hongyu Sun", "Chengyi Sun", "Mianxue Gu", "Yang Liu", "Yuqing Zhang"], "publication_date": "2022/10/14", "journal": "arXiv preprint arXiv:2210.07482", "description": "Currently, little is known about the structure of the Cargo ecosystem and the potential for vulnerability propagation. Many empirical studies generalize third-party dependency governance strategies from a single software ecosystem to other ecosystems but ignore the differences in the technical structures of different software ecosystems, making it difficult to directly generalize security governance strategies from other ecosystems to the Cargo ecosystem. To fill the gap in this area, this paper constructs a knowledge graph of dependency vulnerabilities for the Cargo ecosystem using techniques related to knowledge graphs to address this challenge. This paper is the first large-scale empirical study in a related research area to address vulnerability propagation in the Cargo ecosystem. This paper proposes a dependency-vulnerability knowledge graph parsing algorithm to determine the vulnerability propagation path and propagation range and empirically studies the characteristics of vulnerabilities in the Cargo ecosystem, the propagation range, and the factors that cause vulnerability propagation. Our research has found that the Cargo ecosystem's security vulnerabilities are primarily memory-related. 18% of the libraries affected by the vulnerability is still affected by the vulnerability in the latest version of the library. The number of versions affected by the propagation of the vulnerabilities is 19.78% in the entire Cargo ecosystem. This paper looks at the characteristics and propagation factors triggering vulnerabilities in the Cargo ecosystem. It provides some practical resolution strategies for administrators of the Cargo community, developers who use\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:njwWRc9PkvUC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/3551349.3559498", "authors": ["Yi Liu", "Yuekang Li", "Yang Liu", "Ruiyuan Wan", "Runchao Wu", "Qingkun Liu"], "publication_date": "2022/10/10", "book": "Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering", "pages": "1-5", "description": "Many big companies are providing cloud services through RESTful APIs nowadays. With the growing popularity of RESTful API, testing RESTful API becomes crucial. To address this issue, researchers have proposed several automatic RESTful API testing techniques. At Huawei, we design and implement an automatic RESTful API testing framework named Morest. Morest has been used to test ten RESTful API services and helped to detected 83 previously unknown bugs which were all confirmed and fixed by the developers. On one hand, we find that Morest shows great capability of detecting bugs in RESTful API s. On the other hand, we also notice that human effort is inevitable and important when applying automatic RESTful API techniques in practice.  In this paper, we focus on discussing the industry practice of using automatic RESTful API testing techniques. We share our experience of building automatic\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:iKz1iSBcTNcC": {"external_link": "https://research.polyu.edu.hk/en/publications/research-on-third-party-libraries-in-android-apps-a-taxonomy-and-", "authors": ["Xian Zhan", "Tianming Liu", "Lingling Fan", "Sen Chen", "Xiapu Luo", "Yang Liu"], "publication_date": "2022/10/1", "source": "IEEE Transactions on Software Engineering", "volume": "48", "issue": "10", "pages": "4181-4213", "publisher": "IEEE", "description": "Third-party libraries (TPLs) have been widely used in mobile apps, which play an essential part in the entire Android ecosystem. However, TPL is a double-edged sword. On the one hand, it can ease the development of mobile apps. On the other hand, it also brings security risks such as privacy leaks or increased attack surfaces (eg, by introducing over-privileged permissions) to mobile apps. Although there are already many studies for characterizing third-party libraries, including automated detection, security and privacy analysis of TPLs, TPL attributes analysis, etc., what strikes us odd is that there is no systematic study to summarize those studies' endeavors. To this end, we conduct the first systematic literature review on Android TPL-related research. Following a well-defined systematic literature review protocol, we collected 74 primary research papers closely related to Android third-party library from 2012 to 2020. After carefully examining these studies, we designed a taxonomy of TPL-related research studies and conducted a systematic study to summarize current solutions, limitations, challenges and possible implications of new research directions related to third-party library analysis. We hope that these contributions can give readers a clear overview of existing TPL-related studies and inspire them to go beyond the current status quo by advancing the discipline with innovative approaches."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:MTuJV9umhWMC": {"external_link": "https://openreview.net/forum?id=6G1MXNU8VtV", "authors": ["Jie Zhang", "Wei Ma", "Xiaofei Xie", "Qiang Hu", "Yang Liu"], "publication_date": "2022/9/29", "description": "Pre-trained models for programming languages are widely used to solve code tasks in Software Engineering (SE) community, such as code clone detection and bug identification. Reliability is the primary concern of these machine learning applications in SE because software failure can lead to intolerable loss. However, deep neural networks are known to suffer from adversarial attacks.  In this paper, we propose a novel black-box adversarial attack based on model behaviors for pre-trained programming language models, named Representation Nearest Neighbor Search(RNNS). The proposed approach can efficiently identify adversarial examples via variable replacement in an ample search space of real variable names under similarity constraints. We evaluate RNNS on 6 code tasks (e.g., clone detection), 3 programming languages (Java, Python, and C), and 3 pre-trained code models: CodeBERT, GraphCodeBERT, and CodeT5. The results demonstrate that RNNS outperforms the state-of-the-art black-box attacking method (MHM) in terms of both attack success rate and quality of generated adversarial examples."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UbXTy9l1WKIC": {"external_link": "https://link.springer.com/article/10.1007/s10515-022-00327-z", "authors": ["Yang Liu", "Yan Ma", "Yongsheng Yang"], "publication_date": "2022/5", "journal": "Automated Software Engineering", "volume": "29", "issue": "1", "pages": "29", "publisher": "Springer US", "description": "Stochastic model checking can automatically verify and analyse the software-driven autonomous systems with stochastic behaviors, which is a formal verification technique based on system models. When coping with large-scale systems, it suffers from state space explosion problem very seriously. Model abstraction is a potential technique for mitigating this problem. At present, only a few properties specified by PCTL (Probabilistic Computation Tree Logic), such as probabilistic safety and probabilistic reachability, can be preserved in the practical model abstraction of stochastic model checking, which are the proper subset of PCTL* (Probabilistic Computation Tree Logic*) properties. For dealing with this, an effective and efficient three-valued model abstraction framework for full PCTL* stochastic model checking is proposed in this paper. We propose a new abstract model to preserve full PCTL* properties for\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:SN5MtqHu-psC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-031-17244-1_12", "authors": ["Ke Jiang", "Tianwei Zhang", "David San\u00e1n", "Yongwang Zhao", "Yang Liu"], "publication_date": "2022", "conference": "International Conference on Formal Engineering Methods", "pages": "190-208", "publisher": "Springer, Cham", "description": "Security-aware CPU caches have been designed to mitigate side-channel attacks and prevent information leakage. How to validate the effectiveness of these designs remains an unsolved problem. Prior works assess the security of architectures empirically without a formal guarantee, making the evaluation results less convincing. In this paper, we propose a comprehensive methodology based on formal methods for security verification of cache architectures. Specifically, we design an entropy-based noninterference reasoning framework with two unwinding conditions to assess the information leakage of the cache designs. The reasoning framework quantifies the dependency relationships by the mutual information between the distributions of input and output of side channels. Given a cache design, we formalize its behavior specification along with the cache layouts into an abstract state machine, to instantiate the\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kmGFBRAO0EoC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/9678794/", "authors": ["Siqi Li", "Yun Lin", "Xiaofei Xie", "Yuekang Li", "Xiaohong Li", "Weimin Ge", "Yang Liu", "Jinsong Dong"], "publication_date": "2021/11/15", "conference": "2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)", "pages": "1186-1189", "publisher": "IEEE", "description": "Fuzzing has been a widely-used technique for discovering software vulnerabilities. Many existing fuzzers leverage coverage-feedback to evolve seeds to maximize (optimize) program branch coverage. Recently, some techniques propose to train deep learning models to predict the branch coverage of an arbitrary input. Those techniques have proved their success in improving coverage and discovering bugs under different experimental settings. However, deep learning models, usually as a black magic box, are notoriously lack of explanation. Moreover, their performance can be sensitive to the collected runtime coverage information for training, indicating potentially unstable performance. To this end, in this work we conduct a systematic and extensive empirical study on 4 types of deep learning models across 6 projects to reproduce the actual performance of deep learning fuzzers, analyze the advantages and\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KjnAay3C9J8C": {"external_link": "https://openreview.net/forum?id=LjD1FGIza0I", "authors": ["Xiaoxuan Lou", "Shangwei Guo", "Tianwei Zhang", "Jiwei Li", "Yinqian Zhang", "Yang Liu"], "publication_date": "2021/9/29", "description": "We present a novel watermarking scheme to achieve the intellectual property (IP) protection and ownership verification of DNN architectures. Existing works all embedded watermarks into the model parameters while treating the architecture as public property. These solutions were proven to be vulnerable by an adversary to detect or remove the watermarks. In contrast, we are the first to claim model architectures as an important IP for model owners, and propose to implant watermarks into the architectures. We design new algorithms based on Neural Architecture Search (NAS) to generate watermarked architectures, which are unique enough to represent the ownership, while maintaining high model usability. Such watermarks can be extracted via side-channel-based model extraction techniques with high fidelity. Extensive evaluations show our scheme has negligible impact on the model performance, and exhibits strong robustness against various model transformations and adaptive attacks."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_r6PDwDh8pAC": {"external_link": "https://www.computer.org/csdl/api/v1/periodical/trans/ts/2021/05/09430780/1tzunZupaUg/download-article/pdf", "authors": ["Yinxing Xue", "Zhengzi Xu", "Mahinthan Chandramohan", "Yang Liu"], "publication_date": "2021/5/13", "journal": "IEEE Transactions on Software Engineering", "volume": "47", "issue": "5", "pages": "1088-1088", "publisher": "IEEE", "description": "[1] Y. Xue, Z. Xu, M. Chandramohan, and Y. Liu,\u201cAccurate and scalable cross-architecture cross-OS binary code search with emulation,\u201d IEEE Trans. Softw. Eng, vol. 45, no. 11, pp. 1125\u20131149, Nov. 2019."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Xi1bsBfZRoQC": {"external_link": null, "authors": ["X Tan", "Y Zhou", "Z Ding", "Y Liu"], "publication_date": "2021", "publisher": "s Note: MDPI stays neutral with regard to jurisdictional claims in published maps and institutional affil-iations."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:INESB4G31EoC": {"external_link": null, "authors": ["Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Lei Ma", "Jian Wang", "Bing Yu", "Wei Feng", "Yang Liu"], "publication_date": "2020/12/6", "book": "Proceedings of the 34th International Conference on Neural Information Processing Systems", "pages": "975-985"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:bZUHSELkOu4C": {"external_link": "https://cris.bgu.ac.il/en/publications/out-of-distribution-detection-and-generalization-to-enhance-fairn", "authors": ["Yushi Cao", "David Berend", "Palina Tolmach", "Guy Amit", "Moshe Levy", "Yang Liu", "Asaf Shabtai", "Yuval Elovici"], "publication_date": "2020/9/11", "description": "Deep learning-based facial recognition systems have experienced increased media attention due to exhibiting unfair behavior. Large enterprises, such as IBM, shut down their facial recognition and age prediction systems as a consequence. Age prediction is an especially difficult application with the issue of fairness remaining an open research problem (eg predicting age for different ethnicity equally accurate). One of the main causes of unfair behavior in age prediction methods lies in the distribution and diversity of the training data. In this work, we present two novel approaches for dataset curation and data augmentation in order to increase fairness through distribution aware curation and increase diversity through distribution aware augmentation. To achieve this, we created an out-of-distribution technique which is used to select the data most relevant to the deep neural network's (DNN) task when balancing the data among age, ethnicity, and gender. Our approach shows promising results. Our best-trained DNN model outperformed all academic and industrial baselines in terms of fairness by up to 4.92 times. When it comes to generalization, the increase in diversity also enhanced the DNN's performance, outperforming state-of-the-art approaches of prior research on the Age Estimation Benchmark dataset AFAD by 30.40% and the Amazon AWS and Microsoft Azure public cloud systems by 31.88% and 10.95%, respectively."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:IMJZBBnUFLgC": {"external_link": "https://cris.bgu.ac.il/en/publications/fairness-matters-a-data-driven-framework-towards-fair-and-high-pe", "authors": ["Yushi Cao", "David Berend", "Palina Tolmach", "Moshe Levy", "Guy Amit", "Asaf Shabtai", "Yuval Elovici", "Yang Liu"], "publication_date": "2020/9/11", "journal": "arXiv preprint arXiv:2009.05283", "description": "Deep learning-based facial recognition systems have experienced increased media attention due to exhibiting unfair behavior. Large enterprises, such as IBM, shut down their facial recognition and age prediction systems as a consequence. Age prediction is an especially difficult application with the issue of fairness remaining an open research problem (eg, predicting age for different ethnicity equally accurate). One of the main causes of unfair behavior in age prediction methods lies in the distribution and diversity of the training data. In this work, we present two novel approaches for dataset curation and data augmentation in order to increase fairness through balanced feature curation and increase diversity through distribution aware augmentation. To achieve this, we introduce out-of-distribution detection to the facial recognition domain which is used to select the data most relevant to the deep neural network's (DNN) task when balancing the data among age, ethnicity, and gender. Our approach shows promising results. Our best-trained DNN model outperformed all academic and industrial baselines in terms of fairness by up to 4.92 times and also enhanced the DNN's ability to generalize outperforming Amazon AWS and Microsoft Azure public cloud systems by 31.88% and 10.95%, respectively."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:brChLMnLtjYC": {"external_link": null, "authors": ["Lun Yiu Nie", "Cuiyun Gao", "Zhicong Zhong", "Wai Lam", "Yang Liu", "Zenglin Xu"], "publication_date": "2020/7/14", "journal": "arXiv preprint arXiv:2007.06934"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9PbDelcLwNgC": {"external_link": null, "authors": ["Renzhi Wang", "Tianwei Zhang", "Xiaofei Xie", "Lei Ma", "Cong Tian", "Felix Juefei-Xu", "Yang Liu"], "publication_date": "2020/7/2", "journal": "arXiv preprint arXiv:2007.01299"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:c96biSVJ3QQC": {"external_link": null, "authors": ["Lun Yiu Nie", "Cuiyun Gao", "Zhicong Zhong", "Wai Lam", "Yang Liu", "Zenglin Xu"], "publication_date": "2020/7", "journal": "arXiv e-prints", "pages": "arXiv: 2007.06934"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:xmg73Fui0jkC": {"external_link": null, "authors": ["Bozhi Wu", "Sen Chen", "Cuiyun Gao", "Lingling Fan", "Yang Liu", "Weiping Wen", "Michael Lyu"], "publication_date": "2020/4/24", "journal": "arXiv preprint arXiv:2004.11516"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:C-GuzCveMkwC": {"external_link": null, "authors": ["Yusi Lei", "Sen Chen", "Lingling Fan", "Fu Song", "Yang Liu"], "publication_date": "2020/4/15", "journal": "arXiv preprint arXiv:2004.06954"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rzkGdFpNPO0C": {"external_link": null, "authors": ["Yupeng Cheng", "Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Shang-Wei Lin", "Weisi Lin", "Wei Feng", "Yang Liu"], "publication_date": "2020"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:sFUlmsclzkgC": {"external_link": "http://jcst.ict.ac.cn/EN/10.1007/s11390-019-1955-3", "authors": ["Ling-Yun Situ", "Lin-Zhang Wang", "Yang Liu", "Bing Mao", "Xuan-Dong Li"], "publication_date": "2019/8/31", "journal": "\u8ba1\u7b97\u673a\u79d1\u5b66\u6280\u672f\u5b66\u62a5", "volume": "34", "issue": "5", "pages": "972-992", "description": "Missing checks for untrusted inputs used in security-sensitive operations is one of the major causes of various vulnerabilities. Efficiently detecting and repairing missing checks are essential for prognosticating potential vulnerabilities and improving code reliability. We propose a systematic static analysis approach to detect missing checks for manipulable data used in security-sensitive operations of C/C++ programs and recommend repair references. First, customized securitysensitive operations are located by lightweight static analysis. Then, the assailability of sensitive data used in securitysensitive operations is determined via taint analysis. And, the existence and the risk degree of missing checks are assessed. Finally, the repair references for high-risk missing checks are recommended. We implemented the approach into an automated and cross-platform tool named Vanguard based on Clang/LLVM 3.6. 0\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:n0_S8QYMK-AC": {"external_link": "https://arxiv.org/abs/1906.11203", "authors": ["Zhe Hou", "David Sanan", "Alwen Tiu", "Yang Liu", "Jin Song Dong"], "publication_date": "2019/6/24", "journal": "arXiv preprint arXiv:1906.11203", "description": "SPARC processors have many applications in mission-critical industries such as aviation and space engineering. Hence, it is important to provide formal frameworks that facilitate the verification of hardware and software that run on or interface with these processors. This paper presents the first mechanised SPARC Total Store Ordering (TSO) memory model which operates on top of an abstract model of the SPARC Instruction Set Architecture (ISA) for multi-core processors. Both models are specified in the theorem prover Isabelle/HOL. We formalise two TSO memory models: one is an adaptation of the axiomatic SPARC TSO model, the other is a novel operational TSO model which is suitable for verifying execution results. We prove that the operational model is sound and complete with respect to the axiomatic model. Finally, we give verification examples with two case studies drawn from the SPARCv9 manual."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:FS78WRl2AkQC": {"external_link": null, "authors": ["Sen Chen", "Lingling Fan", "Chunyang Chen", "Ting Su", "Wenhe Li", "Yang Liu", "Lihua Xu"], "publication_date": "2019", "pages": "596-607", "publisher": "IEEE"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:N75c7piKpcAC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-030-11333-9_4", "authors": ["Jakub Breier", "Xiaolu Hou", "Yang Liu"], "publication_date": "2019", "book": "Automated Methods in Cryptographic Fault Analysis", "pages": "89-119", "publisher": "Springer, Cham", "description": "Normally, fault attack models are determined by analyzing the cipher algorithm and finding exploitable spots in non-linear and permutation layers. However, due to optimizations and different ways of realizing algorithmic operations, cipher level analysis does not capture enough details to locate the vulnerable parts of software implementations. On the other hand, manually analyzing the assembly code requires non-negligible amount of time and expertise. In this chapter, we propose an automated approach for analyzing cipher implementations in assembly. By representing the whole assembly program as a data flow graph, we can efficiently identify the vulnerable spots. Fault propagation is analyzed in a subgraph, constructed from each vulnerable spot, allowing equations for differential fault analysis (DFA) to be automatically generated. We have created a tool that implements our approach\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:GGgVawPscysC": {"external_link": "https://arxiv.org/abs/1810.07855", "authors": ["Yongwang Zhao", "David Sanan", "Fuyuan Zhang", "Yang Liu"], "publication_date": "2018/10/18", "journal": "arXiv preprint arXiv:1810.07855", "description": "Reactive systems are composed of a well defined set of input events that the system reacts with by executing an associated handler to each event. In concurrent environments, event handlers can interact with the execution of other programs such as hardware interruptions in preemptive systems, or other instances of the reactive system in multicore architectures. State of the art rely-guarantee based verification frameworks only focus on imperative programs, being difficult to capture in the rely and guarantee relations interactions with possible infinite sequences of event handlers, and the input arguments to event handlers. In this paper, we propose the formalisation in Isabelle/HOL of an event-based rely-guarantee approach for concurrent reactive systems. We develop a Pi-Core language which incorporates a concurrent imperative and system specification language by `events', and we build a rely-guarantee proof system for Pi-Core and prove its soundness. Our approach can deal with multicore and interruptible concurrency. We use two case studies to show this: an interruptible controller for stepper motors and an ARINC 653 multicore kernel, and prove the functional correctness and preservation of invariants of them in Isabelle/HOL."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Z8CpXElfgm4C": {"external_link": "https://devel.isa-afp.org/browser_info/current/AFP/SPARCv8/document.pdf", "authors": ["Zh\u00e9 H\u00f3u", "David San\u00e1n", "Alwen Tiu", "Yang Liu"], "publication_date": "2018/8/16", "description": "We formalise the SPARCv8 instruction set architecture (ISA) which is used in processors such as LEON3. Our formalisation can be specialised to any SPARCv8 CPU, here we use LEON3 as a running example. Our model covers the operational semantics for all the instructions in the integer unit of the SPARCv8 architecture and it supports Isabelle code export, which effectively turns the Isabelle model into a SPARCv8 CPU simulator. We prove the language-based non-interference property for the LEON3 processor."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:BnRbUGEozz8C": {"external_link": null, "authors": ["Guozhu Meng", "Yinxing Xue", "Jing Kai Siow", "Ting Su", "Annamalai Narayanan", "Yang Liu"], "publication_date": "2017", "journal": "arXiv preprint arXiv: 1711.07451"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:lM7bPffmjyEC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7743435/", "authors": ["HeSuan Hu", "Yan Yang", "Yang Liu", "Nan Du"], "publication_date": "2016/8/21", "conference": "2016 IEEE International Conference on Automation Science and Engineering (CASE)", "pages": "413-420", "publisher": "IEEE", "description": "An automated manufacturing system (AMS) is constituted by numerous, whether sequential or parallel, processes interconnected via a limited number of shared resources. With critical stages as pivots, any monolithic AMS can be partitioned into interacted subsystems. For each of them, there is always an expectation to produce an optimal trajectory in terms of a sequence of events, leading it from the assumptive stating point to the designated destination. The interaction among all subsystems can be resorted to the shared resources, which can be assumed as a quite simple vector, updating the coordinator in a timely manner. Two process structures, i.e., sequential and parallel processes, are formulated in the context of Petri net theory. The former models stages with only precedence relationships whereas the latter models stages with concurrency relationships. Then, the distributed algorithms are developed for\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:3utUx_xxzcoC": {"external_link": "https://link.springer.com/chapter/10.1007/978-3-319-41354-9_8", "authors": ["Tim Muller", "Yang Liu", "Jie Zhang"], "publication_date": "2016/7/18", "conference": "IFIP International Conference on Trust Management", "pages": "113-126", "publisher": "Springer International Publishing", "description": "Predictions are a well-studied form of ratings. Their objective nature allows a rigourous analysis. A problem is that there are attacks on prediction systems and rating systems. These attacks decrease the usefulness of the predictions. Attackers may ignore the incentives in the system, so we may not rely on these to protect ourselves. The user must block attackers, ideally before the attackers introduce too much misinformation. We formally axiomatically define robustness as the property that no rater can introduce too much misinformation. We formally prove that notions of robustness come at the expense of other desirable properties, such as the lack of bias or effectiveness. We also show that there do exist trade-offs between the different properties, allowing a prediction system with limited robustness, limited bias and limited effectiveness."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HFi42EZPDb4C": {"external_link": "https://ieeexplore.ieee.org/abstract/document/7397375/", "authors": ["Akin G\u00fcnay", "Yang Liu", "Jie Zhang", "Partha Dutta"], "publication_date": "2015/12/6", "conference": "2015 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology (WI-IAT)", "volume": "2", "pages": "300-307", "publisher": "IEEE", "description": "In this paper we study automated construction of an agent's behavior for a protocol-based multiagent system, where the exact behaviors of the other agents are unknown. This uncertainty makes it challenging to develop an optimal agent behavior that complies with the system protocol, while ensuring achievement of the agent's temporal goals. To solve this problem, we develop an automated method that uses graph search and model checking techniques to construct the optimal agent behavior with respect to a labeled transition systems model of a protocol and linear temporal logic specification of the agent's goals. We show that our algorithm is sound, complete and optimal. We also conducted computational experiments to evaluate the scalability of our method."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:YJSMXgW81ikC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2771783.2771794", "authors": ["Lin Gui", "Jun Sun", "Yang Liu", "Jin Song Dong"], "publication_date": "2015/7/13", "conference": "Proceedings of the 2015 International Symposium on Software Testing and Analysis", "pages": "293-304", "publisher": "ACM", "description": "Distributed systems like cloud-based services are ever more popular. Assessing the reliability of distributed systems is highly non-trivial. Particularly, the order of executions among distributed components adds a dimension of non-determinism, which invalidates existing reliability assessment methods based on Markov chains. Probabilistic model checking based on models like Markov decision processes is designed to deal with scenarios involving both probabilistic behavior (e.g., reliabilities of system components) and non-determinism. However, its application is currently limited by state space explosion, which makes reliability assessment of distributed system particularly difficult. In this work, we improve the probabilistic model checking through a method of abstraction and reduction, which controls the communications among system components and actively reduces the size of each component. We prove the\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rKOGDx9nJ1EC": {"external_link": "https://dl.acm.org/doi/abs/10.1145/2635868.2661668", "authors": ["Lin Gui", "Jun Sun", "Yang Liu", "Truong Khanh Nguyen", "Jin Song Dong"], "publication_date": "2014/11/11", "conference": "Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering", "pages": "727-730", "publisher": "ACM", "description": "Non-determinism in concurrent or distributed software systems (i.e., various possible execution orders among different distributed components) presents new challenges to the existing reliability analysis methods based on Markov chains. In this work, we present a toolkit RaPiD for the reliability analysis of non-deterministic systems. Taking Markov decision process as reliability model, RaPiD can help in the analysis of three fundamental and rewarding aspects regarding software reliability. First, to have reliability assurance on a system, RaPiD can synthesize the overall system reliability given the reliability values of system components. Second, given a requirement on the overall system reliability, RaPiD can distribute the reliability requirement to each component. Lastly, RaPiD can identify the component that affects the system reliability most significantly. RaPiD has been applied to analyze several real-world\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Wu2CBzYYpfQC": {"external_link": "https://ieeexplore.ieee.org/abstract/document/6899364/", "authors": ["HeSuan Hu", "Yan Yang", "Yang Liu", "Chen Chen"], "publication_date": "2014/8/18", "conference": "2014 IEEE International Conference on Automation Science and Engineering (CASE)", "pages": "449-454", "publisher": "IEEE", "description": "This paper presents new results on structural simplification of a supervisor in a Petri net framework. Supervisor simplification is essential to the efficient and effective functionality of an automated manufacturing system. This work is motivated by the fact that some properties have not been thoroughly explored in the prior supervisor design and simplification studies. If a supervisor is structurally simpler than and behaviorally analogous to another, it is viewed to be better irrespective of its composition. In the semantics of multiset, this work defines the concept of a minimum covering set and derives a necessary and sufficient condition for the existence of a simplest supervisor. Next, it develops an algorithm to compute the optimal supervisor in sense of structural simplicity. An example is provided to illustrate the proposed algorithm. Additionally, a discussion is conducted to distinguish the proposed one from others in\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yhXl426oeGMC": {"external_link": "https://repository.ust.hk/ir/Record/1783.1-65548", "authors": ["Sanjeev Das", "Wei Zhang", "Yang Liu"], "publication_date": "2014/6", "conference": "The 51st ACM/EDAC/IEEE Design Automation Conference (DAC)", "description": "FPGA Based Control Flow Checking - HKUST SPD | The Institutional Repository Skip to content \nSearch Publications Advanced Search Profiles FPGA Based Control Flow Checki... Please use \nthis identifier to cite or link to this item: https://hdl.handle.net/1783.1/65548 FPGA Based Control \nFlow Checking Author Das, Sanjeev Zhang, Wei View this author's profile Liu, Yang Issue Date \n2014 Note Poster at <51st Design Automation Conference> Conference 51st Design \nAutomation Conference, San Francisco, CA, USA, 1-5 June 2014 Language English Type \nConference paper Usage Metrics Page views Full-text downloads Similar Items Reconfigurable \nDynamic Trusted Platform Module for Control Flow Checking Author(s): Das, Sanjeev; Zhang, \nWei; Liu, Yang 2014 A Fine-Grained Control Flow Integrity Approach Against Runtime \nMemory Attacks for Embedded Systems Author(s): Das, Sanjeev; Zhang, Wei; Liu, Yang \u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5aszrCQfcYQC": {"external_link": "https://core.ac.uk/download/pdf/287750815.pdf", "authors": ["Shuang LIU", "Jun SUN", "Yang LIU", "Yue ZHANG", "Bimlesh WADHWA", "Jin Song DONG", "Xinyu WANG"], "publication_date": "2014", "journal": "Proceedings of the 29th ACM/IEEE international conference on Automated software, V\u00e4ster\u00e5s, Sweden", "pages": "15-19", "description": "Use cases, as the primary techniques in the user requirement analysis, have been widely adopted in the requirement engineering practice. As developed early, use cases also serve as the basis for function requirement development, system design and testing. Errors in the use cases could potentially lead to problems in the system design or implementation. It is thus highly desirable to detect errors in use cases. Automatically analyzing use case documents is challenging primarily because they are written in natural languages. In this work, we aim to achieve automatic defect detection in use case documents by leveraging on advanced parsing techniques. In our approach, we first parse the use case document using dependency parsing techniques. The parsing results of each use case are further processed to form an activity diagram. Lastly, we perform defect detection on the activity diagrams. To evaluate our approach, we have conducted experiments on 200+ real-world as well as academic use cases. The results show the effectiveness of our method."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:rn2Io16i3IwC": {"external_link": "https://scholar.google.com/scholar?cluster=1788954817777661235&hl=en&oi=scholarr", "authors": ["Shuang Liu", "Yang Liu", "Etienne Andr\u00e9", "Christine Choppy", "Jun Sun", "Bimlesh Wadhwa", "Jin Song Dong"], "publication_date": "2013/1/27", "description": "UML is a widely used notation introduced by the Object Management Group (OMG), and formalizing its semantics is an important issue. In this work, we concentrate on formalizing UML state machines which are used to express the dynamic behavior of software systems. We propose a formal operational semantics covering all features of the latest version (2.4. 1) of UML state machine specification. We use Labeled Transition System (LTS) as the semantic model of UML state machines, which is subject to automatic verification techniques like model checking. Furthermore, our proposed semantics includes synchronous and asynchronous communications between state machines. We implement our approach in USM2C, a model checker supporting editing, simulation and automatic verification of UML state machines. Experiments show the effectiveness of our approach."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=500&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:M6kHaddf_34C": {"external_link": "https://dr.ntu.edu.sg/handle/10356/103347", "authors": ["Jin Song Dong", "Yanhong A Liu", "Shao Jie Zhang", "Jun Sun", "Yang Liu", "Wei Chen"], "publication_date": "2013", "description": "Linearizability is an important correctness criterion for implementations of concurrent objects. Automatic checking of linearizability is challenging because it requires checking that: (1) All executions of concurrent operations are serializable, and (2) the serialized executions are correct with respect to the sequential semantics. In this work, we describe a method to automatically check linearizability based on refinement relations from abstract specifications to concrete implementations. The method does not require that linearization points in the implementations be given, which is often difficult or impossible. However, the method takes advantage of linearization points if they are given. The method is based on refinement checking of finite-state systems specified as concurrent processes with shared variables. To tackle state space explosion, we develop and apply symmetry reduction, dynamic partial order reduction, and a combination of both for refinement checking. We have built the method into the PAT model checker, and used PAT to automatically check a variety of implementations of concurrent objects, including the first algorithm for scalable nonzero indicators. Our system is able to find all known and injected bugs in these implementations."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:EsEWqaRxkBgC": {"external_link": null, "authors": ["Manchun Zheng", "Jun Sun", "David San\u00e1n", "Yang Liu", "Jin Song Dong", "Yu Gu"], "publication_date": "2011/7/22"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:K8XpiWYAYk8C": {"external_link": "https://ink.library.smu.edu.sg/sis_research/4962/", "authors": ["Jun SUN", "Yang LIU", "Jin Song DONG", "Wei CHEN", "Yanhong A LIU"], "publication_date": "2009", "pages": "406", "description": "Concurrent algorithms are notoriously difficult to design correctly, and high performance algorithms that make little or no use of locks even more so. In this paper, we describe a formal verification of a recent concurrent data structure Scalable NonZero Indicators. The algorithm supports incrementing, decrementing, and querying the shared counter in an efficient and linearizable way without blocking. The algorithm is highly non-trivial and it is challenging to prove the correctness. We have proved that the algorithm satisfies linearizability, by showing a trace refinement relation from the concrete implementation to its abstract specification. These models are specified in CSP and verified automatically using the model checking toolkit PAT."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:hy8If-OszRcC": {"external_link": "https://ink.library.smu.edu.sg/context/sis_research/article/8494/viewcontent/2103.00229.pdf", "authors": ["Chris Xing TIAN", "Haoliang LI", "Xiaofei XIE", "Yang LIU", "Shiqi WANG"], "journal": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "pages": "1-12", "description": "This paper focuses on the domain generalization task where domain knowledge is unavailable, and even worse, only samples from a single domain can be utilized during training. Our motivation originates from the recent progresses in deep neural network (DNN) testing, which has shown that maximizing neuron coverage of DNN can help to explore possible defects of DNN (ie, misclassification). More specifically, by treating the DNN as a program and each neuron as a functional point of the code, during the network training we aim to improve the generalization capability by maximizing the neuron coverage of DNN with the gradient similarity regularization between the original and augmented samples. As such, the decision behavior of the DNN is optimized, avoiding the arbitrary neurons that are deleterious for the unseen samples, and leading to the trained DNN that can be better generalized to out-of-distribution\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:_TA463COvscC": {"external_link": "https://ink.library.smu.edu.sg/context/sis_research/article/8066/viewcontent/3243734.3243849.pdf", "authors": ["Hongxu CHEN", "Yinxing XUE", "Yuekang LI", "Bihuan CHEN", "Xiaofei XIE", "Xiuheng WU", "Yang LIU"], "journal": "CCS", "volume": "18", "pages": "15-19", "description": "Grey-box fuzzing is a practically effective approach to test realworld programs. However, most existing grey-box fuzzers lack directedness, ie the capability of executing towards user-specified target sites in the program. To emphasize existing challenges in directed fuzzing, we propose Hawkeye to feature four desired properties of directed grey-box fuzzers. Owing to a novel static analysis on the program under test and the target sites, Hawkeye precisely collects the information such as the call graph, function and basic block level distances to the targets. During fuzzing, Hawkeye evaluates exercised seeds based on both static information and the execution traces to generate the dynamic metrics, which are then used for seed prioritization, power scheduling and adaptive mutating. These strategies help Hawkeye to achieve better directedness and gravitate towards the target sites. We implemented Hawkeye as a\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Z1-ZXlhpk50C": {"external_link": "https://ink.library.smu.edu.sg/context/sis_research/article/8242/viewcontent/tse21_av.pdf", "authors": ["Yao ZHANG", "Xiaofei XIE", "Yi LI", "Yi LIN", "Sen CHEN", "Yang LIU", "Xiaohong LI"], "journal": "IEEE Transactions on Software Engineering", "pages": "1-15", "description": "Over the past few years, SMT string solvers have found their applications in an increasing number of domains, such as program analyses in mobile and Web applications, which require the ability to reason about string values. A series of research has been carried out to find quality issues of string solvers in terms of its correctness and performance. Yet, none of them has considered the performance regressions happening across multiple versions of a string solver. To fill this gap, in this paper, we focus on solver performance regressions (SPRs), ie, unintended slowdowns introduced during the evolution of string solvers. To this end, we develop SPRFinder to not only generate test cases demonstrating SPRs, but also localize the probable causes of them, in terms of commits. We evaluated the effectiveness of SPRFinder on three state-of-the-art string solvers, ie, Z3Seq, Z3Str3, and CVC4. The results demonstrate that\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5NtQbJVckFQC": {"external_link": "https://ink.library.smu.edu.sg/context/sis_research/article/8770/viewcontent/GraphSearchNet_av.pdf", "authors": ["Shangqing LIU", "Xiaofei XIE", "Jjingkai SIOW", "Lei MA", "Guozhu MENG", "Yang LIU"], "journal": "IEEE Transactions on Software Engineering", "pages": "1-16", "description": "Code search aims to retrieve accurate code snippets based on a natural language query to improve software productivity and quality. With the massive amount of available programs such as (on GitHub or Stack Overflow), identifying and localizing the precise code is critical for the software developers. In addition, Deep learning has recently been widely applied to different code-related scenarios, eg, vulnerability detection, source code summarization. However, automated deep code search is still challenging since it requires a high-level semantic mapping between code and natural language queries. Most existing deep learning-based approaches for code search rely on the sequential text ie, feeding the program and the query as a flat sequence of tokens to learn the program semantics while the structural information is not fully considered. Furthermore, the widely adopted Graph Neural Networks (GNNs) have\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:L-8cPhgLE2YC": {"external_link": "https://ink.library.smu.edu.sg/cgi/viewcontent.cgi?params=/context/sis_research/article/8652/&path_info=3551349.3560422_pvoa_cc_by.pdf", "authors": ["Xueyang LI", "Shangqing LIU", "Ruitao FENG", "Guozhu MENG", "Xiaofei XIE", "Kai CHEN", "Yang LIU"], "journal": "ACM International Conference on Automated Software Engineering, Rochester, MI, October", "pages": "10-14", "description": "Automatically fixing compilation errors can greatly raise the productivity of software development, by guiding the novice or AI programmers to write and debug code. Recently, learning-based program repair has gained extensive attention and became the stateof-the-art in practice. But it still leaves plenty of space for improvement. In this paper, we propose an end-to-end solution TransRepair to locate the error lines and create the correct substitute for a C program simultaneously. Superior to the counterpart, our approach takes into account the context of erroneous code and diagnostic compilation feedback. Then we devise a Transformer-based neural network to learn the ways of repair from the erroneous code as well as its context and the diagnostic feedback. To increase the effectiveness of TransRepair, we summarize 5 types and 74 fine-grained sub-types of compilations errors from two real-world program\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:As9-p0eyQpQC": {"external_link": "https://www.computer.org/csdl/proceedings-article/prdc/2014/6474z009/12OmNs5rl9X", "authors": ["Jin Song Dong", "NTU Yang Liu", "Singapore Nobuyasu Kanekawa", "Yuan Fang Li", "Tian Huat Tan", "Hai Wang", "UK Aston"], "description": "Organizing Committee Toggle navigation IEEE Computer Society Digital Library Jobs Tech News \nResource Center Press Room Advertising About Us IEEE IEEE Computer Society IEEE \nComputer Society Digital Library My Subscriptions Magazines Journals Conference Proceedings \nInstitutional Subscriptions IEEE IEEE Computer Society More Jobs Tech News Resource Center \nPress Room Advertising About Us Cart All Advanced Search Conference Cover Image Download \n1.Home 2.Proceedings 3.prdc 2014 Organizing Committee 2014, pp. ix-ix, DOI Bookmark: \n10.1109/PRDC.2014.6 Keywords Authors PRDC 2014 Organizing Committee General \nCo-Chair Jin Song Dong, NUS, Singapore Jun Sun, SUTD, Singapore Program Co-Chairs \nYang Liu, NTU, Singapore Nobuyasu Kanekawa, Hitachi, Japan Finance Chair Shang-Wei \nLin, NUS, Singapore Publicity Chair Yuan Fang Li, Monash, Australia Publication Chair \u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:FV77Gu53xKkC": {"external_link": "https://ink.library.smu.edu.sg/context/sis_research/article/8053/viewcontent/felix_tnnls21_dnc.pdf", "authors": ["Alvin CHAN", "Lei MA", "Felix JUEFEI-XU", "Yew-Soon ONG", "Xiaofei XIE", "Minhui XUE", "Yang LIU"], "journal": "IEEE Transactions on Neural Networks and Learning Systems", "pages": "1-7", "description": "The ability to read, reason, and infer lies at the heart of neural reasoning architectures. After all, the ability to perform logical reasoning over language remains a coveted goal of Artificial Intelligence. To this end, models such as the Turing-complete differentiable neural computer (DNC) boast of real logical reasoning capabilities, along with the ability to reason beyond simple surface-level matching. In this brief, we propose the first probe into DNC\u2019s logical reasoning capabilities with a focus on text-based question answering (QA). More concretely, we propose a conceptually simple but effective adversarial attack based on metamorphic relations. Our proposed adversarial attack reduces DNCs\u2019 state-of-the-art accuracy from 100% to 1. 5% in the worst case, exposing weaknesses and susceptibilities in modern neural reasoning architectures. We further empirically explore possibilities to defend against such attacks and\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:O3beMyW4PBMC": {"external_link": "https://openreview.net/pdf?id=z_juuZ7yZWc", "authors": ["Wei Ma", "Shangqing Liu", "Mengjie Zhao", "Qiang Hu", "Jie Zhang", "Wenhan Wang", "Yang Liu"], "description": "A large amount of code pre-trained models have contributed significant development to code intelligence. Analysis of these pre-trained models also has revealed that they can effectively learn program syntax. However, these works are limited in analyzing code syntax and their distance-based approaches are not accurate due to the curse of high dimensionality. Furthermore, the study of the learnt program semantics of these models is rarely discussed. To further understand the code features learnt by these models, in this paper, we target two well-known representative code pre-trained models (ie, CodeBERT and GraphCodeBERT) and devise a set of probing tasks for the syntax and semantics analysis. Specifically, on one hand, we design two probing tasks (ie, syntax pair node prediction and token tagging prediction) to manipulate AST for the understanding of learnt program syntax. On the other hand, we design two tasks (ie, semantic relationship prediction and semantic propagation prediction (inGraph)) on the constructed control flow graph (CFG), data dependency graph (DDG) and control dependency graph (CDG) for the learnt program semantic analysis. In addition, to understand which kind of program semantics these pre-trained models can comprehend well, we conduct the statistical analysis for attention weights learnt by different heads and layers. Through extensive analysis in terms of program syntax and semantics, we have the following findings: 1) Both CodeBERT and GraphCodeBERT can learn the program syntax well. 2) Both Code-BERT and GraphCodeBERT can learn program semantics to different extents. GraphCodeBERT\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:TcjEerm5wdgC": {"external_link": "https://proceedings.neurips.cc/paper_files/paper/2020/file/0a73de68f10e15626eb98701ecf03adb-Supplemental.pdf", "authors": ["Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Lei Ma", "Jian Wang", "Bing Yu", "Wei Feng", "Yang Liu"], "description": "In the main paper [1] 1, we have reported the attack results of Inc-v3 on four normal trained models and four defense models, and compared with 14 attack instances on the transferability and the image quality. In this supplementary material,(1) we present the evaluation details of our method regarding the transferability on five more defense models, comparing the visualization results with SOTA attacks, and discussing the attack results of another three DNNs.(2) We also conducted an in-depth hyper-parameter analysis and ablation study of our method, and posted an interpretable explanation about the difference between our method and baselines on the transferability.(3) We validated the generalization of our method by attacking an STN-based CNN.(4) We demonstrated that our method could help enhance the blur robustness of DNNs for the classification task with the results on ImageNetC.(5) We show more adversarial attack results in the real world.(6) We discuss the defense results via re-trained DeblurGANv2 with the blurred images from our methods.Overall, the results of this supplementary material further demonstrated that the proposed adversarial blur attack can fool DNNs effectively while generating visually natural blurred images. All experimental results and discussions infer that motion blur as a common effect in the real world has a high risk of fooling SOTA DNNs and our attack methods initiate the first step to study the potential hazards of motion blur for DNNs."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:TGemctCAZTQC": {"external_link": "https://www.computer.org/csdl/proceedings-article/icstw/2013/4993ztoc/12OmNweBUF8", "authors": ["Jun Pang", "Yang Liu", "Sjouke Mauw"], "description": "Table of contents Toggle navigation IEEE Computer Society Digital Library Jobs Tech News \nResource Center Press Room Advertising About Us IEEE IEEE Computer Society IEEE \nComputer Society Digital Library My Subscriptions Magazines Journals Conference Proceedings \nInstitutional Subscriptions IEEE IEEE Computer Society More Jobs Tech News Resource \nCenter Press Room Advertising About Us Cart All Advanced Search Conference Cover Image \nDownload 1.Home 2.Proceedings 3.icstw 2013 Table of contents 2013, pp. v-xi, DOI Bookmark: \n10.1109/ICSTW.2013.5 Keywords Authors Abstract Presents the table of contents of the \nproceedings record. 2013 IEEE Sixth InternationalConference on Software Testing,Verification \nand Validation WorkshopsICSTW 2013Table of ContentsSecond International Workshop on \nEngineering Safety and Security Systems (ESSS 2013)Message from ESSS 2013 Workshop \u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:E6AQKB9d7D8C": {"external_link": "https://www.usenix.org/conference/usenixsecurity23/presentation/zhang-cen", "authors": ["Cen Zhang", "Yuekang Li", "Hao Zhou", "Xiaohan Zhang", "Yaowen Zheng", "Xian Zhan", "Xiaofei Xie", "Xiapu Luo", "Xinghua Li", "Yang Liu", "Sheikh Mahbub Habib"], "description": "This paper is under embargo and will be released on the first day of the symposium."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:KaXSsrgGW_gC": {"external_link": "https://lilicoding.github.io/papers/zhan2021research.pdf", "authors": ["Xian Zhan", "Tianming Liu", "Lingling Fan", "Li Li", "Sen Chen", "Xiapu Luo", "Yang Liu"], "description": "Third-party libraries (TPLs) have been widely used in mobile apps, which play an essential part in the entire Android ecosystem. However, TPL is a double-edged sword. On the one hand, it can ease the development of mobile apps. On the other hand, it also brings security risks such as privacy leaks or increased attack surfaces (eg, by introducing over-privileged permissions) to mobile apps. Although there are already many studies for characterizing third-party libraries, including automated detection, security and privacy analysis of TPLs, TPL attributes analysis, etc., what strikes us odd is that there is no systematic study to summarize those studies\u2019 endeavors. To this end, we conduct the first systematic literature review on Android TPL-related research. Following a well-defined systematic literature review protocol, we collected 74 primary research papers closely related to Android third-party library from 2012 to 2020. After carefully examining these studies, we designed a taxonomy of TPL-related research studies and conducted a systematic study to summarize current solutions, limitations, challenges and possible implications of new research directions related to third-party library analysis. We hope that these contributions can give readers a clear overview of existing TPL-related studies and inspire them to go beyond the current status quo by advancing the discipline with innovative approaches."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:HjGq7OYTVFUC": {"external_link": null, "authors": ["Xiaofei Xie", "Minhui Xue", "Yang Liu"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:UTh8PbecGs4C": {"external_link": null, "authors": ["Junjie Wang", "Bihuan Chen", "Lei Wei", "Yang Liu"], "conference": "2017 IEEE Symposium on Security and Privacy, SP 2017, San Jose, CA, USA, May 22\u201326, 2017", "pages": "579-594"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:k6hhvAYhr9EC": {"external_link": "https://core.ac.uk/download/pdf/287750830.pdf", "authors": ["Hao XIAO", "Jun SUN", "Yang LIU", "Shang-Wei LIN", "Chengnian SUN"], "journal": "Proceedings of the 2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE), Silicon Valley, USA, November", "pages": "11-15", "description": "Behavioral models are useful for various software engineering tasks. They are, however, often missing in practice. Thus, specification mining was proposed to tackle this problem. Existing work either focuses on learning simple behavioral models such as finite-state automata, or relies on techniques (eg, symbolic execution) to infer finite-state machines equipped with data states, referred to as stateful typestates. The former is often inadequate as finite-state automata lack expressiveness in capturing behaviors of data-rich programs, whereas the latter is often not scalable. In this work, we propose a fully automated approach to learn stateful typestates by extending the classic active learning process to generate transition guards (ie, propositions on data states). The proposed approach has been implemented in a tool called TzuYu and evaluated against a number of Java classes. The evaluation results show that TzuYu is capable of learning correct stateful typestates more efficiently."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:5y95FQUaxGgC": {"external_link": "https://core.ac.uk/download/pdf/286384066.pdf", "authors": ["Yun LIN", "Guozhu MENG", "Yinxing YUE", "Zhenchang XING", "Jun SUN", "Xin PENG", "Yang LIU", "Wenyun ZHAO", "Jin Song DONG"], "journal": "ACM International Conference on Automated Software Engineering: October", "pages": "394-404", "description": "In this paper, we propose an approach to detecting project-specific recurring designs in code base and abstracting them into design templates as reuse opportunities. The mined templates allow programmers to make further customization for generating new code. The generated code involves the code skeleton of recurring design as well as the semi-implemented code bodies annotated with comments to remind programmers of necessary modification. We implemented our approach as an Eclipse plugin called MICoDe. We evaluated our approach with a reuse simulation experiment and a user study involving 16 participants. The results of our simulation experiment on 10 open source Java projects show that, to create a new similar feature with a design template,(1) on average 69% of the elements in the template can be reused and (2) on average 60% code of the new feature can be adopted from the template. Our user study further shows that, compared to the participants adopting the copy-paste-modify strategy, the ones using MICoDe are more effective to understand a big design picture and more efficient to accomplish the code reuse task."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:noJvBAPgP0YC": {"external_link": "https://core.ac.uk/download/pdf/287750734.pdf", "authors": ["Songzheng SONG", "Jianye HAO", "Yang LIU", "Jun SUN", "Ho-fung LEUNG", "Jin Song DONG"], "journal": "Proceedings of the 34th International Conference on Software Engineering: Zurich Switzerland: ICSE", "volume": "12", "pages": "2-9", "description": "Multi-agent systems, which are composed of autonomous agents, have been successfully employed as a modeling paradigm in many scenarios. However, it is challenging to guarantee the correctness of their behaviors due to the complex nature of the autonomous agents, especially when they have stochastic characteristics. In this work, we propose to apply probabilistic model checking to analyze multi-agent systems. A modeling language called PMA is defined to specify such kind of systems, and LTL property and logic of knowledge combined with probabilistic requirements are supported to analyze system behaviors. Initial evaluation indicates the effectiveness of our current progress; meanwhile some challenges and possible solutions are discussed as our ongoing work."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:T-Bu49-jKQgC": {"external_link": null, "authors": ["Qing Guo", "Felix Juefei-Xu", "Xiaofei Xie", "Lei Ma", "Jian Wang", "Bing Yu", "Wei Feng", "Yang Liu"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:0kxB6oEY0CcC": {"external_link": "https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=a9549b1424647615873c243ff41e1e443e2ef7db", "authors": ["Luu Anh Tuan", "Yang Liu", "Jin Song Dong", "Jun Sun"], "description": "Security protocols play more and more important role with widely use in many applications nowadays. They are designed to provide security properties for users who wish to exchange messages over unsecured medium. There are many tools were designed to specify and verify security protocols such as Casper/FDR, ProVerif or AVISPA. While most of the existing tools focus on secrecy and authentication properties. few supports properties like anonymity and privacy, which are crucial in many protocols such as in electronic voting systems or anonymous online transactions. Moreover, to the best of our knowledge, there is still not have a fully automatic tool using formal methods to verify these two properties. In this paper, we introduce a framework for specifying security protocols in the Labeled Transition System (LTS) semantics model and give the formal definition for three existing types of anonymity and privacy properties using this model. We also come up with the verification algorithms for verification and implement all the ideas in a module SeVe inside PAT model checker."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:9tletLqOvukC": {"external_link": null, "authors": ["Shang-Wei Lin", "Yang Liu", "Jun Sun", "Kun Ji", "Jin Song Dong", "Fei He"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Kb2XK_T5ZYAC": {"external_link": "https://pat.comp.nus.edu.sg/wp-source/resources/public/pdf/PATManual.pdf", "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong"], "description": "Process Analysis Toolkit (PAT) is a toolset designed for specifying and verifying event-based compositional systems. In particular, it supports a variety of fairness assumptions. We explain in detail in this document the input language of PAT and its operational semantics."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kMrClmKSQGwC": {"external_link": "http://pat.comp.nus.edu.sg/wp-source/resources/publications/pdf/ssiriShaojie.pdf", "authors": ["Shaojie ZHANG", "Yang LIU"], "description": "Model Checking a Lazy Concurrent ode C ec gaay Co cu et List-Based Set Algorithm Page 1 \nModel Checking a Lazy Concurrent ode C ec gaay Co cu et List-Based Set Algorithm G Sh ji \nZHANG Shaojie, LIU Yang National University of Singapore The Fourth IEEE International \nConference on Secure Software Integration and Reliability Improvement Page 2 Agenda \u25ba \nIntroduction \u25ba Background \u25ba Our approach \u25ba Overview \u25ba Linearizability definition y \u25ba \nModeling language \u25ba Linearizability as refinement relation \u25ba Experiment \u25ba Conclusion & \nFuture Work The Fourth IEEE International Conference on Secure Software Integration and \nReliability Improvement Page 3 Introduction \u25ba Concurrent objects are notoriously hard to design \ntl correctly. \u25ba Esp. Lock-free & wait-free ones. \u25ba Linearizability is an accepted correctness \ncriterion \u25ba Linearizability is an accepted correctness criterion for shared objects. \u25ba A shared \u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:JmU_-KX0ghQC": {"external_link": "https://link.springer.com/content/pdf/10.1007/978-3-319-95582-7.pdf#page=535", "authors": ["Shang-Wei Lin", "Jun Sun"], "journal": "Formal Methods LNCS 10951", "pages": "523", "description": "Scalable and automatic formal verification for concurrent systems is always demanding. In this paper, we propose a verification framework to support automated compositional reasoning for concurrent programs with shared variables. Our framework models concurrent programs as succinct automata and supports the verification of multiple important properties. Safety verification and simulations of succinct automata are parallel compositional, and safety properties of succinct automata are preserved under refinements. We generate succinct automata from infinite state concurrent programs in an automated manner. Furthermore, we propose the first automated approach to checking rely-guarantee based simulations between infinite state concurrent programs. We have prototyped our algorithms and applied our tool to the verification of multiple refinements."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:seU1ZbiIO-YC": {"external_link": "https://www.comp.nus.edu.sg/~pat/bddlib/tr-timed.pdf", "authors": ["Nguyen Truong Khanh", "Jun Sun", "Yang Liu", "Jin Song Dong", "Yan Liu"], "description": "Complex timed systems are often composed of many components at multiple levels of hierarchy. Timed finite-state machines (TF-SMs) were proposed to model timed system components, which are designed to capture useful system features like different ways of communication among system components. In this report, we will present a short introduction about TFSMs and a rich set of system composition functions accordingly based on TFSMs. Then we will explain how to encode a TFSM as a BDD and how to generate BDD encoding of these functions without constructing the composed TFSM."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:6tHXJaRVc1QC": {"external_link": "https://www.comp.nus.edu.sg/~pat/detection/report/", "authors": ["Shao Jie Zhang", "Jun Sun", "Chengnian Sun", "Yang Liu", "Junwei Ma", "Jin Song Dong"], "description": "We present an automatic approach to detecting symmetry relations for general concurrent models. Despite the success of symmetry reduction in mitigating state explosion problem, one essential step towards its soundness and effectiveness, ie, how to discover sufficient symmetries with least human effort, is often either overlooked or oversimplified. In this work, we show how a concurrent model can be viewed as a constraint satisfaction problem (CSP), and present an algorithmcapable of detecting arbitrary symmetries arising from the CSP which induce automorphisms of the model. Unlike previous approaches, our method can automatically detect both various process and data symmetries as demonstrated via a number of systems. Further, we propose an inductive approach to inferring symmetries in a parameterized system from the symmetries detected over a small set of its instances."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:yuCoZvLJRl8C": {"external_link": null}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:aAWV-AKBBEQC": {"external_link": "https://www.comp.nus.edu.sg/~pat/bddlib/tr-hierarchical.pdf", "authors": ["Truong Khanh Nguyen", "Jun Sun", "Yang Liu", "Jin Song Dong"], "description": "Binary Decision Diagram (BDD) based symbolic model checking is capable of verifying systems with a large number of states [1]. Its effectiveness was evidenced by the recent success of the Intel i7 project, where BDD techniques have been applied to verify the i7 processor [2]. In this work, we report a BDD library which is designed to facilitate application of BDD techniques to fully hierarchical systems. The library works by firstly encoding primitive system components and then repeatedly composing encoded system components using a set of well-defined functions. We assume that primitive system components (eg, a compositional state which contains no other compositional states, or a process which invokes no other processes) are in the form of finite state machines, which are encoded using BDD in the standard way. In order to build a generally useful library, we take into account different ways of communication between system components: communication through shared memory; synchronous/asynchronous channel communication; and multi-party barrier synchronization (eg, CSP-style). Next, with process algebras like CSP and CCS in mind, a rich set of system composition functions are supported by the library. Using the provided functions, encoded system components can be composed in a variety of ways, including parallel composition, sequential composition, interrupt, choice, etc. The compositions are based on classic process algebras, but extended to support different kind of system communications. A symbolic encoding of a hierarchical system thus can be gradually obtained from bottom up using the library."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:AOeXN74AWYwC": {"external_link": null, "authors": ["Truong Khanh Nguyen", "Jun Sun", "Yang Liu", "Jin Song Dong"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:wsDUewC2rQsC": {"external_link": null, "authors": ["Ling Shi", "Yongxin Zhao", "Yang Liu", "Jun Sun", "Jin Song Dong", "Shengchao Qin"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:1W67FsDfIBAC": {"external_link": null, "authors": ["Lin Gui", "Jun Sun", "Yang Liu", "Jin Song Dong"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:wyoMR1qFDH8C": {"external_link": "https://www.researchgate.net/profile/Jun-Sun-8/publication/257411337_Parameter_Synthesis_for_Hierarchical_Concurrent_Real-Time_Systems/links/54919b6e0cf2f3c6657b6edf/Parameter-Synthesis-for-Hierarchical-Concurrent-Real-Time-Systems.pdf", "authors": ["Etienne Andr\u00e9", "Yang Liu", "Jun Sun", "Jin-Song Dong"], "description": "Modeling and verifying complex real-time systems, involving timing delays, are notoriously difficult problems. Checking the correctness of a system for one particular value for each delay does not give any information for other values. It is hence interesting to reason parametrically, by considering that the delays are parameters (unknown constants) and synthesize a constraint guaranteeing a correct behavior. We present here Parametric Stateful Timed CSP, viz., a parameterization of Stateful Timed CSP, a language capable of specifying hierarchical real-time systems with complex data structures. Although we prove that the synthesis is undecidable in general, we present an algorithm for efficient parameter synthesis that behaves well in practice."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:pQTOvowfQioC": {"external_link": "https://www.comp.nus.edu.sg/~pat/compare/icfemTech.pdf", "authors": ["Ling Shi", "Yang Liu", "Jun Sun", "Jin Song Dong", "Gustavo Carvalho"], "description": "Communicating Sequential Processes (CSP) has been widely applied to modeling and analyzing concurrent systems. There have been considerable efforts on enhancing CSP by taking data and other system aspects into account. For instance, CSPM combines CSP with a functional programming language whereas CSP# integrates high-level CSP-like process operators with low-level procedure code. Little work has been done to systematically compare these CSP extensions, which may have subtle and substantial differences. In this paper, we compare CSPM and CSP# not only on their syntax, but also operational semantics as well as their supporting tools such as FDR, ProB, and PAT. We conduct extensive experiments to compare the performance of these tools in different settings. Our comparison can be used to guide users to choose the appropriate CSP extension and verification tool based on the system characteristics."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:NxmKEeNBbOMC": {"external_link": "https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=eb41eeb600d408acd331b1739eda138d81897f80", "authors": ["Manchun Zheng", "Jun Sun", "David San\u00e1n", "Yang Liu", "Jin Song Dong", "Yu Gu"], "description": "TinyOS [7] has been widely used for developing wireless sensor network (WSN) applications. The programming language of TinyOS applications, NesC [4], provides finegrained control over the underlying devices and resources. However, due to the event-driven feature of TinyOS/NesC and the concurrent execution of sensors and computations, it could be challenging to understand, analyze or debug NesC programs or WSN operations. Unexpected behaviors, like the overflow of the task queue, can evolve to very rare and buggy scenarios which are difficult to be detected by debugging tools [3] or simulating tools like TOSSIM [6]. Model checking [2] is a verification technique to check desired properties (often expressed in temporal logic) by systematically exploring all possible scenarios of the given system. This technique has been applied to verifying both software and hardware systems. One recent success is the full verification of the Intel i7 chip using model checking techniques [5]. Model checking is often applied to high-level modeling languages like CSP, LOTOS, SDL or PROMELA, that describe the behavior of the system under analysis. Manual translation of NesC code into high-level models is a nontrivial task and can introduce additional errors that do not exist in the original code. Therefore, automatic and direct verification of NesC implementation is necessary. However, the large system behaviors usually make verification challenging, by causing the infamous state explosion problem. One representative existing model checking tool for NesC programs is T-Check [8], which is built upon TOSSIM [6] and uses explicit state model checking\u00a0\u2026"}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:c1e4I3QdEKYC": {"external_link": "https://www.researchgate.net/profile/Yang-Liu-477/publication/228413293_Technical_Report_Towards_a_Model_Checker_for_NesC_and_Wireless_Sensor_Networks/links/00b7d52799120e8dba000000/Technical-Report-Towards-a-Model-Checker-for-NesC-and-Wireless-Sensor-Networks.pdf", "authors": ["Manchun Zheng", "Jun Sun", "Yang Liu", "Jin Song Dong", "Yu Gu"], "description": "Sensor networks are expected to run unattendedly for critical tasks. To guarantee the correctness of sensor networks is important, but highly nontrivial due to the distributed nature. In this work, we present an automatic approach to directly verify sensor networks built with TinyOS applications implemented in the NesC language. To achieve this target, we firstly define a set of formal operational semantics for most of the NesC language constructs for the first time. This allows us to capture the behaviors of sensors using labelled transition systems (LTSs), which are the underlying semantic models of NesC programs. Secondly, sensor networks are modeled as the composition of sensors with a network topology. Verifications of individual sensors and sensor networks become possible by exploring the corresponding LTSs using techniques like model checking. With substantial engineering efforts, we implement this approach in a toolkit named NesC@ PAT, to support verification of deadlock-freeness, state reachability and temporal properties of sensor networks. NesC@ PAT has been applied to analyze and verify sensor networks, with unknown bugs being detected. To the best of our knowledge, NesC@ PAT is the first model checker which takes NesC language as the modeling language and completely preserves the interrupt-driven feature of the TinyOS execution model."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:eAlLMO4JVmQC": {"external_link": null, "authors": ["Kun Ji", "Shang-Wei Lin", "Yang Liu", "Jun Sun", "Jin Song Dong", "Truong Khanh Nguyen"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kJDgFkosVoMC": {"external_link": "https://www.comp.nus.edu.sg/~pat/par/asld11.pdf", "authors": ["\u00c9tienne Andr\u00e9", "Jun Sun", "Yang Liu", "Jin Song Dong"], "description": "Modeling and verifying complex real-time systems, involving timing delays, are notoriously difficult problems. One can check the correctness of a timed system for one particular value for each delay, but this does not give any information for other values. It is therefore interesting to reason parametrically, by considering that these delays are unknown constants, or parameters, and synthesize a constraint on these parameters guaranteeing a correct behavior of the system. We present here a parameterization of Stateful Timed CSP, a language capable of specifying hierarchical realtime systems with complex data structures. We show that this formalism is a subset of parametric timed automata and, although the synthesis is proved to be undecidable in the general case, we present algorithms synthesizing parameters while keeping the number of clocks small."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:kz9GbA2Ns4gC": {"external_link": null, "authors": ["Jun Sun", "Yang Liu", "Jin Song Dong", "Hai H Wang"]}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:mVmsd5A6BfQC": {"external_link": "https://www.comp.nus.edu.sg/~pat/fm/security/Technical%20report.pdf", "authors": ["Luu Anh Tuan", "Jun Sun", "Yang Liu", "Jin Song Dong"], "description": "Security protocols play more and more important role with widely use in many applications nowadays. They are designed to provide security properties for users who wish to exchange messages over unsecured medium. There are many tools were designed to specify and verify security protocols such as Casper/FDR, ProVerif or AVISPA. While most of the existing tools focus on secrecy and authentication properties. few supports properties like anonymity and privacy, which are crucial in many protocols such as in electronic voting systems or anonymous online transactions. Moreover, to the best of our knowledge, there is still not have a fully automatic tool using formal methods to verify these two properties. In this paper, we introduce a framework for specifying security protocols in the Labeled Transition System (LTS) semantics model and give the formal definition for three existing types of anonymity and privacy properties using this model. We also come up with the verification algorithms for verification and implement all the ideas in a module SeVe inside PAT model checker."}, "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=_Pvgwd0AAAAJ&cstart=600&pagesize=100&citation_for_view=_Pvgwd0AAAAJ:Wp0gIr-vW9MC": {"external_link": "https://www.comp.nus.edu.sg/~pat/fm/security/SeVe%20language.pdf", "authors": ["Luu Anh Tuan", "Jun Sun", "Yang Liu", "Jin Song Dong"], "description": "There are many languages to describe the security protocols so far; however, most of them are complicated to use or only suitable for one specific studies but not for all cases. In this section, we will investigate three well-known security languages which are commonly used: Casper, ProVerif and HLPSL. For easy comparison, I give an example description of Needham Schroeder public key protocol in three languages as well as our security language SeVe."}}